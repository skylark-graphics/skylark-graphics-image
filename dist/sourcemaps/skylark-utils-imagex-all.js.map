{"version":3,"sources":["skylark-utils-imagex-all.js"],"names":["define","skylark","dom","class2type","toString","type","split","forEach","name","toLowerCase","obj","String","call","isEmptyObject","isFunction","value","isHtmlNode","Node","isObject","isString","isWindow","window","isArray","object","constructor","Array","isArrayLike","length","isBoolean","isDefined","isDocument","nodeType","DOCUMENT_NODE","isEmpty","isNull","isNumber","isPlainObject","Object","getPrototypeOf","prototype","isSameOrigin","href","origin","location","protocol","hostname","port","startsWith","isSymbol","isObjectLike","objectToString","symbolTag","isUndefined","undefined","types","objects","filter","baseFindIndex","array","predicate","fromIndex","fromRight","index","baseIsNaN","flatten","result","i","item","j","push","baseIndexOf","compact","first","items","n","slice","inArray","indexOf","makeArray","offset","startWith","concat","map","elements","callback","key","values","uniq","idx","INFINITY","MAX_INTEGER","NAN","reTrim","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","parseInt","toFinite","toNumber","sign","other","valueOf","replace","isBinary","test","toInteger","remainder","numbers","eq","deepEq","hasOwnProperty","keysFunc","defaults","SymbolProto","Symbol","allKeys","keys","has","path","_mixin","target","source","deep","safe","_parseMixinArgs","args","params","arguments","shift","pop","sources","mixin","apply","this","_","a","b","aStack","bStack","className","areArrays","aCtor","bCtor","clone","src","checkCloneMethod","copy","l","each","undef","extend","arg","isEqual","includes","collection","guard","nativeMax","isMatch","attrs","removeItem","splice","fallback","prop","safeMixin","arrays","createClass","_constructor","_construct","init","props","parent","mixins","options","innerParent","ctor","Error","clss","unshift","superclass","cls","clsMixines","serialMixins","newCtor","xtor","Function","create","__proto__","__mixin__","mergeMixins","klassName","__mixins__","partial","proto","_super","noOverrided","overrides","fn","superFn","tmp","overrided","ret","defineProperty","extendClass","inherit","f1","klass","QueryResults","results","isPromise","then","addIterativeMethod","method","Deferred","when","delegate","total","ArrayStore","queryEngine","query","queryObject","required","execute","arr","thisObject","out","cache","buildFn","sortSet","sort","aValue","attribute","bValue","descending","start","count","Infinity","matches","idProperty","get","id","data","getIdentity","put","Math","random","overwrite","add","remove","setData","identifier","nextId","aspect","methodName","advice","receiveArguments","dispatcher","existing","executionId","before","next","around","after","newResults","signal","previous","advised","advise","TMP","debounce","wait","timeout","context","clearTimeout","setTimeout","defer","requestAnimationFrame","setTimeoutout","noop","proxy","TypeError","returnTrue","returnFalse","funcs","PGLISTENERS","PGNOTIFIES","Promise","always","handler","done","fail","catch","self","p","promise","resolve","reject","_resolve","_reject","wrapPromise","d","added","state","isResolved","isRejected","onResolved","onRejected","onProgress","progress","__ctx__","pipe","resolveWith","_resolved","notify","listener","error","reason","rejectWith","_rejected","errback","progback","all","bind","race","valueOrPromise","receivedPromise","nativePromise","deferred","cancel","err","immediate","async","parallel","ctx","rets","func","series","waterful","parseMilliSeconds","str","strs","number","isNaN","trim","Evented","on","events","selector","one","_hub","trigger","e","CustomEvent","eventName","listeners","len","reCompact","listened","event","evtArr","_events","listenTo","listening","listeningTo","_listeningTo","listeningEvents","listeningEvent","listenToOnce","off","evts","liveEvents","unlistenTo","idCounter","camelCase","toUpperCase","dasherize","deserializeValue","JSON","parse","lowerFirst","charAt","serializeValue","stringify","substitute","template","transform","getObject","match","retVal","getValue","_k","reverse","v","format","uniqueId","prefix","upperFirst","getAbsoluteUrl","url","document","createElement","Xhr","jsonpID","rscript","scriptTypeRE","xmlTypeRE","jsonType","htmlType","blankRE","XhrDefaultOptions","beforeSend","success","complete","global","accepts","script","json","xml","html","text","crossDomain","processData","xhrFields","withCredentials","mimeToDataType","mime","appendQuery","serializeData","param","traditional","serialize","scope","t","hash","escape","join","_request","xhr","XMLHttpRequest","dataType","handleAs","mimeType","headers","isFormData","FormData","basicAuthorizationToken","user","password","contentType","overrideMimeType","finish","onloadend","onabort","onprogress","ontimeout","status","getResponseHeader","responseText","eval","responseXML","Blob","xhrObj","response","reponse","statusText","evt","open","hdr","setRequestHeader","send","abort","request","post","patch","del","defaultOptions","strings","Restful","idAttribute","getBaseUrl","baseEndpoint","baseUrl","server","basePath","_head","_get","_post","verb","_put","_delete","_patch","retrieve","update","delete","Stateful","attributes","cid","cidPrefix","set","changed","validationError","toJSON","attr","val","_validate","unset","silent","changes","changing","_changing","_previousAttributes","current","prev","_pending","clear","hasChanged","changedAttributes","diff","old","previousAttributes","isNew","isValid","validate","datetimes","_uid","langx","createEvent","funcArg","payload","getQueryParams","segs","queryParam","nv","toPixel","parseFloat","uid","URL","webkitURL","vendorPrefix","vendorPrefixRE","transEndEventNames","WebkitTransition","MozTransition","OTransition","transition","transEndEventName","css3PropPrefix","css3EventPrefix","cssStyles","cssProps","vendorPrefixesRE","testEl","matchesSelector","webkitMatchesSelector","mozMatchesSelector","oMatchesSelector","requestFullScreen","requestFullscreen","webkitRequestFullscreen","mozRequestFullScreen","msRequestFullscreen","testStyle","exitFullscreen","webkitCancelFullScreen","mozCancelFullScreen","msExitFullscreen","style","matched","RegExp","cssPropName","browser","isIE","exec","navigator","userAgent","normalizeStyleProperty","normalizeCssProperty","normalizeCssEvent","support","end","every","maybeAddPx","cssNumber","column-count","columns","font-weight","line-height","opacity","z-index","zoom","classReCache","classRE","node","svg","baseVal","elementDisplay","getStyles","elem","view","ownerDocument","defaultView","opener","getComputedStyle","styler","autocssfix","cssHooks","addClass","elm","names","re","css","property","computedStyle","getPropertyValue","removeProperty","cssText","disabled","hasClass","hide","isInvisible","removeClass","show","nodeName","element","display","body","appendChild","parentNode","removeChild","defaultDisplay","toggleClass","fragmentRE","singleTagRE","div","table","tableBody","tableRow","containers","tr","tbody","thead","tfoot","td","th","*","rootNodeRE","ensureNodes","nodes","copyByClone","cloneNode","append","placing","tag","setAttribute","rxhtmlTag","isChildOf","directly","documentElement","contains","ownerDoc","noder","active","doc","el","activeElement","blur","getAttribs","setAttrib","getAttrib","contents","chkName","contentDocument","childNodes","createFragment","$1","container","innerHTML","child","createTextNode","empty","hasChildNodes","firstChild","fullScreen","exitFullScreen","fullscreenElement","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","focusable","hasTabindex","mapName","img","focusableIfVisible","fieldset","$","is","closest","visible","isDoc","offsetParent","ownerWindow","parentWindow","refNode","nextSibling","insertBefore","prepend","console","warn","children","oldNode","replaceChild","throb","timer","time","throbber","overlayDiv","position","top","left","width","height","zIndex","overlay","textNode","nodeValue","traverse","wrapper","wrapperNode","wrapperInner","unwrap","velm","local","nativeMatchesSelector","parsed","separatorIndex","combinatorIndex","reversed","from","reverseCache","reUnescape","expression","isReversed","Slick","currentCache","expressions","raw","regexp","parser","reverseCombinator","combinator","exp","last","parts","cexp","escapeRegExp","string","rawMatch","separator","combinatorChildren","tagName","attributeKey","attributeOperator","attributeQuote","attributeValue","pseudoMarker","pseudoClass","pseudoQuote","pseudoClassQuotedValue","pseudoClassValue","currentSeparator","currentParsed","classList","classes","pseudos","operator","rinputs","rheader","parseSelector","button","checked","enabled","even","focus","tabindex","gt","sel","find","header","hidden","input","lt","not","odd","selected","tabbable","tabIndex","offsetWidth","createInputPseudo","createButtonPseudo","isArrayFilter","radio","checkbox","file","image","submit","reset","ancestors","root","rootIsSelector","descendants","querySelectorAll","matchError","descendant","querySelector","lastChild","previousSibling","check","adjacent","nextSiblings","previousSiblings","siblings","divide","cond","nativeSelector","customPseudos","part","arrayFilte","pseudo","getAttribute","hasAttribute","currentExpression","simpleExpCounter","filterSingle","matchs","combine","bit","node1","op","divided","single","currentBit","founds","found","currentItems","finder","ancestor","byId","getElementById","findAll","capitalRE","propMap","readonly","for","class","maxlength","cellspacing","cellpadding","rowspan","colspan","usemap","frameborder","contenteditable","attrName","_store","confirm","store","_attributeData","_setData","dataAttrName","camelName","_getData","cleanData","pluck","datax","dataName","aria","removeAttr","removeAttribute","removeData","removeProp","txt","textContent","multiple","selectedOptions","option","ignoreProperties","eventMethods","preventDefault","stopImmediatePropagation","stopPropagation","readyRE","compatible","isDefaultPrevented","sourceMethod","ns","EventCtors","NativeEvents","compositionstart","compositionend","compositionupdate","beforecopy","beforecut","beforepaste","cut","paste","drag","dragend","dragenter","dragexit","dragleave","dragover","dragstart","drop","change","selectionchange","focusin","focusout","keydown","keypress","keyup","message","click","contextmenu","dblclick","mousedown","mouseup","mousemove","mouseover","mouseout","mouseenter","mouseleave","textInput","touchstart","touchmove","touchend","load","resize","select","scroll","unload","wheel","bubbles","cancelable","namespace","getEventCtor","createProxy","originalEvent","specialEvents","focusinSupported","hover","realEvent","handlers","EventBindings","_target","_event","_bindings","bindings","binding","_listener","domEvt","_args","isImmediatePropagationStopped","currentTarget","liveFired","related","relatedTarget","addEventListener","matcher","removing","removeEventListener","EventsHandler","_handler","register","specialEvent","bindingEvent","bindType","bindEventName","unregister","findHandler","ready","readyState","keyCodeLookup","backspace","comma","down","enter","home","page_down","page_up","period","right","space","tab","up","eventer","transitionEnd","delegateType","shortcuts","registry","run","shortcut","metaKey","ctrlKey","ctrl","alt","altKey","shiftKey","keyCode","charCode","pattern","shortcutKey","setting","charCodeAt","regKey","special","stop","evented","Event","dispatchEvent","cachedScrollbarWidth","px","scrollbarWidth","w1","w2","innerDiv","clientWidth","borderExtents","bottom","s","borderLeftWidth","borderTopWidth","borderRightWidth","borderBottomWidth","boundingPosition","coords","getBoundingClientRect","parentOffset","mex","marginExtents","pbex","relativePosition","boundingRect","size","clientSize","dimension","clientHeight","isBorderBox","bex","pex","paddingExtents","getDocumentSize","max","scrollWidth","scrollHeight","offsetHeight","marginLeft","marginTop","marginRight","marginBottom","marginSize","me","paddingLeft","paddingTop","paddingRight","paddingBottom","pagePosition","pageXOffset","pageYOffset","relativeRect","scrollLeft","hasScrollLeft","scrollTo","scrollY","scrollTop","hasScrollTop","scrollX","innerWidth","innerHeight","geom","contentRect","cs","marginRect","pageRect","round","scrollIntoView","align","x","y","parentWidth","parentHeight","parentElm","pos","rootElm","offsetLeft","offsetTop","getOffset","abs","rhorizontal","rvertical","roffset","rposition","rpercent","getOffsets","offsets","parseCss","positions","fit","newOverRight","within","withinOffset","outerWidth","collisionPosLeft","collisionPosition","overLeft","overRight","collisionWidth","newOverBottom","outerHeight","collisionPosTop","overTop","overBottom","collisionHeight","flip","newOverLeft","myOffset","my","elemWidth","atOffset","at","targetWidth","newOverTop","elemHeight","targetHeight","flipfit","posit","targetOffset","basePosition","dimensions","of","withinElement","hasOffset","msize","scrollInfo","overflowX","overflowY","hasOverflowX","getScrollInfo","collision","pageY","pageX","horizontalOffset","verticalOffset","using","dir","feedback","horizontal","vertical","important","css3Transform","getZoom","scale","radian","Cos","Sin","matrix","cos","sin","M11","M12","M21","M22","toFixed","transformData","calcs","PI","rotate","degress","hZoom","vZoom","zoomin","zoomout","transforms","calcFunc","animationName","animationDuration","animationTiming","transitionProperty","transitionDuration","transitionTiming","transitionDelay","animationEnd","supportedTransforms","cssReset","animate","properties","duration","ease","delay","endEvent","wrappedCallback","cssValues","cssProperties","that","fired","easing","fx","speeds","normal","eace","clientLeft","scrollToTop","speed","scrollFrom","freq","interval","setInterval","clearInterval","fadeTo","fadeIn","fadeOut","slideDown","visibility","overflow","slideUp","queue","fast","slow","emulateTransitionEnd","called","fadeToggle","ceasing","allback","slideToggle","toggle","isQ","some","rquickExpr","wrapper_map","wrapper_selector","wrapper_every_act","wrapper_every_act_firstArgFunc","oldValueFunc","arg1","wrapper_name_value","wrapper_value","newValue","NodeList","toArray","excludes","parents","parentsUntil","util","pushStack","elms","prevObject","replaceWith","newContent","wrap","structure","wrapAll","wrappingElement","wrapInner","prevAll","nextAll","wrapper_some_chk","detach","fnOver","fnOut","Dimension","m","margin","cb","mb","wrapper_node_operation","argType","appendTo","prependTo","insertAfter","replaceAll","original","elems","insert","toogle","scrollParent","includeHidden","excludeStaticParent","overflowRegex","andSelf","addBack","eventType","place","addContent","content","replaceClass","newClass","oldClass","disableSelection","enableSelection","plugin","returnValue","plugins","instantiate","watch","imgs","totalCount","progressedCount","successedCount","faileredCount","successed","failered","isLoaded","progressed","isCompleted","naturalWidth","loaded","addBackgroundImage","elm1","Image","childImgs","background","viewer","loadedCallback","onload","onerror","_load","border","padding","_init","dispose","images","imagesLoaded","imagesViewer","preload","urls","main"],"mappings":";;;;;;;g4BAAAA,OAAA,2BAAA,WAIA,WAGAA,OAAA,6BAAA,yBAAA,SAAAC,GACA,OAAAA,IAGAD,OAAA,yBAAA,aAAA,SAAAC,GACA,OAAAA,EAAAC,SAGAF,OAAA,yBACA,WACA,IAGAG,EAHAC,KAAAA,SAEAC,GACAF,KAGA,uEAAAG,MAAA,KAAAC,QAAA,SAAAC,GACAL,EAAA,WAAAK,EAAA,KAAAA,EAAAC,gBAGA,SAAAC,GACA,OAAA,MAAAA,EAAAC,OAAAD,GACAP,EAAAC,EAAAQ,KAAAF,KAAA,WAfA,SAAAG,EAAAH,GACA,IAAAF,EACA,IAAAA,KAAAE,EACA,GAAA,OAAAA,EAAAF,GACA,OAAA,EAGA,OAAA,EAiBA,SAAAM,EAAAC,GACA,MAAA,YAAAV,EAAAU,GAGA,SAAAC,EAAAN,GACA,OAAAA,GAAAA,aAAAO,KA8BA,SAAAC,EAAAR,GACA,MAAA,UAAAL,EAAAK,GAOA,SAAAS,EAAAT,GACA,MAAA,iBAAAA,EAGA,SAAAU,EAAAV,GACA,OAAAA,GAAAA,GAAAA,EAAAW,OAmCA,OAEAC,QA1FA,SAAAC,GACA,OAAAA,GAAAA,EAAAC,cAAAC,OA2FAC,YAjEA,SAAAhB,GACA,OAAAS,EAAAT,KAAAM,EAAAN,IAAA,iBAAAA,EAAAiB,SAAAb,EAAAJ,IAkEAkB,UA7HA,SAAAlB,GACA,MAAA,kBAAA,GA8HAmB,UA3HA,SAAAnB,GACA,YAAA,IAAAA,GA4HAoB,WAzHA,SAAApB,GACA,OAAA,MAAAA,GAAAA,EAAAqB,UAAArB,EAAAsB,eA0HAC,QAAApB,EAEAA,cAAAA,EAEAC,WAAAA,EAEAE,WAAAA,EAEAkB,OA5EA,SAAAnB,GACA,MAAA,SAAAV,EAAAU,IA6EAoB,SA1EA,SAAAzB,GACA,MAAA,iBAAAA,GA2EAQ,SAAAA,EAEAkB,cAtEA,SAAA1B,GACA,OAAAQ,EAAAR,KAAAU,EAAAV,IAAA2B,OAAAC,eAAA5B,IAAA2B,OAAAE,WAuEApB,SAAAA,EAEAqB,aA9DA,SAAAC,GACA,GAAAA,EAAA,CACA,IAAAC,EAAAC,SAAAC,SAAA,KAAAD,SAAAE,SAIA,OAHAF,SAAAG,OACAJ,GAAA,IAAAC,SAAAG,MAEAL,EAAAM,WAAAL,KA0DAM,SAzCA,SAAAjC,GACA,MAAA,iBAAAA,GACAkC,aAAAlC,IAAAmC,eAAAtC,KAAAG,IAAAoC,WAyCAC,YAtCA,SAAArC,GACA,YAAAsC,IAAAtC,GAuCAK,SAAAA,EAEAf,KAAAA,KAIAL,OAAA,wBACA,WACA,SAAAsD,EAAAC,GACA,IAAAC,EAAA/B,MAAAc,UAAAiB,OACA9B,EAAA4B,EAAA5B,YAYA,SAAA+B,EAAAC,EAAAC,EAAAC,EAAAC,GAIA,IAHA,IAAAlC,EAAA+B,EAAA/B,OACAmC,EAAAF,GAAAC,EAAA,GAAA,GAEAA,EAAAC,MAAAA,EAAAnC,GACA,GAAAgC,EAAAD,EAAAI,GAAAA,EAAAJ,GACA,OAAAI,EAGA,OAAA,EAiCA,SAAAC,EAAAhD,GACA,OAAAA,GAAAA,EAUA,SAAAiD,EAAAN,GACA,GAAAhC,EAAAgC,GAAA,CAEA,IADA,IAAAO,KACAC,EAAA,EAAAA,EAAAR,EAAA/B,OAAAuC,IAAA,CACA,IAAAC,EAAAT,EAAAQ,GACA,GAAAxC,EAAAyC,GACA,IAAA,IAAAC,EAAA,EAAAA,EAAAD,EAAAxC,OAAAyC,IACAH,EAAAI,KAAAF,EAAAC,SAGAH,EAAAI,KAAAF,GAGA,OAAAF,EAEA,OAAAP,EAoEA,OACAD,cAAAA,EAEAa,YAvHA,SAAAZ,EAAA3C,EAAA6C,GACA,GAAA7C,GAAAA,EACA,OAAA0C,EAAAC,EAAAK,EAAAH,GAEA,IAAAE,EAAAF,EAAA,EACAjC,EAAA+B,EAAA/B,OAEA,OAAAmC,EAAAnC,GACA,GAAA+B,EAAAI,KAAA/C,EACA,OAAA+C,EAGA,OAAA,GA6GAS,QA9FA,SAAAb,GACA,OAAAF,EAAA5C,KAAA8C,EAAA,SAAAS,GACA,OAAA,MAAAA,KA8FAK,MAAA,SAAAC,EAAAC,GACA,OAAAA,EACAD,EAAAE,MAAA,EAAAD,GAEAD,EAAA,IAIAT,QAAAA,EAEAY,QApEA,SAAAT,EAAAT,GACA,IAAAA,EACA,OAAA,EAEA,IAAAQ,EAEA,GAAAR,EAAAmB,QACA,OAAAnB,EAAAmB,QAAAV,GAGAD,EAAAR,EAAA/B,OACA,KAAAuC,KACA,GAAAR,EAAAQ,KAAAC,EACA,OAAAD,EAIA,OAAA,GAqDAY,UAlDA,SAAApE,EAAAqE,EAAAC,GACA,GAAAtD,EAAAhB,GACA,OAAAsE,OAAAC,OAAAxD,MAAAc,UAAAoC,MAAA/D,KAAAF,EAAAqE,GAAA,IAIA,OAAArE,IA8CAwE,IA3CA,SAAAC,EAAAC,GACA,IAAArE,EACAmD,EAAAmB,EADAC,KAEA,GAAA5D,EAAAyD,GACA,IAAAjB,EAAA,EAAAA,EAAAiB,EAAAxD,OAAAuC,IAEA,OADAnD,EAAAqE,EAAAxE,KAAAuE,EAAAjB,GAAAiB,EAAAjB,GAAAA,KACAoB,EAAAjB,KAAAtD,QAGA,IAAAsE,KAAAF,EAEA,OADApE,EAAAqE,EAAAxE,KAAAuE,EAAAE,GAAAF,EAAAE,GAAAA,KACAC,EAAAjB,KAAAtD,GAEA,OAAAiD,EAAAsB,IAgCAC,KA7BA,SAAA7B,GACA,OAAAF,EAAA5C,KAAA8C,EAAA,SAAAS,EAAAqB,GACA,OAAA9B,EAAAmB,QAAAV,IAAAqB,QA+BAxF,OAAA,yBACA,WACA,SAAAsD,GACA,IAAApC,EAAAoC,EAAApC,SACA8B,EAAAM,EAAAN,SAEAyC,EAAA,EAAA,EAEAC,EAAA,uBACAC,EAAA,IAGAC,EAAA,aAGAC,EAAA,qBAGAC,EAAA,aAGAC,EAAA,cAMAC,EAAAC,SAyBA,SAAAC,EAAAnF,GACA,IAAAA,EACA,OAAA,IAAAA,EAAAA,EAAA,EAGA,IADAA,EAAAoF,EAAApF,MACA0E,GAAA1E,KAAA0E,EAAA,CACA,IAAAW,EAAArF,EAAA,GAAA,EAAA,EACA,OAAAqF,EAAAV,EAEA,OAAA3E,GAAAA,EAAAA,EAAA,EAyDA,SAAAoF,EAAApF,GACA,GAAA,iBAAAA,EACA,OAAAA,EAEA,GAAAiC,EAAAjC,GACA,OAAA4E,EAEA,GAAAzE,EAAAH,GAAA,CACA,IAAAsF,EAAA,mBAAAtF,EAAAuF,QAAAvF,EAAAuF,UAAAvF,EACAA,EAAAG,EAAAmF,GAAAA,EAAA,GAAAA,EAEA,GAAA,iBAAAtF,EACA,OAAA,IAAAA,EAAAA,GAAAA,EAEAA,EAAAA,EAAAwF,QAAAX,EAAA,IACA,IAAAY,EAAAV,EAAAW,KAAA1F,GACA,OAAAyF,GAAAT,EAAAU,KAAA1F,GACAiF,EAAAjF,EAAA4D,MAAA,GAAA6B,EAAA,EAAA,GACAX,EAAAY,KAAA1F,GAAA4E,GAAA5E,EAGA,OACAmF,SAAAA,EACAC,SAAAA,EACAO,UAtDA,SAAA3F,GACA,IAAAkD,EAAAiC,EAAAnF,GACA4F,EAAA1C,EAAA,EAEA,OAAAA,GAAAA,EAAA0C,EAAA1C,EAAA0C,EAAA1C,EAAA,MAqDAjE,OAAA,yBACA,UACA,aACA,SAAAsD,EAAAsD,GACA,IA+BAC,EAAAC,EA/BAC,EAAA1E,OAAAE,UAAAwE,eACApC,EAAAlD,MAAAc,UAAAoC,MACA/C,EAAA0B,EAAA1B,UACAd,EAAAwC,EAAAxC,WACAI,EAAAoC,EAAApC,SACAkB,EAAAkB,EAAAlB,cACAd,EAAAgC,EAAAhC,QACAI,EAAA4B,EAAA5B,YACAP,EAAAmC,EAAAnC,SACAuF,EAAAE,EAAAF,UAuBA,IApBAM,EAAAC,EAoBAC,EAAA,oBAAAC,OAAAA,OAAA5E,UAAA,KA0GA,SAAA6E,EAAA1G,GACA,IAAAQ,EAAAR,GAAA,SACA,IAAA2G,KACA,IAAA,IAAAhC,KAAA3E,EAAA2G,EAAAhD,KAAAgB,GACA,OAAAgC,EA0DA,SAAAC,EAAA5G,EAAA6G,GACA,IAAAjG,EAAAiG,GACA,OAAA,MAAA7G,GAAAqG,EAAAnG,KAAAF,EAAA6G,GAGA,IADA,IAAA5F,EAAA4F,EAAA5F,OACAuC,EAAA,EAAAA,EAAAvC,EAAAuC,IAAA,CACA,IAAAmB,EAAAkC,EAAArD,GACA,GAAA,MAAAxD,IAAAqG,EAAAnG,KAAAF,EAAA2E,GACA,OAAA,EAEA3E,EAAAA,EAAA2E,GAEA,QAAA1D,EAgEA,SAAA6F,EAAAC,EAAAC,EAAAC,EAAAC,GACA,IAAA,IAAAvC,KAAAqC,EAIAE,QAAAvE,IAAAoE,EAAApC,KAGAsC,IAAAvF,EAAAsF,EAAArC,KAAA/D,EAAAoG,EAAArC,MACAjD,EAAAsF,EAAArC,MAAAjD,EAAAqF,EAAApC,MACAoC,EAAApC,OAEA/D,EAAAoG,EAAArC,MAAA/D,EAAAmG,EAAApC,MACAoC,EAAApC,OAEAmC,EAAAC,EAAApC,GAAAqC,EAAArC,GAAAsC,EAAAC,SACAvE,IAAAqE,EAAArC,KACAoC,EAAApC,GAAAqC,EAAArC,KAGA,OAAAoC,EAGA,SAAAI,EAAAC,GACA,IAAAC,EAAApD,EAAA/D,KAAAoH,UAAA,GACAP,EAAAM,EAAAE,QACAN,GAAA,EAKA,OAJA/F,EAAAmG,EAAAA,EAAApG,OAAA,MACAgG,EAAAI,EAAAG,QAIAT,OAAAA,EACAU,QAAAJ,EACAJ,KAAAA,GAIA,SAAAS,IACA,IAAAN,EAAAD,EAAAQ,MAAAC,KAAAN,WAKA,OAHAF,EAAAK,QAAA5H,QAAA,SAAAmH,GACAF,EAAAM,EAAAL,OAAAC,EAAAI,EAAAH,MAAA,KAEAG,EAAAL,OAmDA,SAAAnC,EAAA5E,GAIA,IAHA,IAAA2G,EAAAkB,EAAAlB,KAAA3G,GACAiB,EAAA0F,EAAA1F,OACA2D,EAAA7D,MAAAE,GACAuC,EAAA,EAAAA,EAAAvC,EAAAuC,IACAoB,EAAApB,GAAAxD,EAAA2G,EAAAnD,IAEA,OAAAoB,EA6BA,OArXAuB,EAAA,SAAA2B,EAAAC,EAAAC,EAAAC,GAGA,GAAAH,IAAAC,EAAA,OAAA,IAAAD,GAAA,EAAAA,GAAA,EAAAC,EAEA,GAAA,MAAAD,GAAA,MAAAC,EAAA,OAAA,EAEA,GAAAD,GAAAA,EAAA,OAAAC,GAAAA,EAEA,IAAApI,SAAAmI,EACA,OAAA,aAAAnI,GAAA,WAAAA,GAAA,iBAAAoI,IACA3B,EAAA0B,EAAAC,EAAAC,EAAAC,IAIA7B,EAAA,SAAA0B,EAAAC,EAAAC,EAAAC,GAKA,IAAAC,EAAAxI,SAAAQ,KAAA4H,GACA,GAAAI,IAAAxI,SAAAQ,KAAA6H,GAAA,OAAA,EACA,OAAAG,GAEA,IAAA,kBAEA,IAAA,kBAGA,MAAA,GAAAJ,GAAA,GAAAC,EACA,IAAA,kBAGA,OAAAD,IAAAA,GAAAC,IAAAA,EAEA,IAAAD,EAAA,GAAAA,GAAA,EAAAC,GAAAD,IAAAC,EACA,IAAA,gBACA,IAAA,mBAIA,OAAAD,IAAAC,EACA,IAAA,kBACA,OAAAvB,EAAAZ,QAAA1F,KAAA4H,KAAAtB,EAAAZ,QAAA1F,KAAA6H,GAGA,IAAAI,EAAA,mBAAAD,EACA,IAAAC,EAAA,CACA,GAAA,iBAAAL,GAAA,iBAAAC,EAAA,OAAA,EAGA,IAAAK,EAAAN,EAAAhH,YAAAuH,EAAAN,EAAAjH,YACA,GAAAsH,IAAAC,KAAAjI,EAAAgI,IAAAA,aAAAA,GACAhI,EAAAiI,IAAAA,aAAAA,IACA,gBAAAP,GAAA,gBAAAC,EACA,OAAA,EAQAC,EAAAA,MACAC,EAAAA,MAEA,IADA,IAAAhH,EAAA+G,EAAA/G,OACAA,KAGA,GAAA+G,EAAA/G,KAAA6G,EAAA,OAAAG,EAAAhH,KAAA8G,EAQA,GAJAC,EAAArE,KAAAmE,GACAG,EAAAtE,KAAAoE,GAGAI,EAAA,CAGA,IADAlH,EAAA6G,EAAA7G,UACA8G,EAAA9G,OAAA,OAAA,EAEA,KAAAA,KACA,IAAAkF,EAAA2B,EAAA7G,GAAA8G,EAAA9G,GAAA+G,EAAAC,GAAA,OAAA,MAEA,CAEA,IAAAtD,EAAAgC,EAAAhF,OAAAgF,KAAAmB,GAGA,GAFA7G,EAAA0F,EAAA1F,OAEAU,OAAAgF,KAAAoB,GAAA9G,SAAAA,EAAA,OAAA,EACA,KAAAA,KAGA,GADA0D,EAAAgC,EAAA1F,QACA0B,IAAAoF,EAAApD,KAAAwB,EAAA2B,EAAAnD,GAAAoD,EAAApD,GAAAqD,EAAAC,GAAA,OAAA,EAMA,OAFAD,EAAAR,MACAS,EAAAT,OACA,IAkRAd,QAAAA,EAEA4B,MA3BA,SAAAA,EAAAC,EAAAC,GACA,IAAAC,EACA,QAAA9F,IAAA4F,GAAA,OAAAA,EACAE,EAAAF,OACA,GAAAC,GAAAD,EAAAD,MACAG,EAAAF,EAAAD,aACA,GAAA1H,EAAA2H,GAAA,CACAE,KACA,IAAA,IAAAjF,EAAA,EAAAA,EAAA+E,EAAAtH,OAAAuC,IACAiF,EAAA9E,KAAA2E,EAAAC,EAAA/E,UAEA,GAAA9B,EAAA6G,GAEA,IAAA,IAAA5D,KADA8D,KACAF,EACAE,EAAA9D,GAAA2D,EAAAC,EAAA5D,SAGA8D,EAAAF,EAGA,OAAAE,GASAlC,UAhZAD,EAgZAI,EAhZAH,GAgZA,EA/YA,SAAAvG,GACA,IAAAiB,EAAAqG,UAAArG,OAEA,GADAsF,IAAAvG,EAAA2B,OAAA3B,IACAiB,EAAA,GAAA,MAAAjB,EAAA,OAAAA,EACA,IAAA,IAAAoD,EAAA,EAAAA,EAAAnC,EAAAmC,IAIA,IAHA,IAAA4D,EAAAM,UAAAlE,GACAuD,EAAAL,EAAAU,GACA0B,EAAA/B,EAAA1F,OACAuC,EAAA,EAAAA,EAAAkF,EAAAlF,IAAA,CACA,IAAAmB,EAAAgC,EAAAnD,GACA+C,QAAA,IAAAvG,EAAA2E,KAAA3E,EAAA2E,GAAAqC,EAAArC,IAGA,OAAA3E,IAoYA2I,KA7QA,SAAA3I,EAAA0E,GACA,IAAAzD,EAAA0D,EAAAnB,EAAAnD,EAEA,GAAAL,EAGA,QALA4I,KAGA3H,EAAAjB,EAAAiB,SAIA,IAAA0D,KAAA3E,EACA,GAAAA,EAAAqG,eAAA1B,KACAtE,EAAAL,EAAA2E,IACA,IAAAD,EAAAxE,KAAAG,EAAAsE,EAAAtE,IACA,WAMA,IAAAmD,EAAA,EAAAA,EAAAvC,IACAZ,EAAAL,EAAAwD,IACA,IAAAkB,EAAAxE,KAAAG,EAAAmD,EAAAnD,IAFAmD,KASA,OAAAoE,MAoPAiB,OAjPA,SAAA9B,GACA,IAAAE,EAAAG,EAAAnD,EAAA/D,KAAAoH,UAAA,GACA,kBAAAP,IACAE,EAAAF,EACAA,EAAAK,EAAAG,SAEA,GAAAH,EAAAnG,SACAmG,GAAAL,GACAA,EAAAa,MAKA,OAHAR,EAAAvH,QAAA,SAAAiJ,GACApB,EAAAX,EAAA+B,EAAA7B,KAEAF,GAsOAH,IAAAA,EAEAmC,QAhKA,SAAAjB,EAAAC,GACA,OAAA5B,EAAA2B,EAAAC,IAiKAiB,SAjLA,SAAAC,EAAA5I,EAAA6C,EAAAgG,GACAD,EAAAjI,EAAAiI,GAAAA,EAAArE,EAAAqE,GACA/F,EAAAA,IAAAgG,EAAAlD,EAAA9C,GAAA,EAEA,IAAAjC,EAAAgI,EAAAhI,OACAiC,EAAA,IACAA,EAAAiG,UAAAlI,EAAAiC,EAAA,IAEA,OAAAzC,EAAAwI,GACA/F,GAAAjC,GAAAgI,EAAA9E,QAAA9D,EAAA6C,IAAA,IACAjC,GAAA2C,YAAAqF,EAAA5I,EAAA6C,IAAA,GAyKAkG,QA/JA,SAAAvI,EAAAwI,GACA,IAAA1C,EAAAA,EAAA0C,GAAApI,EAAA0F,EAAA1F,OACA,GAAA,MAAAJ,EAAA,OAAAI,EAEA,IADA,IAAAjB,EAAA2B,OAAAd,GACA2C,EAAA,EAAAA,EAAAvC,EAAAuC,IAAA,CACA,IAAAmB,EAAAgC,EAAAnD,GACA,GAAA6F,EAAA1E,KAAA3E,EAAA2E,MAAAA,KAAA3E,GAAA,OAAA,EAEA,OAAA,GAyJA2G,KAzOA,SAAA3G,GACA,GAAAQ,EAAAR,GAAA,SACA,IAAA2G,KACA,IAAA,IAAAhC,KAAA3E,EAAA4G,EAAA5G,EAAA2E,IAAAgC,EAAAhD,KAAAgB,GACA,OAAAgC,GAuOAe,MAAAA,EAEA4B,WA3GA,SAAAvF,EAAAN,GACA,GAAA7C,EAAAmD,GAAA,CACA,IAAAe,EAAAf,EAAAI,QAAAV,IACA,GAAAqB,GACAf,EAAAwF,OAAAzE,EAAA,QAEA,GAAApD,EAAAqC,GACA,IAAA,IAAAY,KAAAZ,EACA,GAAAA,EAAAY,IAAAlB,EAAA,QACAM,EAAAY,GACA,MAKA,OAAAiD,MA8FArE,OA3FA,SAAAvD,EAAA6G,EAAA2C,GACA5I,EAAAiG,KACAA,GAAAA,IAEA,IAAA5F,EAAA4F,EAAA5F,OACA,IAAAA,EACA,OAAAb,EAAAoJ,GAAAA,EAAAtJ,KAAAF,GAAAwJ,EAEA,IAAA,IAAAhG,EAAA,EAAAA,EAAAvC,EAAAuC,IAAA,CACA,IAAAiG,EAAA,MAAAzJ,OAAA,EAAAA,EAAA6G,EAAArD,SACA,IAAAiG,IACAA,EAAAD,EACAhG,EAAAvC,GAEAjB,EAAAI,EAAAqJ,GAAAA,EAAAvJ,KAAAF,GAAAyJ,EAGA,OAAAzJ,GA4EA0J,UAzEA,WACA,IAAAtC,EAAAD,EAAAQ,MAAAC,KAAAN,WAKA,OAHAF,EAAAK,QAAA5H,QAAA,SAAAmH,GACAF,EAAAM,EAAAL,OAAAC,EAAAI,EAAAH,MAAA,KAEAG,EAAAL,QAqEAnC,OAAAA,KAMAtF,OAAA,uBACA,WACA,YACA,WACA,SAAAqK,EAAA9G,EAAAD,GACA,IAAAiC,EAAA8E,EAAA9E,KACA+B,EAAA/D,EAAA+D,IACAc,EAAA7E,EAAA6E,MACA9G,EAAAgC,EAAAhC,QACAO,EAAAyB,EAAAzB,UAuDA,IAsLAyI,EAtLA,WAsGA,SAAAC,IACA,OAAAjC,KAAAkC,WACAlC,KAAAkC,WAAAnC,MAAAC,KAAAN,WACAM,KAAAmC,KACAnC,KAAAmC,KAAApC,MAAAC,KAAAN,gBADA,EAKA,OAAA,SAAAsC,EAAAI,EAAAC,EAAAC,EAAAC,GACAvJ,EAAAqJ,KACAE,EAAAD,EACAA,EAAAD,EACAA,EAAA,MAEAA,EAAAA,GAAAtI,OAEAR,EAAA+I,KAAAtJ,EAAAsJ,KACAC,EAAAD,EACAA,GAAA,GAGA,IAAAE,EAAAH,EAEAC,IACAA,EAlFA,SAAAG,EAAAH,GACA,IAAA3G,KAmCA,OAjCA2G,EAAArK,QAAA,SAAA6H,GACA,GAAAd,EAAAc,EAAA,cACA,MAAA,IAAA4C,MAAA,iBAGA,IADA,IAAAC,KACA7C,GACA6C,EAAAC,QAAA9C,GACAA,EAAAA,EAAA+C,WAEAlH,EAAAA,EAAAgB,OAAAgG,MAKAhH,GAFAA,EAAAsB,EAAAtB,IAEAT,OAAA,SAAA4E,GAEA,IADA,IAAAgD,EAAAL,EACAK,GAAA,CACA,GAAAhD,IAAAgD,EACA,OAAA,EAEA,GAAA9D,EAAA8D,EAAA,cAEA,IADA,IAAAC,EAAAD,EAAA,WACAlH,EAAA,EAAAA,EAAAmH,EAAA1J,OAAAuC,IACA,GAAAmH,EAAAnH,KAAAkE,EACA,OAAA,EAIAgD,EAAAA,EAAAD,WAEA,OAAA,KAGAxJ,OAAA,GACAsC,EA6CAqH,CAAAR,EAAAF,IAGAA,IACAE,EA3CA,SAAAC,EAAAH,GAEA,IADA,IAAAW,EAAAR,EACA7G,EAAA,EAAAA,EAAA0G,EAAAjJ,OAAAuC,IAAA,CACA,IAAAsH,EAAA,IAAAC,SACAD,EAAAjJ,UAAAF,OAAAqJ,OAAAH,EAAAhJ,WACAiJ,EAAAG,UAAAJ,EACAC,EAAAL,WAAA,KACA/C,EAAAoD,EAAAjJ,UAAAqI,EAAA1G,GAAA3B,WACAiJ,EAAAjJ,UAAAqJ,UAAAhB,EAAA1G,GACAqH,EAAAC,EAGA,OAAAD,EA+BAM,CAAAf,EAAAF,IAGA,IAAAkB,EAAApB,EAAAoB,WAAA,GACAf,EAAA,IAAAU,SACA,mBAAAK,EAAA,6KADA,GA4CA,OA/BAf,EAAAxI,UAAAF,OAAAqJ,OAAAZ,EAAAvI,WAGAwI,EAAAxI,UAAAf,YAAAuJ,EACAA,EAAAI,WAAAR,EAGAI,EAAAY,UAAAb,EAGAC,EAAAR,eACAQ,EAAAR,aAAAA,GAGAK,IACAG,EAAAgB,WAAAnB,GAGAG,EAAAiB,UACAjB,EAAAiB,QAAA,SAAAtB,EAAAG,GACA,OAtKA,SAAAE,EAAAL,EAAAG,GAEA,IAAAoB,EAAAlB,EAAAxI,UACA2J,EAAAnB,EAAAI,WAAA5I,UACA4J,EAAAtB,GAAAA,EAAAsB,YACAtB,GAAAA,EAAAuB,UAEA,IAAA,IAAA5L,KAAAkK,EACA,GAAA,gBAAAlK,EAAA,CAKA,IAAA2J,EAAAO,EAAAlK,GACA,mBAAAkK,EAAAlK,GACAyL,EAAAzL,GAAA2J,EAAAI,cAAA4B,GAAA,mBAAAD,EAAA1L,GAkBA2J,EAjBA,SAAA3J,EAAA6L,EAAAC,GACA,OAAA,WACA,IAAAC,EAAAjE,KAAAkE,UAIAlE,KAAAkE,UAAAF,EAIA,IAAAG,EAAAJ,EAAAhE,MAAAC,KAAAN,WAIA,OAFAM,KAAAkE,UAAAD,EAEAE,GAdA,CAgBAjM,EAAA2J,EAAA+B,EAAA1L,IAEA8C,EAAAlB,cAAA+H,IAAA,OAAAA,GAAAA,EAAA,IACA9H,OAAAqK,eAAAT,EAAAzL,EAAA2J,GAEA8B,EAAAzL,GAAA2J,EAGA,OAAAY,EA8HA4B,CAAArE,KAAAoC,EAAAG,KAGAE,EAAA6B,UACA7B,EAAA6B,QAAA,SAAAlC,EAAAE,EAAAC,GACA,OAAAP,EAAAI,EAAApC,KAAAsC,EAAAC,KAIAE,EAAAiB,QAAAtB,EAAAG,GAEAE,GAIA8B,GAEA,OAAAvC,IAEAtK,OAAA,4BACA,WACA,SAAA8M,GACA,IA4JAC,EAAA,SAAAC,GAuBA,IAAAA,EACA,OAAAA,EAGA,IAAAC,IAAAD,EAAAE,KAKA,SAAAC,EAAAC,GAGAJ,EAAAI,GAAA,WACA,IAAAtF,EAAAE,UACA/D,EAAAoJ,SAAAC,KAAAN,EAAA,SAAAA,GAEA,OAAAD,EAAAtL,MAAAc,UAAA6K,GAAA/E,MAAA2E,EAAAlF,MAIA,GAAA,YAAAsF,GAAAH,EACA,OAAAhJ,GAaA,OA5BAgJ,IACAD,EAAA3K,OAAAkL,SAAAP,IAmBAG,EAAA,WACAA,EAAA,UACAA,EAAA,OACA,MAAAH,EAAAQ,QACAR,EAAAQ,MAAAH,SAAAC,KAAAN,EAAA,SAAAA,GACA,OAAAA,EAAArL,UAGAqL,GAGAS,EAAAX,GACAhB,UAAA,aAEA4B,YA3NA,SAAAC,EAAA9C,GA6CA,cAAA8C,GACA,QACA,MAAA,IAAA3C,MAAA,+BAAA2C,GACA,IAAA,SAAA,IAAA,YACA,IAAAC,EAAAD,EACAA,EAAA,SAAApM,GACA,IAAA,IAAA8D,KAAAuI,EAAA,CACA,IAAAC,EAAAD,EAAAvI,GACA,GAAAwI,GAAAA,EAAApH,MAEA,IAAAoH,EAAApH,KAAAlF,EAAA8D,GAAA9D,GACA,OAAA,OAEA,GAAAsM,GAAAtM,EAAA8D,GACA,OAAA,EAGA,OAAA,GAEA,MACA,IAAA,SAEA,IAAAiD,KAAAqF,GACA,MAAA,IAAA3C,MAAA,sBAAA2C,EAAA,uBAEAA,EAAArF,KAAAqF,GAEA,IAAA,YAkDA,SAAAG,EAAApK,GAEA,IAAAsJ,EAhDA,SAAAe,EAAA3I,EAAA4I,GAyBA,IAAAjN,EAAAmD,EAAA,EAAAkF,EAAA2E,GAAAA,EAAApM,QAAA,EAAAsM,KACA7E,GAAA,iBAAA2E,IAAAA,EAAAA,EAAAzN,MAAA,KACA,iBAAA8E,IAAAA,EAAA8I,MAAA9I,IAAA+I,QAAA/I,IACA,GAAA4I,EACA,KAAA9J,EAAAkF,IAAAlF,EACAnD,EAAAgN,EAAA7J,GACAkB,EAAAxE,KAAAoN,EAAAjN,EAAAmD,EAAA6J,IACAE,EAAA5J,KAAAtD,QAIA,KAAAmD,EAAAkF,IAAAlF,EACAnD,EAAAgN,EAAA7J,GACAkB,EAAArE,EAAAmD,EAAA6J,IACAE,EAAA5J,KAAAtD,GAIA,OAAAkN,EAKAzK,CAAAE,EAAAiK,GAEAS,EAAAvD,GAAAA,EAAAwD,KAmBA,GAlBAD,GACApB,EAAAqB,KAAA,mBAAAD,EAAAA,EAAA,SAAA5F,EAAAC,GACA,IAAA,IAAA4F,EAAAnK,EAAA,EAAAmK,EAAAD,EAAAlK,GAAAA,IAAA,CACA,IAAAoK,EAAA9F,EAAA6F,EAAAE,WACAC,EAAA/F,EAAA4F,EAAAE,WAIA,GAFAD,EAAA,MAAAA,EAAAA,EAAAhI,UAAAgI,EACAE,EAAA,MAAAA,EAAAA,EAAAlI,UAAAkI,EACAF,GAAAE,EAGA,QAAAH,EAAAI,aAAA,MAAAH,GAAAA,EAAAE,IAAA,EAAA,EAGA,OAAA,IAIA3D,IAAAA,EAAA6D,OAAA7D,EAAA8D,OAAA,CACA,IAAAnB,EAAAR,EAAArL,QACAqL,EAAAA,EAAArI,MAAAkG,EAAA6D,OAAA,GAAA7D,EAAA6D,OAAA,IAAA7D,EAAA8D,OAAAC,EAAAA,KACApB,MAAAA,EAEA,OAAAR,EAGA,OADAc,EAAAe,QAAAlB,EACAG,GAoEAgB,WAAA,KAGAC,IAAA,SAAAC,GAOA,OAAA1G,KAAA2G,KAAA3G,KAAAxE,MAAAkL,KAGAE,YAAA,SAAA3N,GACA,OAAAA,EAAA+G,KAAAwG,aAGAK,IAAA,SAAA5N,EAAAsJ,GACA,IAAAoE,EAAA3G,KAAA2G,KACAnL,EAAAwE,KAAAxE,MACAgL,EAAAxG,KAAAwG,WACAE,EAAAzN,EAAAuN,GAAAjE,GAAA,OAAAA,EAAAA,EAAAmE,GAAAF,KAAAvN,EAAAA,EAAAuN,GAAAM,KAAAC,SACA,GAAAL,KAAAlL,EAAA,CAEA,GAAA+G,IAAA,IAAAA,EAAAyE,UACA,MAAA,IAAAtE,MAAA,yBAGAiE,EAAAnL,EAAAkL,IAAAzN,OAGAuC,EAAAkL,GAAAC,EAAA5K,KAAA9C,GAAA,EAEA,OAAAyN,GAGAO,IAAA,SAAAhO,EAAAsJ,GAGA,OAFAA,EAAAA,OAAAyE,WAAA,EAEAhH,KAAA6G,IAAA5N,EAAAsJ,IAGA2E,OAAA,SAAAR,GAOA,IAAAlL,EAAAwE,KAAAxE,MACAmL,EAAA3G,KAAA2G,KACA,GAAAD,KAAAlL,EAIA,OAHAmL,EAAAhF,OAAAnG,EAAAkL,GAAA,GAEA1G,KAAAmH,QAAAR,IACA,GAGAtB,MAAA,SAAAA,EAAA9C,GA8BA,OAAAkC,EAAAzE,KAAAoF,YAAAC,EAAA9C,EAAAvC,CAAAA,KAAA2G,QAGAQ,QAAA,SAAAR,GAKAA,EAAAxK,OAEA6D,KAAAwG,WAAAG,EAAAS,YAAApH,KAAAwG,WACAG,EAAA3G,KAAA2G,KAAAA,EAAAxK,OAEA6D,KAAA2G,KAAAA,EAEA3G,KAAAxE,SACA,IAAA,IAAAI,EAAA,EAAAkF,EAAA6F,EAAAtN,OAAAuC,EAAAkF,EAAAlF,IACAoE,KAAAxE,MAAAmL,EAAA/K,GAAAoE,KAAAwG,aAAA5K,GAIAuG,KAAA,SAAAI,GACA,IAAA,IAAA3G,KAAA2G,EACAvC,KAAApE,GAAA2G,EAAA3G,GAEAoE,KAAAmH,QAAAnH,KAAA2G,aAKA,OAAAxB,IAEAzN,OAAA,0BACA,WAEA,IAAAqD,EAAAsM,EAAA,EAqEA,SAAAC,EAAAvP,GACA,OAAA,SAAAoH,EAAAoI,EAAAC,EAAAC,GACA,IAAAC,EAAAC,EAAAxI,EAAAoI,GACAI,GAAAA,EAAAxI,QAAAA,IAEAA,EAAAoI,GAAAG,EAAA,WAKA,IAJA,IAAAE,EAAAP,EAEA7H,EAAAE,UACAmI,EAAAH,EAAAG,OACAA,GACArI,EAAAqI,EAAAL,OAAAzH,MAAAC,KAAAR,IAAAA,EACAqI,EAAAA,EAAAC,KAGA,GAAAJ,EAAAK,OACA,IAAArD,EAAAgD,EAAAK,OAAAP,OAAAxH,KAAAR,GAIA,IADA,IAAAwI,EAAAN,EAAAM,MACAA,GAAAA,EAAAtB,GAAAkB,GAAA,CACA,GAAAI,EAAAP,iBAAA,CACA,IAAAQ,EAAAD,EAAAR,OAAAzH,MAAAC,KAAAR,GAEAkF,EAAAuD,IAAAlN,EAAA2J,EAAAuD,OAEAvD,EAAAsD,EAAAR,OAAAlP,KAAA0H,KAAA0E,EAAAlF,GAEAwI,EAAAA,EAAAF,KAEA,OAAApD,GAEAiD,IACAD,EAAAK,QAAAP,OAAA,SAAArI,EAAAK,GACA,OAAAmI,EAAA5H,MAAAZ,EAAAK,MAGAkI,EAAAvI,OAAAA,GAEA,IAAAuF,EA3GA,SAAAgD,EAAA3P,EAAAyP,EAAAC,GACA,IAEAS,EAFAC,EAAAT,EAAA3P,GACAgQ,EAAA,UAAAhQ,EAEA,GAAAgQ,EAAA,CACA,IAAAK,EAAAZ,EAAA,WACA,OAAAW,EAAAX,OAAAxH,KAAAN,aAEAwI,GACAhB,OAAA,WACAkB,IACAA,EAAAV,EAAAF,EAAA,OAGAA,OAAA,SAAArI,EAAAK,GACA,OAAA4I,EACAA,EAAArI,MAAAZ,EAAAK,GACA2I,EAAAX,OAAArI,EAAAK,UAKA0I,GACAhB,OAAA,WACA,GAAAgB,EAAAV,OAAA,CACA,IAAAW,EAAAD,EAAAC,SACAL,EAAAI,EAAAJ,KACAA,GAAAK,GAGAA,EACAA,EAAAL,KAAAA,EAEAJ,EAAA3P,GAAA+P,EAEAA,IACAA,EAAAK,SAAAA,WARAT,EAAA3P,GAaA2P,EAAAF,EAAAU,EAAAV,OAAA,OAGAd,GAAAW,IACAG,OAAAA,EACAC,iBAAAA,GAGA,GAAAU,IAAAJ,EACA,GAAA,SAAAhQ,EAAA,CAGA,KAAAoQ,EAAAL,OAAAK,EAAAA,EAAAL,QACAK,EAAAL,KAAAI,EACAA,EAAAC,SAAAA,MACA,UAAApQ,IAEA2P,EAAA3P,GAAAmQ,EACAA,EAAAJ,KAAAK,EACAA,EAAAA,SAAAD,QAIAR,EAAA3P,GAAAmQ,EAEA,OAAAA,EAyCAG,CAAAX,GAAAC,EAAA5P,EAAAyP,EAAAC,GAEA,OADAD,EAAA,KACA9C,GAIA,OACAsD,MAAAV,EAAA,SAEAS,OAAAT,EAAA,UAEAO,OAAAP,EAAA,aAGA5P,OAAA,uBACA,YACA,WACA,SAAAuD,EAAAD,GACA,IAAA8E,EAAA7E,EAAA6E,MACAzD,EAAAlD,MAAAc,UAAAoC,MACA7D,EAAAwC,EAAAxC,WACAK,EAAAmC,EAAAnC,SA8CA,IAAAoM,EAAA,WAEA,SAAAqD,KACA,OAAA,SAAAlQ,EAAAgK,GACAkG,EAAArO,UAAA7B,EACA,IAAA6L,EAAA,IAAAqE,EAKA,OAJAA,EAAArO,UAAA,KACAmI,GACAtC,EAAAmE,EAAA7B,GAEA6B,GAVA,GAeA,OACAsE,SA7BA,SAAAxE,EAAAyE,GACA,IAAAC,EACA,OAAA,WACA,IAAAC,EAAA1I,KAAAR,EAAAE,UAKA+I,GAAAE,aAAAF,GACAA,EAAAG,WALA,WACAH,EAAA,KACA1E,EAAAhE,MAAA2I,EAAAlJ,IAGAgJ,KAsBAvD,SAAAA,EAEA4D,MAhEA,SAAA9E,GACA+E,sBACAA,sBAAA/E,GAEAgF,cAAAhF,GAEA,OAAA/D,MA4DAgJ,KAzDA,aA2DAC,MAxDA,SAAAA,EAAAlF,EAAA2E,GACA,IAAAlJ,EAAA,KAAAE,WAAArD,EAAA/D,KAAAoH,UAAA,GACA,GAAAlH,EAAAuL,GAAA,CAIA,OAHA,WACA,OAAAA,EAAAhE,MAAA2I,EAAAlJ,EAAAA,EAAA7C,OAAAN,EAAA/D,KAAAoH,YAAAA,YAGA,GAAA7G,EAAA6P,GACA,OAAAlJ,GACAA,EAAAoD,QAAAmB,EAAA2E,GAAA3E,GACAkF,EAAAlJ,MAAA,KAAAP,IAEAyJ,EAAAlF,EAAA2E,GAAA3E,GAGA,MAAA,IAAAmF,UAAA,sBA2CAC,WAAA,WACA,OAAA,GAGAC,YAAA,WACA,OAAA,MAIA1R,OAAA,0BACA,WACA,UACA,aACA,SAAAqK,EAAAsH,EAAApO,GACA,aAEA,IAAAqO,EAAAzK,OAAAA,SAAA,gBACA0K,EAAA1K,OAAAA,SAAA,eAEAxC,EAAAlD,MAAAc,UAAAoC,MACA4M,EAAAI,EAAAJ,MACAzM,EAAAuF,EAAAvF,UACAb,EAAAV,EAAAU,OACAmE,EAAA7E,EAAA6E,MAEAA,EAAA0J,QAAAvP,WACAwP,OAAA,SAAAC,GAIA,OADA1J,KAAA4E,KAAA8E,EAAAA,GACA1J,MAEA2J,KAAA,WACA,IAAA,IAAA/N,EAAA,EAAAA,EAAA8D,UAAArG,OAAAuC,IACAoE,KAAA4E,KAAAlF,UAAA9D,IAEA,OAAAoE,MAEA4J,KAAA,SAAAF,GAIA,OADA1J,KAAA6J,MAAAH,GACA1J,QAKA,IAAA+E,EAAA,WACA,IAAA+E,EAAA9J,KACA+J,EAAA/J,KAAAgK,QAAA,IAAAR,QAAA,SAAAS,EAAAC,GACAJ,EAAAK,SAAAF,EACAH,EAAAM,QAAAF,IAGAG,EAAAN,EAAAD,GAEA9J,KAAAsJ,MACAtJ,KAAAuJ,OAQA,SAAAc,EAAAN,EAAAO,GACA,IAAAC,GACAC,MAAA,WACA,OAAAF,EAAAG,aACA,WAEAH,EAAAI,aACA,WAEA,WAEA9F,KAAA,SAAA+F,EAAAC,EAAAC,GAIA,OAHAA,GACA7K,KAAA8K,SAAAD,GAEAR,EAAAb,QAAAvP,UAAA2K,KAAAtM,KAAA0H,KACA2K,GAAA,SAAAnL,GACA,OAAAA,QAAAzE,IAAAyE,EAAAuL,QACAJ,EAAA5K,MAAAP,EAAAuL,QAAAvL,GAEAmL,EAAAnL,IAGAoL,GAAA,SAAApL,GACA,OAAAA,QAAAzE,IAAAyE,EAAAuL,QACAH,EAAA7K,MAAAP,EAAAuL,QAAAvL,GAEAoL,EAAApL,OAIAsL,SAAA,SAAApB,GAKA,OAJAY,EAAAf,GAAAtR,QAAA,SAAAQ,GACAiR,EAAAjR,KAEA6R,EAAAhB,GAAAvN,KAAA2N,GACA1J,OAMA,OADAuK,EAAAS,KAAAT,EAAA3F,KACA9E,EAAAiK,EAAAQ,GA8HA,OA1HAxF,EAAA9K,UAAAgQ,QAAA,SAAAxR,GACA,IAAA+G,EAAAnD,EAAA/D,KAAAoH,WACA,OAAAM,KAAAiL,YAAA,KAAAzL,IAGAuF,EAAA9K,UAAAgR,YAAA,SAAAvC,EAAAlJ,GAKA,OAJAA,EAAAA,EAAAhD,EAAAgD,OACAuL,QAAArC,EACA1I,KAAAmK,SAAA3K,GACAQ,KAAAkL,WAAA,EACAlL,MAGA+E,EAAA9K,UAAAkR,OAAA,SAAA1S,GACA,IAGA,OAFAuH,KAAAuJ,GAAAxN,KAAAtD,GAEAuH,KAAAsJ,GAAArR,QAAA,SAAAmT,GACA,OAAAA,EAAA3S,KAEA,MAAA4S,GACArL,KAAAkK,OAAAmB,GAEA,OAAArL,MAGA+E,EAAA9K,UAAAiQ,OAAA,SAAAoB,GACA,IAAA9L,EAAAnD,EAAA/D,KAAAoH,WACA,OAAAM,KAAAuL,WAAA,KAAA/L,IAGAuF,EAAA9K,UAAAsR,WAAA,SAAA7C,EAAAlJ,GAKA,OAJAA,EAAAA,EAAAhD,EAAAgD,OACAuL,QAAArC,EACA1I,KAAAoK,QAAA5K,GACAQ,KAAAwL,WAAA,EACAxL,MAGA+E,EAAA9K,UAAAwQ,WAAA,WACA,QAAAzK,KAAAkL,WAGAnG,EAAA9K,UAAAyQ,WAAA,WACA,QAAA1K,KAAAwL,WAGAzG,EAAA9K,UAAA2K,KAAA,SAAA9H,EAAA2O,EAAAC,GACA,IAAA3B,EAAApO,EAAAqE,KAAA,WACA,OAAA+J,EAAAnF,KAAA9H,EAAA2O,EAAAC,IAGA3G,EAAA9K,UAAA6Q,SAAA,SAAAY,GACA,IAAA3B,EAAApO,EAAAqE,KAAA,WACA,OAAA+J,EAAAe,SAAAY,IAGA3G,EAAA9K,UAAA4P,MAAA,SAAA4B,GACA,IAAA1B,EAAApO,EAAAqE,KAAA,WACA,OAAA+J,EAAAF,MAAA4B,IAIA1G,EAAA9K,UAAA0P,KAAA,WACA,IAAAI,EAAApO,EAAAqE,KAAA,WACA,OAAA+J,EAAAJ,KAAA5J,MAAAgK,EAAArK,YAGAqF,EAAA9K,UAAA2P,KAAA,SAAA6B,GACA,IAAA1B,EAAApO,EAAAqE,KAAA,WACA,OAAA+J,EAAAH,KAAA6B,IAIA1G,EAAA4G,IAAA,SAAAvQ,GAEA,IAAAkP,EAAA,IAAAvF,EAEA,OADAyE,QAAAmC,IAAAvQ,GAAAwJ,KAAA0F,EAAAL,QAAA2B,KAAAtB,GAAAA,EAAAJ,OAAA0B,KAAAtB,IACA3O,EAAA2O,EAAA,YAGAvF,EAAA7I,MAAA,SAAAd,GACA,OAAAiP,EAAAb,QAAAqC,KAAAzQ,KAIA2J,EAAAC,KAAA,SAAA8G,EAAAhP,EAAA2O,EAAAC,GACA,IAAAK,EAAAD,GAAA,mBAAAA,EAAAlH,KACAoH,EAAAD,GAAAD,aAAAtC,QAEA,IAAAuC,EACA,OAAArM,UAAArG,OAAA,EACAyD,EAAAA,EAAAgP,GAAAA,GAEA,IAAA/G,GAAAkF,QAAA6B,GAEA,IAAAE,EAAA,CACA,IAAAC,EAAA,IAAAlH,EAAA+G,EAAAI,QACAJ,EAAAlH,KAAAqE,EAAAgD,EAAAhC,QAAAgC,GAAAhD,EAAAgD,EAAA/B,OAAA+B,GAAAA,EAAAd,QACAW,EAAAG,EAAAjC,QAGA,OAAAlN,GAAA2O,GAAAC,EACAI,EAAAlH,KAAA9H,EAAA2O,EAAAC,GAEAI,GAGA/G,EAAAmF,OAAA,SAAAiC,GACA,IAAA7B,EAAA,IAAAvF,EAEA,OADAuF,EAAAJ,OAAAiC,GACA7B,EAAAN,SASAjF,EAAAqH,UANArH,EAAAkF,QAAA,SAAAtD,GACA,IAAA2D,EAAA,IAAAvF,EAEA,OADAuF,EAAAL,QAAAlK,MAAAuK,EAAA5K,WACA4K,EAAAN,SAKAjF,IAEArN,OAAA,uBACA,aACA,aACA,SAAAqN,EAAA9J,GACA,IAAA8F,EAAA9F,EAAA8F,KAEAsL,GACAC,SAAA,SAAA7G,EAAAjG,EAAA+M,GACA,IAAAC,KAQA,OAPAD,EAAAA,GAAA,KACA/M,EAAAA,MAEAuB,EAAA0E,EAAA,SAAA7J,EAAA6Q,GACAD,EAAAzQ,KAAA0Q,EAAA1M,MAAAwM,EAAA/M,MAGAuF,EAAA4G,IAAAa,IAGAE,OAAA,SAAAjH,EAAAjG,EAAA+M,GACA,IAAAC,KACAlC,EAAA,IAAAvF,EACAgF,EAAAO,EAAAN,QAaA,OAXAuC,EAAAA,GAAA,KACA/M,EAAAA,MAEA8K,EAAAL,UACAlJ,EAAA0E,EAAA,SAAA7J,EAAA6Q,GACA1C,EAAAA,EAAAnF,KAAA,WACA,OAAA6H,EAAA1M,MAAAwM,EAAA/M,KAEAgN,EAAAzQ,KAAAgO,KAGAhF,EAAA4G,IAAAa,IAGAG,SAAA,SAAAlH,EAAAjG,EAAA+M,GACA,IAAAjC,EAAA,IAAAvF,EACAgF,EAAAO,EAAAN,QAUA,OARAuC,EAAAA,GAAA,KACA/M,EAAAA,MAEA8K,EAAAW,YAAAsB,EAAA/M,GAEAuB,EAAA0E,EAAA,SAAA7J,EAAA6Q,GACA1C,EAAAA,EAAAnF,KAAA6H,KAEA1C,IAIA,OAAAsC,IAEA3U,OAAA,6BAAA,WA2DA,OACAkV,kBA3DA,SAAAC,GAEA,IAAAC,EAAAD,EAAA7U,MAAA,KACA+U,EAAApP,SAAAmP,EAAA,IAEA,GAAAE,MAAAD,GACA,OAAA,EAKA,OAAAD,EAAA,GAAAG,OAAAhP,QAAA,MAAA,KACA,IAAA,UACA,IAAA,SACA,IAAA,MACA,IAAA,KACA,IAAA,IACA,OAAA,IAAA8O,EACA,IAAA,QACA,IAAA,OACA,IAAA,KACA,IAAA,KACA,IAAA,IACA,IAAA,IACA,OAfA,KAeAA,EACA,IAAA,UACA,IAAA,SACA,IAAA,MACA,IAAA,KACA,IAAA,IACA,OAAA,IAAAA,EACA,IAAA,OACA,IAAA,MACA,IAAA,KACA,IAAA,KACA,IAAA,IACA,OAAA,MAAAA,EACA,IAAA,SACA,IAAA,QACA,IAAA,KACA,IAAA,IACA,OAAA,QAAAA,EACA,IAAA,QACA,IAAA,OACA,IAAA,IACA,IAAA,IACA,OAAA,OAAAA,EACA,IAAA,QACA,IAAA,OACA,IAAA,OACA,IAAA,KACA,IAAA,IACA,OAAA,QAAAA,EACA,QACA,OAAA,OAQArV,OAAA,yBACA,UACA,WACA,YACA,WACA,SAAA8M,EAAAzC,EAAA9G,EAAAD,GACA,IAAAqB,EAAAlD,MAAAc,UAAAoC,MACAJ,EAAA8F,EAAA9F,QACA1C,EAAAyB,EAAAzB,UACAO,EAAAkB,EAAAlB,cACAtB,EAAAwC,EAAAxC,WACAK,EAAAmC,EAAAnC,SACAN,EAAAyC,EAAAzC,cACAuH,EAAA7E,EAAA6E,MAEAoN,EAAA1I,GACA2I,GAAA,SAAAC,EAAAC,EAAA1G,EAAA7J,EAAAyP,EAAAe,GACA,IAAAxD,EAAA9J,KACAuN,EAAAvN,KAAAuN,OAAAvN,KAAAuN,SAEA,OAAAzT,EAAAsT,IACAb,EAAAzP,EACAiE,KAAAqM,EAAA,SAAArV,EAAAgM,GACA+F,EAAAqD,GAAApV,EAAAsV,EAAA1G,EAAA5C,EAAAwI,EAAAe,KAEAtN,OAGAnH,EAAAwU,IAAA7U,EAAAsE,KACAyP,EAAAzP,EACAA,EAAA6J,EACAA,EAAA0G,EACAA,OAAAtS,GAGAvC,EAAAmO,KACA4F,EAAAzP,EACAA,EAAA6J,EACAA,EAAA,MAGA9N,EAAAuU,KACAA,EAAAA,EAAApV,MAAA,OAGAoV,EAAAnV,QAAA,SAAAC,IACAqV,EAAArV,KAAAqV,EAAArV,QAAA6D,MACAgI,GAAAjH,EACAuQ,SAAAA,EACA1G,KAAAA,EACA4F,IAAAA,EACAe,IAAAA,MAIAtN,OAGAsN,IAAA,SAAAF,EAAAC,EAAA1G,EAAA7J,EAAAyP,GACA,OAAAvM,KAAAmN,GAAAC,EAAAC,EAAA1G,EAAA7J,EAAAyP,EAAA,IAGAiB,QAAA,SAAAC,GACA,IAAAzN,KAAAuN,KACA,OAAAvN,KAGA,IAAA8J,EAAA9J,KAEAnH,EAAA4U,KACAA,EAAA,IAAAC,YAAAD,IAGA1T,OAAAqK,eAAAqJ,EAAA,UACAhV,MAAAuH,OAGA,IAAAR,EAAAnD,EAAA/D,KAAAoH,UAAA,GAoCA,OAlCAF,EADAjG,EAAAiG,IACAiO,GAAA9Q,OAAA6C,IAEAiO,IAEAA,EAAA1V,MAAA0V,EAAAvV,KAAA,OAAAD,QAAA,SAAA0V,GACA,IAAAC,EAAA9D,EAAAyD,KAAAI,GACA,GAAAC,EAAA,CAOA,IAHA,IAAAC,EAAAD,EAAAvU,OACAyU,GAAA,EAEAlS,EAAA,EAAAA,EAAAiS,EAAAjS,IAAA,CACA,IAAAwP,EAAAwC,EAAAhS,GACA6R,EAAA9G,KACAyE,EAAAzE,OACA8G,EAAA9G,KAAA7G,KAAAsL,EAAAzE,KAAA8G,EAAA9G,OAGA8G,EAAA9G,KAAAyE,EAAAzE,MAAA,KAEAyE,EAAArH,GAAAhE,MAAAqL,EAAAmB,IAAA/M,GACA4L,EAAAkC,MACAM,EAAAhS,GAAA,KACAkS,GAAA,GAIAA,IACAhE,EAAAyD,KAAAI,GAAA1R,EAAA2R,OAIA5N,MAGA+N,SAAA,SAAAC,GACA,IAAAC,GAAAjO,KAAAuN,OAAAvN,KAAAkO,aAAAF,OACA,OAAAC,EAAA5U,OAAA,GAGA8U,SAAA,SAAA/V,EAAA4V,EAAAlR,EAAAwQ,GACA,IAAAlV,EACA,OAAA4H,KAIAnH,EAAAiE,KACAA,EAAAkD,KAAAlD,IAGAwQ,EACAlV,EAAAkV,IAAAU,EAAAlR,EAAAkD,MAEA5H,EAAA+U,GAAAa,EAAAlR,EAAAkD,MAOA,IAHA,IACAoO,EADAC,EAAArO,KAAAsO,eAAAtO,KAAAsO,iBAGA1S,EAAA,EAAAA,EAAAyS,EAAAhV,OAAAuC,IACA,GAAAyS,EAAAzS,GAAAxD,KAAAA,EAAA,CACAgW,EAAAC,EAAAzS,GACA,MAGAwS,GACAC,EAAAtS,KACAqS,GACAhW,IAAAA,EACAgV,YAIA,IAAAmB,EAAAH,EAAAhB,OACAoB,EAAAD,EAAAP,GAAAO,EAAAP,OAKA,OAJA,GAAAQ,EAAAjS,QAAAO,IACA0R,EAAAzS,KAAAe,GAGAkD,MAGAyO,aAAA,SAAArW,EAAA4V,EAAAlR,GACA,OAAAkD,KAAAmO,SAAA/V,EAAA4V,EAAAlR,EAAA,IAGA4R,IAAA,SAAAtB,EAAAtQ,GACA,IAAAyQ,EAAAvN,KAAAuN,OAAAvN,KAAAuN,SAuBA,OAtBA1U,EAAAuU,KACAA,EAAAA,EAAApV,MAAA,OAGAoV,EAAAnV,QAAA,SAAAC,GACA,IAAAyW,EAAApB,EAAArV,GACA0W,KAEA,GAAAD,GAAA7R,EACA,IAAA,IAAAlB,EAAA,EAAAiS,EAAAc,EAAAtV,OAAAuC,EAAAiS,EAAAjS,IACA+S,EAAA/S,GAAAmI,KAAAjH,GAAA6R,EAAA/S,GAAAmI,GAAA9D,IAAAnD,GACA8R,EAAA7S,KAAA4S,EAAA/S,IAIAgT,EAAAvV,OACAkU,EAAArV,GAAA0W,SAEArB,EAAArV,KAIA8H,MAEA6O,WAAA,SAAAzW,EAAA4V,EAAAlR,GACA,IAAAuR,EAAArO,KAAAsO,aACA,IAAAD,EACA,OAAArO,KAEA,IAAA,IAAApE,EAAA,EAAAA,EAAAyS,EAAAhV,OAAAuC,IAAA,CACA,IAAAwS,EAAAC,EAAAzS,GAEA,IAAAxD,GAAAA,GAAAgW,EAAAhW,IAAA,CAIA,IAAAmW,EAAAH,EAAAhB,OACA,IAAA,IAAAO,KAAAY,EACA,IAAAP,GAAAA,GAAAL,EAAA,CAMA,IAFA,IAAAa,EAAAD,EAAAZ,GAEA7R,EAAA,EAAAA,EAAA0S,EAAAnV,OAAAyC,IACAgB,GAAAA,GAAA0R,EAAA5S,KACAwS,EAAAhW,IAAAsW,IAAAf,EAAAa,EAAA5S,GAAAoE,MACAwO,EAAA5S,GAAA,MAIA4S,EAAAD,EAAAZ,GAAA1R,EAAAuS,GAEAjW,EAAAiW,KACAD,EAAAZ,GAAA,MAKApV,EAAAgW,KACAF,EAAAzS,GAAA,OASA,OALAyS,EAAArO,KAAAsO,aAAArS,EAAAoS,GACA9V,EAAA8V,KACArO,KAAAsO,aAAA,MAGAtO,QAIA,OAAAkN,IAGAxV,OAAA,2BACA,WAuFA,IAAAoX,EAAA,EAMA,OACAC,UAAA,SAAAlC,GACA,OAAAA,EAAA5O,QAAA,cAAA,SAAAiC,GACA,OAAAA,EAAA8O,cAAA/Q,QAAA,IAAA,OAIAgR,UA5FA,SAAApC,GACA,OAAAA,EAAA5O,QAAA,MAAA,KACAA,QAAA,wBAAA,SACAA,QAAA,oBAAA,SACAA,QAAA,KAAA,KACA9F,eAyFA+W,iBAtFA,SAAAzW,GACA,IACA,OAAAA,EACA,QAAAA,GACA,SAAAA,IACA,QAAAA,EAAA,MACAA,EAAA,IAAAA,GAAAA,EACA,UAAA0F,KAAA1F,GAAA0W,KAAAC,MAAA3W,GACAA,GAAAA,EACA,MAAAgV,GACA,OAAAhV,IA8EA4W,WAAA,SAAAxC,GACA,OAAAA,EAAAyC,OAAA,GAAAnX,cAAA0U,EAAAxQ,MAAA,IAGAkT,eAAA,SAAA9W,GACA,OAAA0W,KAAAK,UAAA/W,IAIAgX,WA/EA,SAAAC,EAEA9S,EAEA+S,EAEAjK,GAmBA,SAAAkK,EAAA7S,EAAAH,GACA,GAAAG,EAAA8S,MAAA,MAAA,CACA,IAAAC,EACAC,EAAA,SAAAhR,EAAA3G,GACA,IAAA4X,EAAAjR,EAAAa,MACA,OAAAoQ,EACA5X,EAAA4X,GACAD,EAAAhR,EAAA+Q,EAAA1X,EAAA4X,IADA,KAGAF,GAGA,OAAAC,EAAAhT,EAAA/E,MAAA,KAAAiY,UAAArT,GAEA,OAAAA,EAAAG,GAIA,OAxBA2I,EAAAA,GAAA3M,OACA4W,EAAAA,EACA1G,MAAAvD,EAAAiK,GAAA,SAAAO,GACA,OAAAA,GAqBAR,EAAAzR,QAAA,yCACA,SAAA4R,EAAA9S,EAAAoT,GACA,IAAA1X,EAAAmX,EAAA7S,EAAAH,GAIA,OAHAuT,IACA1X,EAAAmX,EAAAO,EAAAzK,GAAApN,KAAAoN,EAAAjN,EAAAsE,IAEA4S,EAAAlX,EAAAsE,GAAAjF,cAgCAmV,KApFA,SAAAJ,GACA,OAAA,MAAAA,EAAA,GAAAxU,OAAA4B,UAAAgT,KAAA3U,KAAAuU,IAqFAuD,SA7BA,SAAAC,GACA,IAAA3J,IAAAoI,EAAA,GACA,OAAAuB,EAAAA,EAAA3J,EAAAA,GA6BA4J,WAAA,SAAAzD,GACA,OAAAA,EAAAyC,OAAA,GAAAN,cAAAnC,EAAAxQ,MAAA,OAKA3E,OAAA,qBACA,WACA,aACA,YACA,YACA,UACA,WACA,SAAAqK,OAAAgD,SAAAmI,QAAAjS,QAAAoO,MAAArO,OACA,IAAA+F,KAAA9F,QAAA8F,KACAjB,MAAA7E,QAAA6E,MACAkJ,KAAAK,MAAAL,KACAhQ,QAAAgC,MAAAhC,QACAR,WAAAwC,MAAAxC,WACAsB,cAAAkB,MAAAlB,cACA/B,KAAAiD,MAAAjD,KAEAwY,eAGA,SAAAC,GAIA,OAHAtQ,IAAAA,EAAAuQ,SAAAC,cAAA,MACAxQ,EAAA/F,KAAAqW,EAEAtQ,EAAA/F,MANA+F,EAUAyQ,IAAA,WACA,IAAAC,QAAA,EACA7T,IACA7E,KACA2Y,QAAA,sDACAC,aAAA,qCACAC,UAAA,8BACAC,SAAA,mBACAC,SAAA,YACAC,QAAA,QAEAC,mBACA9E,OAAA,EAGAtU,KAAA,MAEAqZ,WAAApI,KAEAqI,QAAArI,KAEAqC,MAAArC,KAEAsI,SAAAtI,KAEAN,QAAA,KAEA6I,QAAA,EAIAC,SACAC,OAAA,oEACAC,KAAA,mBACAC,IAAA,4BACAC,KAAA,YACAC,KAAA,cAGAC,aAAA,EAEArJ,QAAA,EAEAsJ,aAAA,EAEAnM,OAAA,EAEAoM,WACAC,iBAAA,IAIA,SAAAC,eAAAC,GAIA,GAHAA,IACAA,EAAAA,EAAAna,MAAA,IAAA,GAAA,IAEAma,EAAA,CACA,GAAAA,GAAAlB,SACA,MAAA,OACA,GAAAkB,GAAAnB,SACA,MAAA,OACA,GAAAF,aAAA3S,KAAAgU,GACA,MAAA,SACA,GAAApB,UAAA5S,KAAAgU,GACA,MAAA,MAGA,MAAA,OAGA,SAAAC,YAAA5B,EAAAnL,GACA,MAAA,IAAAA,EAAAmL,GACAA,EAAA,IAAAnL,GAAApH,QAAA,YAAA,KAIA,SAAAoU,cAAA9P,GACAA,EAAAoE,KAAApE,EAAAoE,MAAApE,EAAA8C,MACA9C,EAAAwP,aAAAxP,EAAAoE,MAAA,UAAA5O,KAAAwK,EAAAoE,QACApE,EAAAoE,KAAA2L,MAAA/P,EAAAoE,KAAApE,EAAAgQ,eAEAhQ,EAAAoE,MAAApE,EAAAxK,MAAA,OAAAwK,EAAAxK,KAAAiX,gBACAzM,EAAAiO,IAAA4B,YAAA7P,EAAAiO,IAAAjO,EAAAoE,MACApE,EAAAoE,UAAA5L,GAIA,SAAAyX,UAAA/S,EAAArH,EAAAma,EAAAE,GACA,IAAAC,EAAAtX,EAAApC,QAAAZ,GACAua,EAAA7Y,cAAA1B,GACA2I,KAAA3I,EAAA,SAAA2E,EAAAtE,GACAia,EAAA3a,KAAAU,GACAga,IAAA1V,EAAAwV,EAAAE,EACAA,EAAA,KAAAE,GAAA,UAAAD,GAAA,SAAAA,EAAA3V,EAAA,IAAA,MAEA0V,GAAArX,EAAAqE,EAAAwH,IAAAxO,EAAAP,KAAAO,EAAAA,OAEA,SAAAia,IAAAH,GAAA,UAAAG,EACAF,UAAA/S,EAAAhH,EAAA8Z,EAAAxV,GACA0C,EAAAwH,IAAAlK,EAAAtE,KAIA,IAAA6Z,MAAA,SAAAla,EAAAma,GACA,IAAA9S,KAOA,OANAA,EAAAwH,IAAA,SAAAlK,EAAAtE,GACAD,WAAAC,KAAAA,EAAAA,KACA,MAAAA,IAAAA,EAAA,IACAuH,KAAAjE,KAAA6W,OAAA7V,GAAA,IAAA6V,OAAAna,KAEA+Z,UAAA/S,EAAArH,EAAAma,GACA9S,EAAAoT,KAAA,KAAA5U,QAAA,OAAA,MAGA0S,IAAAzD,QAAA5I,SACAd,UAAA,MAEAsP,SAAA,SAAAtT,MACA,IAAAS,EAAAD,KAAAC,EACA6J,KAAA9J,KACAuC,QAAAzC,SAAAqR,kBAAAlR,EAAAsC,QAAA/C,MACAuT,IAAA9S,EAAA8S,IAAA,IAAAC,eAEAX,cAAA9P,SAEA,IAAA0Q,SAAA1Q,QAAA0Q,UAAA1Q,QAAA2Q,SACAf,KAAA5P,QAAA4Q,UAAA5Q,QAAAiP,QAAAyB,UACAG,QAAA7Q,QAAA6Q,QACApB,UAAAzP,QAAAyP,UACAqB,WAAA9Q,QAAAoE,MAAApE,QAAAoE,gBAAA2M,SACAC,wBAAAhR,QAAAgR,wBACAxb,KAAAwK,QAAAxK,KACAyY,IAAAjO,QAAAiO,IACAnE,MAAA9J,QAAA8J,MACAmH,KAAAjR,QAAAiR,KACAC,SAAAlR,QAAAkR,SACAxH,SAAA,IAAAlH,SACA2O,aAAAL,YAAA,oCAEA,GAAArB,UACA,IAAA9Z,QAAA8Z,UACAe,IAAA7a,MAAA8Z,UAAA9Z,MAIAia,MAAAA,KAAA5V,QAAA,MAAA,IACA4V,KAAAA,KAAAna,MAAA,IAAA,GAAA,IAEAma,MAAAY,IAAAY,kBACAZ,IAAAY,iBAAAxB,MAOA,IAAAyB,OAAA,WACAb,IAAAc,UAAA7K,KACA+J,IAAAe,QAAA9K,KACA+J,IAAAgB,WAAA/K,KACA+J,IAAAiB,UAAAhL,KACA+J,IAAA,MAEAc,UAAA,WACA,IAAAlY,OAAA0P,OAAA,EACA,GAAA0H,IAAAkB,QAAA,KAAAlB,IAAAkB,OAAA,KAAA,KAAAlB,IAAAkB,QAAA,GAAAlB,IAAAkB,QAAA1D,eAAAC,KAAA/V,WAAA,SAAA,CACAwY,SAAAA,UAAAf,eAAA3P,QAAA4Q,UAAAJ,IAAAmB,kBAAA,iBAEAvY,OAAAoX,IAAAoB,aACA,IACA,UAAAlB,SACAmB,KAAAzY,QACA,OAAAsX,SACAtX,OAAAoX,IAAAsB,YACA,QAAApB,SACAtX,OAAAuV,QAAA/S,KAAAxC,QAAA,KAAAwT,KAAAC,MAAAzT,QACA,QAAAsX,SACAtX,OAAA2Y,MAAAC,OAAAC,WACA,eAAAvB,WACAtX,OAAAoX,IAAA0B,SAEA,MAAAhH,GACApC,MAAAoC,EAGApC,MACAY,SAAA/B,OAAAmB,MAAA0H,IAAAkB,OAAAlB,KAEA9G,SAAAhC,QAAAtO,OAAAoX,IAAAkB,OAAAlB,UAGA9G,SAAA/B,OAAA,IAAAxH,MAAAqQ,IAAA2B,YAAA3B,IAAAkB,OAAAlB,KAEAa,UAGAE,QAAA,WACA7H,UACAA,SAAA/B,OAAA,IAAAxH,MAAA,SAAAqQ,IAAAkB,OAAAlB,KAEAa,UAGAI,UAAA,WACA/H,UACAA,SAAA/B,OAAA,IAAAxH,MAAA,WAAAqQ,IAAAkB,OAAAlB,KAEAa,UAGAG,WAAA,SAAAY,GACA1I,UACAA,SAAAd,OAAAwJ,EAAA5B,IAAAkB,OAAAlB,MAWA,GAPAA,IAAAc,UAAAA,UACAd,IAAAe,QAAAA,QACAf,IAAAiB,UAAAA,UACAjB,IAAAgB,WAAAA,WAEAhB,IAAA6B,KAAA7c,KAAAyY,IAAAnE,MAAAmH,KAAAC,UAEAL,QACA,IAAA,IAAArW,OAAAqW,QAAA,CACA,IAAA3a,MAAA2a,QAAArW,KAEA,iBAAAA,IAAA5E,cACAub,YAAAN,QAAAyB,KAEA9B,IAAA+B,iBAAA/X,IAAAtE,OAqBA,OAhBAib,cAAA,IAAAA,aACAX,IAAA+B,iBAAA,eAAApB,aAGAN,SAAA,qBAAAA,SACAL,IAAA+B,iBAAA,mBAAA,kBAKAvB,yBACAR,IAAA+B,iBAAA,gBAAAvB,yBAGAR,IAAAgC,KAAAxS,QAAAoE,KAAApE,QAAAoE,KAAA,MAEAsF,SAAAjC,SAIAgL,MAAA,WACA,IAAA/U,EAAAD,KAAAC,EACA8S,EAAA9S,EAAA8S,IAEAA,GACAA,EAAAiC,SAKAC,QAAA,SAAAzV,GACA,OAAAQ,KAAA8S,SAAAtT,IAGAiH,IAAA,SAAAjH,GAGA,OAFAA,EAAAA,OACAzH,KAAA,MACAiI,KAAA8S,SAAAtT,IAGA0V,KAAA,SAAA1V,GAGA,OAFAA,EAAAA,OACAzH,KAAA,OACAiI,KAAA8S,SAAAtT,IAGA2V,MAAA,SAAA3V,GAGA,OAFAA,EAAAA,OACAzH,KAAA,QACAiI,KAAA8S,SAAAtT,IAGAqH,IAAA,SAAArH,GAGA,OAFAA,EAAAA,OACAzH,KAAA,MACAiI,KAAA8S,SAAAtT,IAGA4V,IAAA,SAAA5V,GAGA,OAFAA,EAAAA,OACAzH,KAAA,SACAiI,KAAA8S,SAAAtT,IAGA2C,KAAA,SAAAI,GACAvC,KAAAC,GACAsC,QAAAA,UAeA,OAVA,UAAA,MAAA,OAAA,MAAA,MAAA,SAAAtK,QAAA,SAAAC,GACAyY,IAAAzY,GAAA,SAAAsY,EAAAhR,GACA,IAAAuT,EAAA,IAAApC,KAAAH,IAAAA,IACA,OAAAuC,EAAA7a,GAAAsH,MAIAmR,IAAA0E,eAAAlE,kBACAR,IAAA2B,MAAAA,MAEA3B,IA5TA,GA+TA,OAAAA,MAEAjZ,OAAA,yBACA,YACA,YACA,YACA,SACA,SAAAwV,EAAAjS,EAAAqa,EAAA3E,GACA,IAAA7Q,EAAA7E,EAAA6E,MACA2P,EAAA6F,EAAA7F,WAEA8F,EAAArI,EAAA5I,SACAd,UAAA,UAEAgS,YAAA,KAEAC,WAAA,SAAAjW,GAEA,IAAAkW,EAAAjG,EAAAzP,KAAA0V,aAAAlW,GACAmW,EAAA3V,KAAA4V,OAAA5V,KAAA6V,SAAAH,EAIA,YAHA3a,IAAAyE,EAAAQ,KAAAwV,eACAG,EAAAA,EAAA,IAAAnW,EAAAQ,KAAAwV,cAEAG,GAEAG,MAAA,SAAAtW,KAQAuW,KAAA,SAAAvW,GAOA,OAAAmR,EAAAlK,IAAAzG,KAAAyV,WAAAjW,GAAAA,IAEAwW,MAAA,SAAAxW,EAAAyW,GASA,IAAAzF,EAAAxQ,KAAAyV,WAAAjW,GAIA,OAHAyW,IACAzF,EAAAA,EAAA,IAAAyF,GAEAtF,EAAAuE,KAAA1E,EAAAhR,IAGA0W,KAAA,SAAA1W,EAAAyW,GASA,IAAAzF,EAAAxQ,KAAAyV,WAAAjW,GAIA,OAHAyW,IACAzF,EAAAA,EAAA,IAAAyF,GAEAtF,EAAA9J,IAAA2J,EAAAhR,IAGA2W,QAAA,SAAA3W,GASA,IAAAgR,EAAAxQ,KAAAyV,WAAAjW,GACA,OAAAmR,EAAAyE,IAAA5E,IAGA4F,OAAA,SAAA5W,GAQA,IAAAgR,EAAAxQ,KAAAyV,WAAAjW,GACA,OAAAmR,EAAAwE,MAAA3E,EAAAhR,IAEA6F,MAAA,SAAA5F,GAEA,OAAAO,KAAAgW,MAAAvW,IAGA4W,SAAA,SAAA5W,GACA,OAAAO,KAAA+V,KAAAtW,IAGA2D,OAAA,SAAA3D,GACA,OAAAO,KAAAgW,MAAAvW,IAGA6W,OAAA,SAAA7W,GACA,OAAAO,KAAAkW,KAAAzW,IAGA8W,OAAA,SAAA9W,GAEA,OAAAO,KAAAmW,QAAA1W,IAGA0V,MAAA,SAAA1V,GAEA,OAAAO,KAAAoW,OAAA3W,IAEA0C,KAAA,SAAA1C,GACAK,EAAAE,KAAAP,MAKA,OAAA8V,IAEA7d,OAAA,0BACA,YACA,YACA,aACA,SAAAwV,EAAAoI,EAAAra,GACA,IAAAkG,EAAAlG,EAAAkG,QACArB,EAAA7E,EAAA6E,MACAnE,EAAAV,EAAAU,OACApD,EAAA0C,EAAA1C,cACAmI,EAAAzF,EAAAyF,MACA0P,EAAAkF,EAAAlF,SAEAoG,EAAAtJ,EAAA5I,SACApC,WAAA,SAAAuU,EAAAlU,GACA,IAAAd,EAAAgV,MACAlU,IAAAA,MACAvC,KAAA0W,IAAAtG,EAAApQ,KAAA2W,WACA3W,KAAAyW,cACAlU,EAAAlB,aAAArB,KAAAqB,WAAAkB,EAAAlB,YACAkB,EAAA6M,QAAA3N,EAAAzB,KAAAoP,MAAA3N,EAAAc,QACA,IAAA5D,EAAAhD,EAAAqE,KAAA,YACAyB,EAAA3B,KAAAnB,EAAA8C,GACAzB,KAAA4W,IAAAnV,EAAAc,GACAvC,KAAA6W,YAIAA,QAAA,KAGAC,gBAAA,KAIAtB,YAAA,KAIAmB,UAAA,IAIAI,OAAA,SAAAxU,GACA,OAAA7B,EAAAV,KAAAyW,aAKAhQ,IAAA,SAAAuQ,GACA,OAAAhX,KAAAyW,WAAAO,IAKAhY,IAAA,SAAAgY,GACA,OAAA,MAAAhX,KAAAyG,IAAAuQ,IAMAJ,IAAA,SAAA7Z,EAAAka,EAAA1U,GACA,GAAA,MAAAxF,EAAA,OAAAiD,KAGA,IAAAyB,EAWA,GAVA,iBAAA1E,GACA0E,EAAA1E,EACAwF,EAAA0U,IAEAxV,MAAA1E,GAAAka,EAGA1U,IAAAA,OAGAvC,KAAAkX,UAAAzV,EAAAc,GAAA,OAAA,EAGA,IAAA4U,EAAA5U,EAAA4U,MACAC,EAAA7U,EAAA6U,OACAC,KACAC,EAAAtX,KAAAuX,UACAvX,KAAAuX,WAAA,EAEAD,IACAtX,KAAAwX,oBAAA9W,EAAAV,KAAAyW,YACAzW,KAAA6W,YAGA,IAAAY,EAAAzX,KAAAyW,WACAI,EAAA7W,KAAA6W,QACAa,EAAA1X,KAAAwX,oBAGA,IAAA,IAAAR,KAAAvV,EACAwV,EAAAxV,EAAAuV,GACA7V,EAAAsW,EAAAT,GAAAC,IAAAI,EAAAtb,KAAAib,GACA7V,EAAAuW,EAAAV,GAAAC,UAGAJ,EAAAG,GAFAH,EAAAG,GAAAC,EAIAE,SAAAM,EAAAT,GAAAS,EAAAT,GAAAC,EAOA,GAHAjX,KAAAwV,eAAA/T,IAAAzB,KAAA0G,GAAA1G,KAAAyG,IAAAzG,KAAAwV,eAGA4B,EAAA,CACAC,EAAAhe,SAAA2G,KAAA2X,SAAApV,GACA,IAAA,IAAA3G,EAAA,EAAAA,EAAAyb,EAAAhe,OAAAuC,IACAoE,KAAAwN,QAAA,UAAA6J,EAAAzb,GAAAoE,KAAAyX,EAAAJ,EAAAzb,IAAA2G,GAMA,GAAA+U,EAAA,OAAAtX,KACA,IAAAoX,EACA,KAAApX,KAAA2X,UACApV,EAAAvC,KAAA2X,SACA3X,KAAA2X,UAAA,EACA3X,KAAAwN,QAAA,SAAAxN,KAAAuC,GAKA,OAFAvC,KAAA2X,UAAA,EACA3X,KAAAuX,WAAA,EACAvX,MAKAmX,MAAA,SAAAH,EAAAzU,GACA,OAAAvC,KAAA4W,IAAAI,OAAA,EAAAlX,KAAAyC,GAAA4U,OAAA,MAIAS,MAAA,SAAArV,GACA,IAAAd,KACA,IAAA,IAAA1E,KAAAiD,KAAAyW,WAAAhV,EAAA1E,QAAA,EACA,OAAAiD,KAAA4W,IAAAnV,EAAA3B,KAAAyC,GAAA4U,OAAA,MAKAU,WAAA,SAAAb,GACA,OAAA,MAAAA,GAAAze,EAAAyH,KAAA6W,cACA9b,IAAAiF,KAAA6W,QAAAG,IASAc,kBAAA,SAAAC,GACA,IAAAA,EAAA,QAAA/X,KAAA6X,cAAAnX,EAAAV,KAAA6W,SACA,IAAAmB,EAAAhY,KAAAuX,UAAAvX,KAAAwX,oBAAAxX,KAAAyW,WACAI,KACA,IAAA,IAAAG,KAAAe,EAAA,CACA,IAAAd,EAAAc,EAAAf,GACA7V,EAAA6W,EAAAhB,GAAAC,KACAJ,EAAAG,GAAAC,GAEA,OAAA1e,EAAAse,IAAAA,GAKA1O,SAAA,SAAA6O,GACA,OAAA,MAAAA,GAAAhX,KAAAwX,oBACAxX,KAAAwX,oBAAAR,GADA,MAMAiB,mBAAA,WACA,OAAAvX,EAAAV,KAAAwX,sBAIA9W,MAAA,WACA,OAAA,IAAAV,KAAA9G,YAAA8G,KAAAyW,aAIAyB,MAAA,WACA,OAAAlY,KAAAhB,IAAAgB,KAAAwV,cAIA2C,QAAA,SAAA5V,GACA,OAAAvC,KAAAkX,aAAApX,KAAAyC,GAAA6V,UAAA,MAKAlB,UAAA,SAAAzV,EAAAc,GACA,IAAAA,EAAA6V,WAAApY,KAAAoY,SAAA,OAAA,EACA3W,EAAA3B,KAAAE,KAAAyW,WAAAhV,GACA,IAAA4J,EAAArL,KAAA8W,gBAAA9W,KAAAoY,SAAA3W,EAAAc,IAAA,KACA,OAAA8I,IACArL,KAAAwN,QAAA,UAAAxN,KAAAqL,EAAAvL,EAAAyC,GAAAuU,gBAAAzL,MACA,MAIA,OAAAmL,IAEA9e,OAAA,uBACA,YACA,WACA,eACA,WACA,UACA,cACA,aACA,YACA,UACA,UACA,YACA,YACA,YACA,aACA,YACA,UACA,SACA,SAAAC,EAAAoK,EAAAoD,EAAAmC,EAAA+E,EAAAgM,EAAAtT,EAAAmI,EAAA7D,EAAA7E,EAAAlG,EAAArD,EAAAsa,EAAAiB,EAAAlB,EAAAta,EAAA2V,GACA,aAEAxX,MAAAc,UAAA0C,OACAxD,MAAAc,UAAAsC,QACApD,MAAAc,UAAAoC,MACAlD,MAAAc,UAAAiB,OAJA,IAKA4E,EAAA7E,EAAA6E,MACAgC,EAAA7G,EAAA6G,UACAtJ,EAAAwC,EAAAxC,WAoCA,IAAA8f,EAAA,EAMA,SAAAC,IACA,OAAAA,EAsCA,OAnCAzY,EAAAyY,GACAC,YA5CA,SAAAzgB,EAAAqK,GACA,IAAAqL,EAAA,IAAAC,YAAA3V,EAAAqK,GAEA,OAAAN,EAAA2L,EAAArL,IA2CAqW,QAvCA,SAAA/P,EAAAxH,EAAAhE,EAAAwb,GACA,OAAAlgB,EAAA0I,GAAAA,EAAA5I,KAAAoQ,EAAAxL,EAAAwb,GAAAxX,GAwCAyX,eArCA,SAAAnI,GACA,IACAoI,GADApI,EAAAA,GAAAzX,OAAAsB,SAAAF,MACAnC,MAAA,KACAyH,KAEAmZ,EAAAvf,OAAA,GACAuf,EAAA,GAAA5gB,MAAA,KAAAC,QAAA,SAAA4gB,GACA,IAAAC,EAAAD,EAAA7gB,MAAA,KACAyH,EAAAqZ,EAAA,IAAAA,EAAA,KAGA,OAAArZ,GA4BAsZ,QAxBA,SAAAtgB,GAGA,OAAAugB,WAAAvgB,IAAA,GAuBAwgB,IAjBA,SAAA7gB,GACA,OAAAA,EAAAkgB,OAAAlgB,EAAAkgB,KAAAA,MAkBAY,IAAA,oBAAAngB,OAAAA,OAAAmgB,KAAAngB,OAAAogB,UAAA,OAKArZ,EAAAyY,EAAAxW,EAAAuF,EAAA+Q,EAAAhP,EAAA/K,EAAArD,EAAAqa,EAAAta,GACAmK,WAAAA,EAEAkH,MAAAA,EAEAtH,SAAAA,EAEAmI,QAAAA,EAEA1I,MAAAA,EAEA+Q,QAAAA,EAEAiB,SAAAA,EAEA7F,IAAAA,IAIAhZ,EAAA4gB,MAAAA,IAEA7gB,OAAA,2BACA,uBACA,SAAA6gB,GACA,OAAAA,IAGA7gB,OAAA,6BACA,QACA,WACA,SAAAE,EAAA2gB,GACA,aAEA,IAmBAa,EACAC,EAjBAC,GACAC,iBAAA,sBACAC,cAAA,gBACAC,YAAA,gCACAC,WAAA,iBAEAC,EAAA,KAGAC,EAAA,GAEAC,EAAA,GAEAC,KACAC,KAIAC,EAAA,qCAEAvJ,EAAA1X,OAAA0X,SACAwJ,EAAAxJ,EAAAC,cAAA,OAEAwJ,EAAAD,EAAAE,uBACAF,EAAAG,oBACAH,EAAAI,kBACAJ,EAAAC,gBAEAI,EAAAL,EAAAM,mBACAN,EAAAO,yBACAP,EAAAQ,sBACAR,EAAAS,oBAOAC,GALAlK,EAAAmK,gBACAnK,EAAAoK,wBACApK,EAAAqK,qBACArK,EAAAsK,iBAEAd,EAAAe,OAEA,IAAA,IAAA9iB,KAAAyiB,EAAA,CACA,IAAAM,EAAA/iB,EAAA2X,MAAAwJ,GAAAW,GACA,GAAAiB,EAAA,CACA5B,IACAD,EAAA6B,EAAA,GACA5B,EAAA,IAAA6B,OAAA,KAAA9B,EAAA,UAEAA,EACAQ,EAAA,IAAAR,EAAAjhB,cAAA,IACA0hB,EAAAT,EAAAjhB,eAGA2hB,EAAAvB,EAAAlJ,WAAA4L,EAAA,KAAA/iB,EACA,IAAAijB,EAAA5C,EAAAtJ,UAAAgM,EAAA,IACAlB,EAAAoB,GAAAvB,EAAAuB,EAEA7B,EAAAphB,KACAyhB,EAAAL,EAAAphB,KAuBA,SAAAkjB,IACA,OAAAA,EAsCA,OAzDAzB,QACA5e,IAAA4f,EAAA,aACAhB,EAAAL,EAAA,YAoBAf,EAAAzY,MAAAsb,GACAxB,eAAAA,EAEAyB,OAAA,QAAAC,KAAAviB,OAAAwiB,UAAAC,WAEAC,uBAbA,SAAAvjB,GACA,OAAA4hB,EAAA5hB,IAAAA,GAcAwjB,qBAnBA,SAAAxjB,GACA,OAAA6hB,EAAA7hB,IAAAA,GAoBAyjB,kBAzBA,SAAAzjB,GACA,OAAA2hB,EAAAA,EAAA3hB,EAAAA,EAAAC,eA0BA+hB,gBAAAA,EAEAI,kBAAAA,EAEAM,eAAAN,EAEAjgB,SAAA,WACA,OAAAtB,OAAAsB,UAGAuhB,aAMAjC,IACAyB,EAAAQ,QAAAlC,YACAmC,IAAAlC,IAIAM,EAAA,KAEAriB,EAAAwjB,QAAAA,IAGA1jB,OAAA,4BACA,QACA,WACA,SAAAE,EAAA2gB,GACApf,MAAAc,UAAA6hB,MAAA,IACA7jB,EAAAkB,MAAAc,UAAAhC,QACA8W,EAAAwJ,EAAAxJ,UACAE,EAAAsJ,EAAAtJ,UAEA,SAAA8M,EAAA7jB,EAAAO,GACA,MAAA,iBAAAA,GAAAujB,EAAA/M,EAAA/W,IAAAO,EAAAA,EAAA,KAGA,IAAAujB,GACAC,eAAA,EACAC,QAAA,EACAC,cAAA,EACAC,cAAA,EACAC,QAAA,EACAC,UAAA,EACAC,KAAA,GAEAC,KAIA,SAAAC,EAAAvkB,GACA,OAAAA,KAAAskB,EACAA,EAAAtkB,GAAAskB,EAAAtkB,GAAA,IAAAgjB,OAAA,UAAAhjB,EAAA,WASA,SAAAoI,EAAAoc,EAAAjkB,GACA,IAAA+L,EAAAkY,EAAApc,WAAA,GACAqc,EAAAnY,QAAAzJ,IAAAyJ,EAAAoY,QAEA,QAAA7hB,IAAAtC,EAAA,OAAAkkB,EAAAnY,EAAAoY,QAAApY,EACAmY,EAAAnY,EAAAoY,QAAAnkB,EAAAikB,EAAApc,UAAA7H,EAaA,IAAAokB,KAiEA,SAAAC,EAAAC,GAKA,IAAAC,EAAAD,EAAAE,cAAAC,YAMA,OAJAF,GAAAA,EAAAG,SACAH,EAAAjkB,QAGAikB,EAAAI,iBAAAL,GAgHA,IAAAM,EAAA,WACA,OAAAA,GAqBA,OAlBA9E,EAAAzY,MAAAud,GACAC,YAAA,EACAC,YAIAC,SA1JA,SAAAC,EAAAvlB,GACA,IAAAA,EAAA,OAAA8H,KACA,IACA0d,EADA5a,EAAAxC,EAAAmd,GAGAC,EADAnF,EAAA1f,SAAAX,GACAA,EAAAF,MAAA,QAEAE,EAWA,OATAwlB,EAAAzlB,QAAA,SAAAuM,GACA,IAAAmZ,EAAAlB,EAAAjY,GACA1B,EAAA+M,MAAA8N,KACA7a,IAAAA,EAAA,IAAA,IAAA0B,KAIAlE,EAAAmd,EAAA3a,GAEA9C,MAyIAM,UAAAA,EACAsd,IAlHA,SAAAH,EAAAI,EAAAplB,GACA,GAAAiH,UAAArG,OAAA,EAAA,CACA,IACAykB,EAAAhB,EAAAW,GACA,GAAAlF,EAAA1f,SAAAglB,GACA,OAAAJ,EAAAzC,MAAAjM,EAAA8O,KAAAC,EAAAC,iBAAA9O,EAAA4O,IACA,GAAAtF,EAAAnf,YAAAykB,GAAA,CACA,IAAAzb,KAIA,OAHAnK,EAAAK,KAAAulB,EAAA,SAAAhc,GACAO,EAAAP,GAAA4b,EAAAzC,MAAAjM,EAAAlN,KAAAic,EAAAC,iBAAA9O,EAAApN,MAEAO,GAIA,IAAAwb,EAAA,GACA,GAAA,iBAAA,EACAnlB,GAAA,IAAAA,EAGAmlB,EAAA3O,EAAA4O,GAAA,IAAA9B,EAAA8B,EAAAplB,GAFAglB,EAAAzC,MAAAgD,eAAA/O,EAAA4O,SAKA,IAAA9gB,OAAA8gB,OACA9iB,IAAA8iB,EAAA9gB,OAGA8gB,EAAA9gB,MAAA,IAAA8gB,EAAA9gB,KAGA6gB,GAAA3O,EAAAlS,KAAA,IAAAgf,EAAAhf,IAAA8gB,EAAA9gB,MAAA,IAFA0gB,EAAAzC,MAAAgD,eAAA/O,EAAAlS,OAQA,OADA0gB,EAAAzC,MAAAiD,SAAA,IAAAL,EACA5d,MA+EAke,SAnNA,SAAAT,EAAAhlB,GACA,GAAAiH,UAAArG,OAAA,EACA,QAAA2G,KAAApI,IAAAsmB,SAKA,OAFAT,EAAAS,SAAAzlB,EAEAuH,MA6MAme,SAxEA,SAAAV,EAAAvlB,GACA,IAAAylB,EAAAlB,EAAAvkB,GACA,OAAAulB,EAAAnd,WAAAmd,EAAAnd,UAAAuP,MAAA8N,IAuEAS,KAzKA,SAAAX,GAEA,OADAJ,EAAAO,IAAAH,EAAA,UAAA,QACAzd,MAwKAqe,YAlLA,SAAAZ,GACA,MAAA,QAAAJ,EAAAO,IAAAH,EAAA,YAAA,GAAAJ,EAAAO,IAAAH,EAAA,YAkLAa,YAjEA,SAAAb,EAAAvlB,GACA,GAAAA,EAAA,CACA,IAAA4K,EAAAxC,EAAAmd,IAGAlF,EAAA1f,SAAAX,GACAA,EAAAF,MAAA,QAEAE,GAGAD,QAAA,SAAAuM,GACA,IAAAmZ,EAAAlB,EAAAjY,GACA1B,EAAA+M,MAAA8N,KACA7a,EAAAA,EAAA7E,QAAA0f,EAAA,QAIArd,EAAAmd,EAAA3a,EAAAmK,aAEA3M,EAAAmd,EAAA,IAGA,OAAAzd,MA2CAue,KA5LA,SAAAd,GACAJ,EAAAO,IAAAH,EAAA,UAAA,IACA,QAAAJ,EAAAO,IAAAH,EAAA,YACAJ,EAAAO,IAAAH,EAAA,UAnBA,SAAAe,GACA,IAAAC,EAAAC,EACA7B,EAAA2B,KACAC,EAAAhO,SAAAC,cAAA8N,GACA/N,SAAAkO,KAAAC,YAAAH,GACAC,EAAA5B,EAAA2B,GAAAV,iBAAA,WACAU,EAAAI,WAAAC,YAAAL,GACA,QAAAC,IAAAA,EAAA,SACA7B,EAAA2B,GAAAE,GAEA,OAAA7B,EAAA2B,GASAO,CAAAtB,EAAAe,WAEA,OAAAxe,MAwLAgf,YAnCA,SAAAvB,EAAAvlB,EAAA8M,GACA,IAAA8E,EAAA9J,KAYA,OAXA9H,EAAAF,MAAA,QAAAC,QAAA,SAAAuM,QACAzJ,IAAAiK,IACAA,GAAA8E,EAAAqU,SAAAV,EAAAjZ,IAEAQ,EACA8E,EAAA0T,SAAAC,EAAAjZ,GAEAsF,EAAAwU,YAAAb,EAAAjZ,KAIAsF,KAyBAlS,EAAAylB,OAAAA,IAEA3lB,OAAA,2BACA,QACA,UACA,YACA,YACA,SAAAE,EAAA2gB,EAAA6C,EAAAiC,GACA,IAAAhC,IAAAE,UAAAC,UAAA3L,MAAA,eAAA0L,UAAAC,UAAA3L,MAAA,SACAoP,EAAA,qBACAC,EAAA,6BACAC,EAAA1O,SAAAC,cAAA,OACA0O,EAAA3O,SAAAC,cAAA,SACA2O,EAAA5O,SAAAC,cAAA,SACA4O,EAAA7O,SAAAC,cAAA,MACA6O,GACAC,GAAAH,EACAI,MAAAL,EACAM,MAAAN,EACAO,MAAAP,EACAQ,GAAAN,EACAO,GAAAP,EACAQ,IAAAX,GAEAY,EAAA,mBACAnjB,EAAAzD,MAAAc,UAAA2C,IACAP,EAAAlD,MAAAc,UAAAoC,MAEA,SAAA2jB,EAAAC,EAAAC,GASA,OARA3H,EAAAnf,YAAA6mB,KACAA,GAAAA,IAEAC,IACAD,EAAArjB,EAAAtE,KAAA2nB,EAAA,SAAAvD,GACA,OAAAA,EAAAyD,WAAA,MAGA5H,EAAA7c,QAAAukB,GA2DA,SAAAG,EAAA1D,EAAA2D,EAAAH,GAGA,IAFA,IAAArB,EAAAnC,EACAuD,EAAAD,EAAAK,EAAAH,GACAtkB,EAAA,EAAAA,EAAAqkB,EAAA5mB,OAAAuC,IACAijB,EAAAD,YAAAqB,EAAArkB,IAEA,OAAAoE,KA+BA,SAAA0Q,EAAA4P,EAAAle,EAAAC,GACA,IAAAqa,EAAAjM,SAAAC,cAAA4P,GACA,GAAAle,EACA,IAAA,IAAAlK,KAAAkK,EACAsa,EAAA6D,aAAAroB,EAAAkK,EAAAlK,IAMA,OAHAmK,GACA+d,EAAA/d,EAAAqa,GAEAA,EAuJA,IAAA8D,EAAA,0EAmCA,SAAAC,EAAA/D,EAAAra,EAAAqe,GACA,GAAAA,EACA,OAAAhE,EAAAmC,aAAAxc,EAEA,GAAAoO,SAAAkQ,gBAAAC,SACA,OAAAve,EAAAue,SAAAlE,GAEA,KAAAA,GAAA,CACA,GAAAra,IAAAqa,EACA,OAAA,EAGAA,EAAAA,EAAAmC,WAGA,OAAA,EAiBA,SAAAgC,EAAApD,GACA,OAAAA,EAIA,GAAAA,EAAAhkB,SACAgkB,EAGAA,EAAAR,cAPAxM,SAyPA,SAAAqQ,IACA,OAAAA,EA0EA,OAvEAvI,EAAAzY,MAAAghB,GACAC,OAxjBA,SAAAC,GAEA,IAAAC,EADAD,EAAAA,GAAAvQ,SAKA,IACAwQ,EAAAD,EAAAE,cACA,MAAA7V,GACA4V,EAAAD,EAAArC,KAMAsC,IACAA,EAAAD,EAAArC,MAMAsC,EAAAzC,WACAyC,EAAAD,EAAArC,MAGA,OAAAsC,GAgiBAE,KAAA,SAAAF,GACAA,EAAAE,QAGAxC,KAAA,WACA,OAAAlO,SAAAkO,MAGAje,MAlcA,SAAAgc,EAAArd,GACA,IACAqB,EADAoJ,EAAA9J,KAIA,IAAAqb,GAAA,IAAAqB,EAAAjjB,UAAA4F,EACA,OAAAqd,EAAAyD,UAAA9gB,GAIA,IAAAA,EAQA,OAPAqB,EAAA+P,SAAAC,cAAAgM,EAAA8B,UAGAzd,KAAA+I,EAAAsX,WAAA1E,GAAA,SAAA1F,GACAlN,EAAAuX,UAAA3gB,EAAAsW,EAAAwH,SAAA1U,EAAAwX,UAAA5E,EAAA1F,EAAAwH,aAGA9d,GAibA6gB,SA5fA,SAAA9D,GACA,GAjFA,SAAAA,EAAA+D,GACA,IAAAtpB,EAAAulB,EAAAe,UAAAf,EAAAe,SAAArmB,cACA,QAAA4C,IAAAymB,EACA,OAAAtpB,IAAAspB,EAAArpB,cAEA,OAAAD,EA4EAsmB,CAAAf,EAAA,UACA,OAAAA,EAAAgE,gBAEA,OAAAhE,EAAAiE,YA0fAhR,cAAAA,EAEAiR,eAleA,SAAA/P,GAGA,GADAA,EAAA2G,EAAAtL,KAAA2E,GACAsN,EAAA/gB,KAAAyT,GACA,OAAAlB,EAAAwK,OAAA0G,KAGA,IAAA1pB,EAAA+mB,EAAA9gB,KAAAyT,IAAAsJ,OAAA0G,GACA1pB,KAAAqnB,IACArnB,EAAA,KAEA,IAAA2pB,EAAAtC,EAAArnB,GAQA,OAPA2pB,EAAAC,UAAA,GAAAlQ,GACAha,EAAAyE,EAAA/D,KAAAupB,EAAAH,aAEAzpB,QAAA,SAAAykB,GACAmF,EAAA/C,YAAApC,KAGA9kB,GAidAgpB,SA9aA,SAAAlE,EAAAqF,GACA,OAAAtB,EAAAsB,EAAArF,IA+aAsF,eAvaA,SAAAnQ,GACA,OAAApB,SAAAuR,eAAAnQ,IAwaAmP,IAlaA,WACA,OAAAvQ,UAmaAwR,MA5ZA,SAAAvF,GACA,KAAAA,EAAAwF,iBAAA,CACA,IAAAH,EAAArF,EAAAyF,WACAzF,EAAAoC,YAAAiD,GAEA,OAAA/hB,MAyZAoiB,WApZA,SAAAnB,GACA,IAAA,IAAAA,EACA7F,EAAAiH,eAAAtiB,MAAA0Q,cACA,CAAA,IAAAwQ,EAIA,OACAxQ,SAAA6R,mBACA7R,SAAA8R,yBACA9R,SAAA+R,sBACA/R,SAAAgS,oBAPArH,EAAAd,kBAAAva,MAAAkhB,GACAA,IAiZAyB,UApYA,SAAAjE,EAAAkE,GACA,IAAA/lB,EAAAgmB,EAAAC,EAAAC,EAAAC,EACAvE,EAAAC,EAAAD,SAAArmB,cAEA,GAAA,SAAAqmB,EAGA,OAFA5hB,EAAA6hB,EAAAI,WACA+D,EAAAhmB,EAAA1E,QACAumB,EAAAtkB,OAAAyoB,GAAA,QAAAhmB,EAAA4hB,SAAArmB,kBAGA0qB,EAAAG,EAAA,gBAAAJ,EAAA,OACAvpB,OAAA,GAAAwpB,EAAAI,GAAA,aAGA,0CAAA9kB,KAAAqgB,IACAsE,GAAArE,EAAAP,YAQA6E,EAAAC,EAAAvE,GAAAyE,QAAA,YAAA,MAEAJ,GAAAC,EAAA7E,UAIA4E,EADA,MAAAtE,GACAC,EAAAtkB,MAEAwoB,EAGA,OAAAG,GAAAE,EAAAvE,GAAAwE,GAAA,aAAAE,QAAAH,EAAAvE,KAoWA7M,KAzVA,SAAA8K,EAAA9K,GACA,QAAA7W,IAAA6W,EACA,OAAA8K,EAAAoF,UAOA,GALA9hB,KAAAiiB,MAAAvF,GACA9K,EAAAA,GAAA,GACA2G,EAAA1f,SAAA+Y,KACAA,EAAAA,EAAA3T,QAAAuiB,EAAA,cAEAjI,EAAA1f,SAAA+Y,IAAA2G,EAAA1e,SAAA+X,GACA8K,EAAAoF,UAAAlQ,OACA,GAAA2G,EAAAnf,YAAAwY,GACA,IAAA,IAAAhW,EAAA,EAAAA,EAAAgW,EAAAvY,OAAAuC,IACA8gB,EAAAkC,YAAAhN,EAAAhW,SAGA8gB,EAAAkC,YAAAhN,IA2UA6O,UAAAA,EAEA2C,MAzSA,SAAA1G,GACA,OAAA,MAAAA,GAAAA,EAAAjjB,UAAAijB,EAAAhjB,eA0SAZ,SAAAyf,EAAAzf,SAEAuqB,aAxPA,SAAA5F,GACA,IAAApb,EAAAob,EAAA4F,cAAA5S,SAAAkO,KACA,KAAAtc,IAAA0d,EAAA5hB,KAAAkE,EAAAmc,WAAA,UAAAnB,EAAAO,IAAAvb,EAAA,aACAA,EAAAA,EAAAghB,aAEA,OAAAhhB,GAqPAwe,SAAAA,EAEAyC,YAzRA,SAAA7F,GACA,IAAAuD,EAAAH,EAAApD,GACA,OAAAuD,EAAA9D,aAAA8D,EAAAuC,cAyRAvb,MAtkBA,SAAA0U,EAAA2D,EAAAH,GACA,IACA7d,GADAmhB,EAAA9G,GACAmC,WACA,GAAAxc,EAIA,IAHA,IAAA4d,EAAAD,EAAAK,EAAAH,GACAsD,EAAAA,EAAAC,YAEA7nB,EAAA,EAAAA,EAAAqkB,EAAA5mB,OAAAuC,IACA4nB,EACAnhB,EAAAqhB,aAAAzD,EAAArkB,GAAA4nB,GAEAnhB,EAAAuc,YAAAqB,EAAArkB,IAIA,OAAAoE,MAyjBA6H,OA7iBA,SAAA6U,EAAA2D,EAAAH,GACA,IAAAsD,EAAA9G,EACAra,EAAAmhB,EAAA3E,WACA,GAAAxc,EAEA,IADA,IAAA4d,EAAAD,EAAAK,EAAAH,GACAtkB,EAAA,EAAAA,EAAAqkB,EAAA5mB,OAAAuC,IACAyG,EAAAqhB,aAAAzD,EAAArkB,GAAA4nB,GAGA,OAAAxjB,MAsiBA2jB,QApRA,SAAAjH,EAAA2D,EAAAH,GAIA,IAHA,IAAArB,EAAAnC,EACA8G,EAAA3E,EAAAsD,WACAlC,EAAAD,EAAAK,EAAAH,GACAtkB,EAAA,EAAAA,EAAAqkB,EAAA5mB,OAAAuC,IACA4nB,EACA3E,EAAA6E,aAAAzD,EAAArkB,GAAA4nB,GAEA3E,EAAAD,YAAAqB,EAAArkB,IAGA,OAAAoE,MA2QAogB,OAAAA,EAEAlZ,OArOA,SAAAwV,GACA,GAAAA,GAAAA,EAAAmC,WACA,IACAnC,EAAAmC,WAAAC,YAAApC,GACA,MAAAjP,GACAmW,QAAAC,KAAA,8BAAApW,GAGA,OAAAzN,MA+NA8e,YA5NA,SAAApC,EAAAoH,GACAvL,EAAAnf,YAAA0qB,KACAA,GAAAA,IAEA,IAAA,IAAAloB,EAAA,EAAAA,EAAAkoB,EAAAzqB,OAAAuC,IACA8gB,EAAAoC,YAAAgF,EAAAloB,IAGA,OAAAoE,MAsNA/B,QA5LA,SAAAye,EAAAqH,GAEA,OADAA,EAAAlF,WAAAmF,aAAAtH,EAAAqH,GACA/jB,MA4LAikB,MApLA,SAAAxG,EAAAhe,GAEA,IAKAykB,EALApa,EAAA9J,KACA6R,GAFApS,EAAAA,OAEAoS,KACAmJ,EAAAvb,EAAAub,MACAmJ,EAAA1kB,EAAA0kB,KACArnB,EAAA2C,EAAA3C,SAEAsnB,EAAApkB,KAAA0Q,cAAA,OACApQ,UAAAb,EAAAa,WAAA,WACA0a,MAAAA,IAKAiJ,GA1FA,SAAAxG,EAAAhe,GACA,IAAA4kB,EAAA3T,EAAA,MAAAjR,GACA4d,EAAAO,IAAAyG,GACAC,SAAA,WACAC,IAAA,EACAC,KAAA,EACAC,MAAA,OACAC,OAAA,OACAC,OAAA,WACAtI,QAAA,KAEAoB,EAAAmB,YAAAyF,GA4EAO,CAAAR,GACA9jB,UAAA,iBAEAN,KAAA0Q,cAAA,OACApQ,UAAA,WAEAukB,EAAA7kB,KAAAgiB,eAAAnQ,GAAA,IACA3K,EAAA,WACAgd,IACAvb,aAAAub,GACAA,EAAA,MAEAE,IACAta,EAAA5C,OAAAkd,GACAA,EAAA,OAQAH,EAAArF,YAAAiG,GACAT,EAAAxF,YAAAqF,GACAxG,EAAAmB,YAAAwF,GAKAD,IACAD,EAAAtb,WALA,WACA1B,IACApK,GAAAA,KAGAqnB,IAGA,OACAjd,OAAAA,EACAoP,OAlBA,SAAA7W,GACAA,GAAAA,EAAAoS,MAAAuS,IACAS,EAAAC,UAAArlB,EAAAoS,SAuJAkT,SA7HA,SAAAA,EAAArI,EAAA3Y,GACAA,EAAA2Y,GACA,IAAA,IAAA9gB,EAAA,EAAAiS,EAAA6O,EAAAgF,WAAAroB,OAAAuC,EAAAiS,EAAAjS,IACAmpB,EAAArI,EAAAgF,WAAA9lB,GAAAmI,GAEA,OAAA/D,MA0HAiQ,QAnHA,SAAAyM,GAEA,IADA,IAAAyF,EAAAzF,EAAAyF,WACAvmB,EAAA8gB,EAAAoH,SAAAzqB,OAAA,EAAAuC,EAAA,EAAAA,IACA,GAAAA,EAAA,EAAA,CACA,IAAAmmB,EAAArF,EAAAoH,SAAAloB,GACA8gB,EAAAgH,aAAA3B,EAAAI,KAgHA6C,QAtGA,SAAAtI,EAAAuI,GACA1M,EAAA1f,SAAAosB,KACAA,EAAAjlB,KAAA2hB,eAAAsD,GAAA9C,YAEAzF,EAAAmC,WAAA6E,aAAAuB,EAAAvI,GACAuI,EAAArG,YAAAlC,IAmGAwI,aA3FA,SAAAxI,EAAAuI,GACA,IAAAvD,EAAArlB,EAAA/D,KAAAokB,EAAAgF,YACAhF,EAAAkC,YAAAqG,GACA,IAAA,IAAArpB,EAAA,EAAAA,EAAA8lB,EAAAroB,OAAAuC,IACAqpB,EAAArG,YAAA8C,EAAA9lB,IAEA,OAAAoE,MAuFAmlB,OAhFA,SAAAzI,GACA,IAAAra,EAAAqa,EAAAmC,WACA,GAAAxc,EAAA,CACA,GAAArC,KAAAojB,MAAA/gB,EAAAwc,YAAA,OACAxc,EAAAwc,WAAA6E,aAAAhH,EAAAra,OA+EAzK,EAAAkpB,MAAAA,IAEAppB,OAAA,4BACA,QACA,UACA,YACA,WACA,SAAAE,EAAA2gB,EAAA6C,EAAA0F,EAAAsE,GACA,IAAAC,KACAnqB,EAAA/B,MAAAc,UAAAiB,OACAmB,EAAAlD,MAAAc,UAAAoC,MACAipB,EAAAlK,EAAAlB,iBAUA,WAEA,IAAAqL,EACAC,EACAC,EACAC,EAyDAC,EAxDA/f,KACAggB,KACAC,EAAA,MAEAzW,EAAA,SAAA0W,EAAAC,GACA,GAAA,MAAAD,EAAA,OAAA,KACA,IAAA,IAAAA,EAAAE,MAAA,OAAAF,EACAA,GAAA,GAAAA,GAAA7nB,QAAA,aAAA,IAEA,IAAAgoB,GADAP,IAAAK,GACAH,EAAAhgB,EACA,GAAAqgB,EAAAH,GAAA,OAAAG,EAAAH,GAUA,IATAP,GACAS,OAAA,EACAE,eACAC,IAAAL,EACA7V,QAAA,WACA,OAAAb,EAAApP,KAAAmmB,KAAA,KAGAX,GAAA,EACAM,IAAAA,EAAAA,EAAA7nB,QAAAmoB,EAAAC,MAEA,OADAd,EAAAlsB,OAAAksB,EAAAW,YAAA7sB,OACA4sB,EAAAV,EAAAY,KAAA,EAAAlW,EAAAsV,GAAAA,GAGAe,EAAA,SAAAC,GACA,MAAA,MAAAA,EAAA,IACA,MAAAA,EAAA,IACA,KAAApoB,KAAAooB,GAAAA,EAAAtoB,QAAA,KAAA,IACA,IAAAsoB,GAGAtW,EAAA,SAAA6V,GAEA,IADA,IAAAI,EAAAJ,EAAAI,YACAtqB,EAAA,EAAAA,EAAAsqB,EAAA7sB,OAAAuC,IAAA,CAQA,IAPA,IAAA4qB,EAAAN,EAAAtqB,GACA6qB,GACAC,SACApG,IAAA,IACAiG,WAAAD,EAAAE,EAAA,GAAAD,aAGAzqB,EAAA,EAAAA,EAAA0qB,EAAAntB,OAAAyC,IAAA,CACA,IAAA6qB,EAAAH,EAAA1qB,GACA6qB,EAAAL,oBAAAK,EAAAL,kBAAA,KACAK,EAAAJ,WAAAI,EAAAL,yBACAK,EAAAL,kBAGAE,EAAAvW,UAAAlU,KAAA0qB,GAEA,OAAAX,GAGAc,GAEAjB,EAAA,kCAEA,SAAAkB,GACA,OAAAA,EAAA5oB,QAAA0nB,EAFA,QAMAS,EAAA,IAAAlL,OACA,0QACAjd,QAAA,eAAA,IAAA2oB,EAAA,sBAAA,KACA3oB,QAAA,aAAA,8CACAA,QAAA,cAAA,gDAGA,SAAAooB,EACAS,EAEAC,EACAR,EACAS,EAEAC,EACAvgB,EACApG,EAEA4mB,EACAC,EACAC,EACAC,EAEAC,EACAC,EACAC,EACAC,EACAC,GAEA,IAAAX,IAAA,IAAAvB,KACAD,EAAAW,cAAAV,MACAC,GAAA,EACAsB,GAAA,MAAA,GAGA,GAAAR,GAAAS,IAAA,IAAAvB,EAAA,CACAc,EAAAA,GAAA,IACA,IAAAoB,EAAApC,EAAAW,YAAAV,GACAE,GAAAiC,EAAAlC,KACAkC,EAAAlC,GAAAa,kBAAAA,EAAAC,IACAoB,IAAAlC,IACAc,WAAAA,EACAjG,IAAA,KAIA,IAAAsH,EAAArC,EAAAW,YAAAV,GAAAC,GAEA,GAAAwB,EACAW,EAAAtH,IAAA2G,EAAAhpB,QAAA4nB,EAAA,SAEA,GAAAnf,EACAkhB,EAAAlhB,GAAAA,EAAAzI,QAAA4nB,EAAA,SAEA,GAAAvlB,EACAA,EAAAA,EAAArC,QAAA4nB,EAAA,IAEA+B,EAAAC,YAAAD,EAAAC,cACAD,EAAAE,UAAAF,EAAAE,YACAF,EAAAC,UAAA9rB,KAAAuE,GACAsnB,EAAAE,QAAA/rB,MACAtD,MAAA6H,EACA8lB,OAAA,IAAAlL,OAAA,UAAA0L,EAAAtmB,GAAA,kBAGA,GAAAinB,EAEAG,GADAA,EAAAA,GAAAD,GACAC,EAAAzpB,QAAA4nB,EAAA,IAAA,KAEA+B,EAAAG,UAAAH,EAAAG,YACAH,EAAAG,QAAAhsB,MACAgB,IAAAwqB,EAAAtpB,QAAA4nB,EAAA,IACAptB,MAAAivB,EACA3vB,KAAA,GAAAuvB,EAAAjuB,OAAA,QAAA,iBAGA,GAAA6tB,EAAA,CAIA,IAAA/oB,EAAAioB,EAEA,OALAc,EAAAA,EAAAjpB,QAAA4nB,EAAA,IACAwB,GAAAA,GAAA,IAAAppB,QAAA4nB,EAAA,IAIAsB,GACA,IAAA,KACAf,EAAA,IAAAlL,OAAA,IAAA0L,EAAAS,IACA,MACA,IAAA,KACAjB,EAAA,IAAAlL,OAAA0L,EAAAS,GAAA,KACA,MACA,IAAA,KACAjB,EAAA,IAAAlL,OAAA,UAAA0L,EAAAS,GAAA,WACA,MACA,IAAA,KACAjB,EAAA,IAAAlL,OAAA,IAAA0L,EAAAS,GAAA,SACA,MACA,IAAA,IACAlpB,EAAA,SAAA1F,GACA,OAAA4uB,GAAA5uB,GAEA,MACA,IAAA,KACA0F,EAAA,SAAA1F,GACA,OAAAA,GAAAA,EAAA8D,QAAA8qB,IAAA,GAEA,MACA,IAAA,KACAlpB,EAAA,SAAA1F,GACA,OAAA4uB,GAAA5uB,GAEA,MACA,QACA0F,EAAA,SAAA1F,GACA,QAAAA,GAIA,IAAA4uB,GAAA,WAAAlpB,KAAAgpB,KAAAhpB,EAAA,WACA,OAAA,IAGAA,IAAAA,EAAA,SAAA1F,GACA,OAAAA,GAAA2tB,EAAAjoB,KAAA1F,KAGAmvB,EAAAnR,aAAAmR,EAAAnR,eACAmR,EAAAnR,WAAA1a,MACAgB,IAAAmqB,EACAc,SAAAb,EACA1uB,MAAA4uB,EACAlpB,KAAAA,IAKA,MAAA,GAKA,IAAA6nB,EAAAhmB,KAAAgmB,UAEAA,EAAA5W,MAAA,SAAA0W,GACA,OAAA1W,EAAA0W,IAGAE,EAAAY,aAAAA,EAEA5mB,KAAAgmB,QAAAhmB,KAAAgmB,MAAAA,KAEAjmB,MAAAslB,GAGA,IAEA4C,EAAA,sCACAC,EAAA,SACA7rB,EAAAlD,MAAAc,UAAAoC,MAGAgpB,EAAA8C,cAAA9C,EAAAW,MAAA5W,MAGA,IAAA2Y,EAAA1C,EAAA0C,SAEAK,OAAA,SAAArL,GACA,IAAA7kB,EAAA6kB,EAAAyB,SAAArmB,cACA,MAAA,UAAAD,GAAA,WAAA6kB,EAAAhlB,MAAA,WAAAG,GAGAmwB,QAAA,SAAA5K,GACA,QAAAA,EAAA4K,SAGAzH,SAAA,SAAAnD,EAAAvgB,EAAA+iB,EAAApO,GACA,GAAAmR,EAAAhjB,MAAA6R,OAAAtV,QAAAsV,IAAA,EAAA,OAAA7R,MAGAke,SAAA,SAAAT,GACA,QAAAA,EAAAS,UAGAoK,QAAA,SAAA7K,GACA,OAAAA,EAAAS,UAGA3f,GAAA,SAAAkf,EAAAvgB,EAAA+iB,EAAAxnB,GACA,OAAAyE,GAAAzE,GAGA8vB,KAAA,SAAA9K,EAAAvgB,EAAA+iB,EAAAxnB,GACA,OAAAyE,EAAA,GAAA,GAGAsrB,MAAA,SAAA/K,GACA,OAAAhN,SAAAyQ,gBAAAzD,IAAAA,EAAAtjB,MAAAsjB,EAAA1lB,MAAA0lB,EAAAgL,WAGA/F,UAAA,SAAAjF,GACA,OAAAqD,EAAA4B,UAAAjF,EAAA,MAAAA,EAAAgL,WAGAvsB,MAAA,SAAAuhB,EAAAvgB,GACA,OAAA,IAAAA,GAGAwrB,GAAA,SAAAjL,EAAAvgB,EAAA+iB,EAAAxnB,GACA,OAAAyE,EAAAzE,GAGAuG,IAAA,SAAAye,EAAAvgB,EAAA+iB,EAAA0I,GACA,OAAAC,EAAAnL,EAAAkL,IAIAE,OAAA,SAAA9L,GACA,OAAAmL,EAAA/pB,KAAA4e,EAAAyB,WAGAsK,OAAA,SAAArL,GACA,OAAA4H,EAAA0C,QAAA,QAAAtK,IAGAsL,MAAA,SAAAhM,GACA,OAAAkL,EAAA9pB,KAAA4e,EAAAyB,WAGAiI,KAAA,SAAAhJ,EAAAvgB,EAAA+iB,GACA,OAAA/iB,IAAA+iB,EAAA5mB,OAAA,GAGA2vB,GAAA,SAAAvL,EAAAvgB,EAAA+iB,EAAAxnB,GACA,OAAAyE,EAAAzE,GAGAwwB,IAAA,SAAAxL,EAAAvgB,EAAA+iB,EAAA0I,GACA,OAAApiB,EAAAkX,EAAAkL,IAGAO,IAAA,SAAAzL,EAAAvgB,EAAA+iB,EAAAxnB,GACA,OAAAyE,EAAA,GAAA,GAOAmF,OAAA,SAAAob,GACA,QAAAA,EAAAoB,YAGAsK,SAAA,SAAA1L,GACA,QAAAA,EAAA0L,UAGAC,SAAA,SAAA3L,GACA,IAAA4L,EAAA5L,EAAAgL,SACA9F,EAAA,MAAA0G,EACA,QAAA1G,GAAA0G,GAAA,IAAAvI,EAAA4B,UAAAjE,QAAAkE,IAGA9Q,KAAA,SAAA4L,GACA,MAAA,SAAAA,EAAA1lB,MAGAorB,QAAA,SAAA1F,GACA,OAAAA,EAAA6L,aAAA7L,EAAA6L,cAYA,SAAAC,EAAAxxB,GACA,OAAA,SAAAglB,GACA,IAAA7kB,EAAA6kB,EAAAyB,SAAArmB,cACA,MAAA,UAAAD,GAAA6kB,EAAAhlB,OAAAA,GAIA,SAAAyxB,EAAAzxB,GACA,OAAA,SAAAglB,GACA,IAAA7kB,EAAA6kB,EAAAyB,SAAArmB,cACA,OAAA,UAAAD,GAAA,WAAAA,IAAA6kB,EAAAhlB,OAAAA,GAKA,IAAA6D,KAvBA,QAAA,KAAA,QAAA3D,QAAA,SAAA4D,GACAksB,EAAAlsB,GAAA4tB,eAAA,IAKA1B,EAAA,IAAAA,EAAA,IAkBA2B,OAAA,EACAC,UAAA,EACAC,MAAA,EACAnW,UAAA,EACAoW,OAAA,GAEA9B,EAAAnsB,GAAA2tB,EAAA3tB,GAEA,IAAAA,KACAkuB,QAAA,EACAC,OAAA,GAEAhC,EAAAnsB,GAAA4tB,EAAA5tB,GAiWA,SAAAouB,EAAAtN,EAAArP,EAAA4c,GAGA,IAFA,IAAA9lB,KACA+lB,EAAAD,GAAA1R,EAAA1f,SAAAoxB,IACAvN,EAAAA,EAAAmC,aAAA,IAAAnC,EAAAjjB,UAEA,GADA0K,EAAApI,KAAA2gB,GACAuN,EACA,GAAAC,GACA,GAAA3jB,EAAAmW,EAAAuN,GACA,WAEA,GAAAvN,GAAAuN,EACA,MASA,OAHA5c,IACAlJ,EAAAkhB,EAAAnqB,OAAAiJ,EAAAkJ,IAEAlJ,EAiBA,SAAA2f,EAAApH,EAAArP,GAGA,IAFA,IAAAqU,EAAAhF,EAAAgF,WACAvd,KACAvI,EAAA,EAAAA,EAAA8lB,EAAAroB,OAAAuC,IAAA,CACA,IAAA8gB,EAAAgF,EAAA9lB,GACA,GAAA8gB,EAAAjjB,UACA0K,EAAApI,KAAA2gB,GAMA,OAHArP,IACAlJ,EAAAkhB,EAAAnqB,OAAAiJ,EAAAkJ,IAEAlJ,EAgBA,SAAAgmB,EAAA1M,EAAApQ,GAEA,IACA,OAAAhR,EAAA/D,KAAAmlB,EAAA2M,iBAAA/c,IACA,MAAAgd,IAGA,OAAAhF,EAAAhgB,MAAAoY,EAAApQ,GAQA,SAAAid,EAAA7M,EAAApQ,GAEA,IACA,OAAAoQ,EAAA8M,cAAAld,GACA,MAAAgd,IAGA,IAAApK,EAAAoF,EAAAhgB,MAAAoY,EAAApQ,GACA,OAAA4S,EAAA5mB,OAAA,EACA4mB,EAAA,GAEA,KASA,SAAA2I,EAAAnL,EAAApQ,GAKA,OAJAA,IACAA,EAAAoQ,EACAA,EAAAhN,SAAAkO,MAEApY,EAAAkX,EAAApQ,GACAoQ,EAEA6M,EAAA7M,EAAApQ,GAuBA,SAAA8U,EAAA1E,EAAApQ,EAAAnR,GAGA,IAFA,IAAAwlB,EAAAjE,EAAAiE,WACAhF,EAAAgF,EAAA,GACAhF,GAAA,CACA,GAAA,GAAAA,EAAAjjB,SAAA,CACA,IAAA4T,GAAA9G,EAAAmW,EAAArP,GACA,OAAAqP,EAEA,GAAAxgB,EACA,MAGAwgB,EAAAA,EAAA+G,YAGA,OAAA,KASA,SAAA+G,EAAA/M,EAAApQ,EAAAoZ,GAGA,IAFA,IAAA/E,EAAAjE,EAAAiE,WACAhF,EAAAgF,EAAAA,EAAAroB,OAAA,GACAqjB,GAAA,CACA,GAAA,GAAAA,EAAAjjB,SAAA,CACA,IAAA4T,GAAA9G,EAAAmW,EAAArP,GACA,OAAAqP,EAEA,GAAA+J,EACA,MAGA/J,EAAAA,EAAA+N,gBAGA,OAAA,KAQA,SAAAlkB,EAAAkX,EAAApQ,GACA,IAAAA,IAAAoQ,GAAA,IAAAA,EAAAhkB,SACA,OAAA,EAGA,GAAA8e,EAAA1f,SAAAwU,GAAA,CACA,IACA,OAAAiY,EAAAhtB,KAAAmlB,EAAApQ,EAAApP,QAAA,iCAAA,cACA,MAAAosB,IAGA,OAAAhF,EAAAxV,MAAA4N,EAAApQ,GACA,OAAAkL,EAAAnf,YAAAiU,GACAkL,EAAAjc,QAAAmhB,EAAApQ,IAAA,EACAkL,EAAAze,cAAAuT,GACAgY,EAAAqF,MAAAjN,EAAApQ,GAEAoQ,IAAApQ,EAWA,SAAAoW,EAAAhG,EAAApQ,EAAAsd,GAEA,IADA,IAAAjO,EAAAe,EAAAgG,YACA/G,GAAA,CACA,GAAA,GAAAA,EAAAjjB,SAAA,CACA,IAAA4T,GAAA9G,EAAAmW,EAAArP,GACA,OAAAqP,EAEA,GAAAiO,EACA,MAGAjO,EAAAA,EAAA+G,YAEA,OAAA,KAQA,SAAAmH,EAAAnN,EAAApQ,GAGA,IAFA,IAAAqP,EAAAe,EAAAgG,YACAtf,KACAuY,GACA,GAAAA,EAAAjjB,WACA4T,IAAA9G,EAAAmW,EAAArP,IACAlJ,EAAApI,KAAA2gB,IAGAA,EAAAA,EAAA+G,YAEA,OAAAtf,EAQA,SAAA9B,EAAAob,EAAApQ,GACA,IAAAqP,EAAAe,EAAAoB,WACA,OAAAnC,GAAArP,IAAA9G,EAAAmW,EAAArP,GAIA,KAHAqP,EAYA,SAAA+N,EAAAhN,EAAApQ,EAAAsd,GAEA,IADA,IAAAjO,EAAAe,EAAAgN,gBACA/N,GAAA,CACA,GAAA,GAAAA,EAAAjjB,SAAA,CACA,IAAA4T,GAAA9G,EAAAmW,EAAArP,GACA,OAAAqP,EAEA,GAAAiO,EACA,MAGAjO,EAAAA,EAAA+N,gBAEA,OAAA,KAQA,SAAAI,EAAApN,EAAApQ,GAGA,IAFA,IAAAqP,EAAAe,EAAAgN,gBACAtmB,KACAuY,GACA,GAAAA,EAAAjjB,WACA4T,IAAA9G,EAAAmW,EAAArP,IACAlJ,EAAApI,KAAA2gB,IAGAA,EAAAA,EAAA+N,gBAEA,OAAAtmB,EAQA,SAAA2mB,EAAArN,EAAApQ,GAGA,IAFA,IAAAqP,EAAAe,EAAAoB,WAAAsD,WACAhe,KACAuY,GACA,GAAAA,EAAAjjB,UAAAijB,IAAAe,IACApQ,IAAA9G,EAAAmW,EAAArP,IACAlJ,EAAApI,KAAA2gB,IAGAA,EAAAA,EAAA+G,YAEA,OAAAtf,EArpBAkhB,EAAA0F,OAAA,SAAAC,GACA,IAEA1K,EACA5Z,EACAohB,EACArR,EACAsR,EANAkD,EAAA,GACAC,KAWA,IAHAxkB,EAAAskB,EAAAtkB,MACAukB,GAAA,IAAAvkB,GAEAohB,EAAAkD,EAAAlD,QACA,IAAA,IAAAlsB,EAAAksB,EAAAzuB,OAAAuC,KACAqvB,GAAA,IAAAnD,EAAAlsB,GAAAnD,MAGA,GAAAge,EAAAuU,EAAAvU,WACA,IAAA,IAAA7a,EAAA,EAAAA,EAAA6a,EAAApd,OAAAuC,IACA6a,EAAA7a,GAAAosB,SACAiD,GAAA,IAAAxU,EAAA7a,GAAAmB,IAAA0Z,EAAA7a,GAAAosB,SAAA7Y,KAAAK,UAAAiH,EAAA7a,GAAAnD,OAAA,IAEAwyB,GAAA,IAAAxU,EAAA7a,GAAAmB,IAAA,IAIA,GAAAgrB,EAAAiD,EAAAjD,QACA,IAAAnsB,EAAAmsB,EAAA1uB,OAAAuC,KACAuvB,KAAApD,EAAAnsB,GACAoE,KAAA+nB,QAAAoD,KAAApuB,KACAmuB,EAAAnvB,KAAAovB,WAEApwB,IAAAowB,KAAA1yB,QACAwyB,GAAA,IAAAE,KAAApuB,IAAA,IAAAoS,KAAAK,UAAA2b,OAgBA,OAVA7K,EAAA0K,EAAA1K,MACA,MAAAA,IACA2K,EAAA3K,EAAAtR,cAAAic,GAIAA,IACAA,EAAA,MAIAA,eAAAA,EACAC,cAAAA,IAKA7F,EAAAqF,MAAA,SAAAhO,EAAAsO,EAAA9tB,EAAA+iB,EAAAmL,GACA,IAAA9K,EACA5Z,EACAohB,EACArR,EACAsR,EAEAnsB,EAAAuvB,EAAAroB,EAAAuoB,EAEA,IAAAD,EAAA,CACA,GAAA9K,EAAA0K,EAAA1K,IAAA,CACA,IAAA9B,EAAA9B,EAAA8B,SAAAxP,cACA,GAAA,KAAAsR,GACA,GAAA9B,EAAA,IAAA,OAAA,OAEA,GAAAA,IAAA8B,GAAA,IAAAtR,cAAA,OAAA,EAIA,IAAAtI,EAAAskB,EAAAtkB,KACAgW,EAAA4O,aAAA,OAAA5kB,EACA,OAAA,EAKA,GAAAohB,EAAAkD,EAAAlD,QACA,IAAAlsB,EAAAksB,EAAAzuB,OAAAuC,KAEA,KADAkH,EAAA4Z,EAAA4O,aAAA,YACAxD,EAAAlsB,GAAAwqB,OAAAjoB,KAAA2E,GAAA,OAAA,EAIA,GAAA2T,EAAAuU,EAAAvU,WACA,IAAA7a,EAAA6a,EAAApd,OAAAuC,KAEA,IADAuvB,EAAA1U,EAAA7a,IACAosB,UAAAmD,EAAAhtB,KAAAue,EAAA4O,aAAAH,EAAApuB,OAAA2f,EAAA6O,aAAAJ,EAAApuB,KAAA,OAAA,EAKA,GAAAgrB,EAAAiD,EAAAjD,QACA,IAAAnsB,EAAAmsB,EAAA1uB,OAAAuC,KAEA,GADAuvB,EAAApD,EAAAnsB,GACAyvB,EAAArrB,KAAA+nB,QAAAoD,EAAApuB,MACA,IAAAquB,GAAAC,EAAA5B,gBAAA2B,IAAAC,EAAA5B,iBACA4B,EAAA3O,EAAAxf,EAAA+iB,EAAAkL,EAAA1yB,OACA,OAAA,OAIA,IAAA2yB,IAAA9F,EAAAhtB,KAAAokB,EAAAyO,EAAApuB,KACA,OAAA,EAKA,OAAA,GAGAsoB,EAAAxV,MAAA,SAAA6M,EAAArP,GAEA,IAAAkY,EAQA,KALAA,EADAhN,EAAA1f,SAAAwU,GACAgY,EAAAW,MAAA5W,MAAA/B,GAEAA,GAIA,OAAA,EAIA,IAEAzR,EACA4vB,EAHAtF,EAAAX,EAAAW,YACAuF,EAAA,EAGA,IAAA7vB,EAAA,EACA4vB,EAAAtF,EAAAtqB,GAAAA,IACA,GAAA,GAAA4vB,EAAAnyB,OAAA,CACA,IAAAmtB,EAAAgF,EAAA,GACA,GAAAxrB,KAAA0qB,MAAAhO,EAAA8J,GACA,OAAA,EAEAiF,IAIA,GAAAA,GAAAlG,EAAAlsB,OACA,OAAA,EAGA,IACAwC,EADAokB,EAAAjgB,KAAAqF,MAAAoL,SAAA8U,GAEA,IAAA3pB,EAAA,EAAAC,EAAAokB,EAAArkB,MACA,GAAAC,IAAA6gB,EACA,OAAA,EAGA,OAAA,GAIA2I,EAAAqG,aAAA,SAAAzL,EAAAuG,GACA,IAAAmF,EAAAzwB,EAAA5C,KAAA2nB,EAAA,SAAAvD,EAAAxf,GACA,OAAAmoB,EAAAqF,MAAAhO,EAAA8J,EAAAtpB,EAAA+iB,GAAA,KAMA,OAHA0L,EAAAzwB,EAAA5C,KAAAqzB,EAAA,SAAAjP,EAAAxf,GACA,OAAAmoB,EAAAqF,MAAAhO,EAAA8J,EAAAtpB,EAAAyuB,GAAA,MAKAtG,EAAAnqB,OAAA,SAAA+kB,EAAA5S,GAGA,IAAAkL,EAAA1f,SAAAwU,GAGA,OAAAgY,EAAAqG,aAAAzL,EAAA5S,GAIA,IACAzR,EACA4vB,EAFAtF,EANAb,EAAAW,MAAA5W,MAAA/B,GAMA6Y,YAGA/hB,KACA,IAAAvI,EAAA,EACA4vB,EAAAtF,EAAAtqB,GAAAA,IAAA,CACA,GAAA,GAAA4vB,EAAAnyB,OAOA,MAAA,IAAAqJ,MAAA,0BAAA2K,GANA,IAAAmZ,EAAAgF,EAAA,GAEAG,EAAAtG,EAAAqG,aAAAzL,EAAAuG,GAEAriB,EAAAoU,EAAAtb,KAAAkH,EAAAxH,OAAAgvB,IAMA,OAAAxnB,GAIAkhB,EAAAuG,QAAA,SAAAnO,EAAAoO,GACA,IAEAC,EAFAC,EAAAF,EAAAtF,WACAyE,EAAAa,EAEA5L,KAEA,OAAA8L,GACA,IAAA,IACA9L,EAAA6D,EAAArG,EAAAuN,GACA,MACA,IAAA,KACAc,EAAArI,EAAAhG,EAAAuN,GAAA,KAEA/K,EAAAlkB,KAAA+vB,GAEA,MACA,IAAA,KACAA,EAAA3J,EAAA1E,EAAAuN,GAAA,KAEA/K,EAAAlkB,KAAA+vB,GAEA,MACA,IAAA,IACA7L,EAAA2K,EAAAnN,EAAAuN,GACA,MACA,IAAA,KACA,IAAAtT,EAAA+S,EAAAhN,EAAAuN,GAAA,GACAljB,EAAA2b,EAAAhG,EAAAuN,GAAA,GACAtT,GACAuI,EAAAlkB,KAAA2b,GAEA5P,GACAmY,EAAAlkB,KAAA+L,GAEA,MACA,IAAA,KACAmY,EAAA6K,EAAArN,EAAAuN,GACA,MACA,IAAA,IACA/K,EAAA+J,EAAAvM,EAAAuN,GACA,MACA,IAAA,MACAc,EAAAzpB,EAAAob,EAAAuN,KAEA/K,EAAAlkB,KAAA+vB,GAEA,MACA,IAAA,KACA7L,EAAAwK,EAAAhN,EAAAuN,GAAA,GACA,MACA,IAAA,MACAc,EAAAtB,EAAA/M,EAAAuN,GAAA,KAEA/K,EAAAlkB,KAAA+vB,GAEA,MACA,IAAA,KACA7L,EAAA4K,EAAApN,EAAAuN,GACA,MACA,QACA,IAAAgB,EAAAhsB,KAAA+qB,OAAAc,GAEA,GADA5L,EAAA5jB,EAAA/D,KAAAmlB,EAAA2M,iBAAA4B,EAAAf,iBACAe,EAAAd,cACA,IAAA,IAAAtvB,EAAAowB,EAAAd,cAAA7xB,OAAA,EAAAuC,GAAA,EAAAA,IACAqkB,EAAA/kB,EAAA5C,KAAA2nB,EAAA,SAAApkB,EAAAqB,GACA,OAAAmoB,EAAAqF,MAAA7uB,GACAksB,SAAAiE,EAAAd,cAAAtvB,KACAsB,EAAA+iB,GAAA,KAGAA,EAAA/kB,EAAA5C,KAAA2nB,EAAA,SAAApkB,EAAAqB,GACA,OAAAmoB,EAAAqF,MAAA7uB,GACAksB,SAAAiE,EAAAd,cAAAtvB,KACAsB,EAAA+iB,GAAA,KAOA,OAAAA,GAGAoF,EAAAhgB,MAAA,SAAAqX,EAAArP,EAAA4e,GAUA,IAPA,IAIAT,EAAAU,EAJA3G,EAAAvlB,KAAAgmB,MAAA5W,MAAA/B,GAGA8e,KAEAjG,EAAAX,EAAAW,YAEAtqB,EAAA,EACA4vB,EAAAtF,EAAAtqB,GAAAA,IAAA,CAGA,IAFA,IACAwwB,EADAC,GAAA3P,GAEA5gB,EAAA,EACAowB,EAAAV,EAAA1vB,GAAAA,KACAswB,EAAA7T,EAAA3b,IAAAyvB,EAAA,SAAAxwB,EAAAD,GACA,OAAAypB,EAAAuG,QAAA/vB,EAAAqwB,QAGAG,EAAAD,GAGAA,IACAD,EAAAA,EAAAxvB,OAAAyvB,IAIA,OAAAD,GA6VA,IAAAG,EAAA,WACA,OAAAA,GA4CA,OAzCA/T,EAAAzY,MAAAwsB,GAEAC,SA1VA,SAAA7P,EAAArP,EAAA4c,GACA,IAAAC,EAAAD,GAAA1R,EAAA1f,SAAAoxB,GACA,KAAAvN,EAAAA,EAAAmC,YAAA,CACA,GAAAtY,EAAAmW,EAAArP,GACA,OAAAqP,EAEA,GAAAuN,EACA,GAAAC,GACA,GAAA3jB,EAAAmW,EAAAuN,GACA,WAEA,GAAAvN,GAAAuN,EACA,MAIA,OAAA,MA4UAD,UAAAA,EAEAwC,KA1SA,SAAA9lB,EAAAsa,GAEA,OADAA,EAAAA,GAAAF,EAAAE,OACAyL,eAAA/lB,IA0SAod,SAAAA,EAEAZ,QArRA,SAAAxG,EAAArP,GACA,KAAAqP,IAAAnW,EAAAmW,EAAArP,IACAqP,EAAAA,EAAAmC,WAGA,OAAAnC,GAkRA4N,WAAAA,EAEAH,YAAAA,EAEAvB,KAAAA,EAEA8D,QA5NA,SAAAjP,EAAApQ,GACAA,IACAA,EAAAoQ,EACAA,EAAAhN,SAAAkO,MAEA,OAAAwL,EAAA1M,EAAApQ,IAyNA8U,WAAAA,EAEAqI,UAAAA,EAEAjkB,QAAAA,EAEAkd,YAAAA,EAEAmH,aAAAA,EAEAvoB,OAAAA,EAEAooB,gBAAAA,EAEAI,iBAAAA,EAEA9C,QAAA1C,EAAA0C,QAEA+C,SAAAA,IAGAlzB,EAAA00B,OAAAA,IAEA50B,OAAA,2BACA,QACA,UACA,YACA,SAAAE,EAAA2gB,EAAA+T,GACA,IAAA1vB,EAAAzD,MAAAc,UAAA2C,IACA1B,EAAA/B,MAAAc,UAAAiB,OACA6T,EAAAwJ,EAAAxJ,UACAG,EAAAqJ,EAAArJ,iBAEAyd,EAAA,WACAC,GACAnE,SAAA,WACAoE,SAAA,WACAC,IAAA,UACAC,MAAA,YACAC,UAAA,YACAC,YAAA,cACAC,YAAA,cACAC,QAAA,UACAC,QAAA,UACAC,OAAA,SACAC,YAAA,cACAC,gBAAA,mBA4BA,SAAAvW,EAAAyG,EAAAvlB,EAAAO,GACA,QAAAsC,IAAAtC,EAaA,OADAglB,EAAA8C,aAAAroB,EAAAO,GACAuH,KAZA,GAAA,iBAAA9H,EAAA,CACA,IAAA,IAAAs1B,KAAAt1B,EACA8e,EAAAyG,EAAA+P,EAAAt1B,EAAAs1B,IAEA,OAAAxtB,KAEA,OAAAyd,EAAA8N,cAAA9N,EAAA8N,aAAArzB,GACAulB,EAAA6N,aAAApzB,QADA,EA0BA,SAAAu1B,EAAAhQ,EAAAiQ,GACA,IAAAC,EAAAlQ,EAAA,SAIA,OAHAkQ,GAAAD,IACAC,EAAAlQ,EAAA,SAbA,SAAAA,GACA,IAAAkQ,KAMA,OALApV,EAAAxX,KAAA0c,EAAAhH,eAAA,SAAA7a,EAAAob,GACA,GAAAA,EAAA9e,KAAAqE,QAAA,WACAoxB,EAAA5e,EAAAiI,EAAA9e,KAAA+F,QAAA,QAAA,MAAAiR,EAAA8H,EAAAve,UAGAk1B,EAMAC,CAAAnQ,IAEAkQ,EAuBA,SAAAE,EAAApQ,EAAAvlB,EAAAO,GACA,IAAAk1B,EAAAF,EAAAhQ,GAAA,GACAkQ,EAAA5e,EAAA7W,IAAAO,EAUA,SAAAkO,EAAA8W,EAAAvlB,EAAAO,GAEA,QAAAsC,IAAAtC,EAAA,CACA,GAAA,iBAAAP,EAAA,CACA,IAAA,IAAA41B,KAAA51B,EACA21B,EAAApQ,EAAAqQ,EAAA51B,EAAA41B,IAEA,OAAA9tB,KAEA,OAzCA,SAAAyd,EAAAvlB,GACA,QAAA6C,IAAA7C,EACA,OAAAu1B,EAAAhQ,GAAA,GAEA,IAAAkQ,EAAAF,EAAAhQ,GACA,GAAAkQ,EAAA,CACA,GAAAz1B,KAAAy1B,EACA,OAAAA,EAAAz1B,GAEA,IAAA61B,EAAAhf,EAAA7W,GACA,GAAA61B,KAAAJ,EACA,OAAAA,EAAAI,GAGA,IAAAP,EAAA,QAAAt1B,EAAA+F,QAAA0uB,EAAA,OAAAx0B,cACA,OAAA6e,EAAAyG,EAAA+P,GA0BAQ,CAAAvQ,EAAAvlB,GAIA,OADA21B,EAAApQ,EAAAvlB,EAAAO,GACAuH,KAQA,SAAAiuB,EAAAxQ,GACAA,EAAA,iBACAA,EAAA,SA6BA,SAAAyQ,EAAAjO,EAAApC,GACA,OAAAjhB,EAAAtE,KAAA2nB,EAAA,SAAAxC,GACA,OAAAA,EAAAI,KAuFA,SAAAsQ,IACA,OAAAA,EA2BA,OAjCA7B,EAAAvE,QAAAphB,KAAA,SAAAoW,EAAAnhB,EAAAiU,EAAAue,GACA,QAAAznB,EAAAoW,EAAAqR,GAAAve,EAAA,KAQA0I,EAAAzY,MAAAquB,GACAE,KAvOA,SAAA5Q,EAAAvlB,EAAAO,GACA,OAAAuH,KAAAgX,KAAAyG,EAAA,QAAAvlB,EAAAO,IAwOAue,KAAAA,EAEAiX,UAAAA,EAEAtnB,KAAAA,EAEAunB,MAAAA,EAEArsB,KA5FA,SAAA4b,EAAAvlB,EAAAO,GAEA,OADAP,EAAA00B,EAAA10B,IAAAA,OACA6C,IAAAtC,EACAglB,EAAAvlB,IAEAulB,EAAAvlB,GAAAO,EACAuH,OAwFAsuB,WA/EA,SAAA7Q,EAAAvlB,GAIA,OAHAA,EAAAF,MAAA,KAAAC,QAAA,SAAA+e,IA7KA,SAAAyG,EAAAvlB,EAAAO,GACA,MAAAA,EACAglB,EAAA8Q,gBAAAr2B,GAEAulB,EAAA8C,aAAAroB,EAAAO,GA0KA8nB,CAAA9C,EAAAzG,KAEAhX,MA6EAwuB,WAhIA,SAAA/Q,EAAAC,GACA,GAAAA,EAAA,CACAnF,EAAA1f,SAAA6kB,KACAA,EAAAA,EAAA1lB,MAAA,QAEA,IAAA21B,EAAAF,EAAAhQ,GAAA,GACAC,EAAAzlB,QAAA,SAAAC,UACAy1B,EAAAz1B,UAGA+1B,EAAAxQ,GAEA,OAAAzd,MAsHAyuB,WAtEA,SAAAhR,EAAAvlB,GAIA,OAHAA,EAAAF,MAAA,KAAAC,QAAA,SAAA4J,UACA4b,EAAA5b,KAEA7B,MAoEA6R,KA5DA,SAAA4L,EAAAiR,GACA,YAAA3zB,IAAA2zB,EACAjR,EAAAkR,aAEAlR,EAAAkR,YAAA,MAAAD,EAAA,GAAA,GAAAA,EACA1uB,OAyDAiX,IAhDA,SAAAwG,EAAAhlB,GACA,QAAAsC,IAAAtC,EAAA,CACA,GAAAglB,EAAAmR,SAAA,CAEA,IAAAC,EAAA3zB,EAAA5C,KAAAg0B,EAAA1D,KAAAnL,EAAA,UAAA,SAAAqR,GACA,OAAAA,EAAA3F,WAEA,OAAA+E,EAAAW,EAAA,SAEA,OAAApR,EAAAhlB,MAIA,OADAglB,EAAAhlB,MAAAA,EACAuH,QAsCApI,EAAAu2B,MAAAA,IAEAz2B,OAAA,6BACA,QACA,UACA,YACA,WACA,UACA,WACA,SAAAE,EAAA2gB,EAAA6C,EAAAkR,EAAAxL,EAAAqN,GACA5V,EAAAzY,MACAyY,EAAAxX,KACA5H,MAAAc,UAAAoC,MAFA,IAGA4c,EAAAV,EAAAU,IACA8V,EAAA,mCACAC,GACAC,eAAA,qBACAC,yBAAA,gCACAC,gBAAA,wBAEAC,EAAA,8BAEA,SAAAC,EAAArhB,EAAA5O,GAeA,OAdAA,GAAA4O,EAAAshB,qBACAlwB,IACAA,EAAA4O,GAGAuK,EAAAxX,KAAAiuB,EAAA,SAAA92B,EAAAmD,GACA,IAAAk0B,EAAAnwB,EAAAlH,GACA8V,EAAA9V,GAAA,WAEA,OADA8H,KAAA3E,GAAAkd,EAAApP,WACAomB,GAAAA,EAAAxvB,MAAAX,EAAAM,YAEAsO,EAAA3S,GAAAkd,EAAAnP,eAGA4E,EAGA,SAAAoB,EAAApB,GACA,IAAA4K,GAAA,GAAA5K,GAAAhW,MAAA,KACA,OACAD,KAAA6gB,EAAA,GACA4W,GAAA5W,EAAAvc,MAAA,GAAA0J,OAAA8M,KAAA,MAKA,IAAA2F,EAAA,WACA,IAAAiX,GACA12B,OAAA,YACAA,OAAA,iBACAA,OAAA,UACAA,OAAA,MACAA,OAAA,WACAA,OAAA,cACAA,OAAA,aACAA,OAAA,WACAA,OAAA,iBACAA,OAAA,gBACAA,OAAA,cACAA,OAAA,cACAA,OAAA,UACAA,OAAA,WACAA,OAAA,QACAA,OAAA,WACAA,OAAA,gBAEA22B,GACAC,iBAAA,EACAC,eAAA,EACAC,kBAAA,EAEAC,WAAA,GACAC,UAAA,GACAC,YAAA,GACAnvB,KAAA,GACAovB,IAAA,GACAC,MAAA,GAEAC,KAAA,EACAC,QAAA,EACAC,UAAA,EACAC,SAAA,EACAC,UAAA,EACAC,SAAA,EACAC,UAAA,EACAC,KAAA,EAEA1b,MAAA,EACA2b,OAAA,EACAtlB,MAAA,EACAulB,gBAAA,EACA9G,OAAA,EACAC,MAAA,EAEAvB,MAAA,EACArH,KAAA,EACA0P,QAAA,EACAC,SAAA,EAEAC,QAAA,EACAC,SAAA,EACAC,MAAA,EAEAC,QAAA,EAEAC,MAAA,EACAC,YAAA,EACAC,SAAA,EACAC,UAAA,EACAC,QAAA,EACAC,UAAA,EACAC,UAAA,EACAC,SAAA,EACAC,WAAA,EACAC,WAAA,EAGAC,UAAA,GAEAC,WAAA,GACAC,UAAA,GACAC,SAAA,GAEAC,KAAA,GACAC,OAAA,GACAC,OAAA,GACAC,OAAA,GACAC,OAAA,GAEAC,MAAA,IAWA,OAAA,SAAAv6B,EAAAqK,GAGAmW,EAAA1f,SAAAd,GACAqK,EAAAA,MAGArK,GADAqK,EAAArK,OACAA,MAAA,GAEA,IAAAwtB,EAAAnW,EAAArX,GACAA,EAAAwtB,EAAAxtB,KAEAqK,EAAAmW,EAAAzY,OACAyyB,SAAA,EACAC,YAAA,GACApwB,GAEAmjB,EAAAiK,KACAptB,EAAAqwB,UAAAlN,EAAAiK,IAGA,IAAA/sB,EA7BA,SAAA1K,GACA,IAAAmF,EAAAwyB,EAAA33B,GACAmF,IACAA,EAAA,GAEA,OAAAuyB,EAAAvyB,GAwBAw1B,CAAA36B,GACA0V,EAAA,IAAAhL,EAAA1K,EAAAqK,GAIA,OAFAmW,EAAAzW,UAAA2L,EAAArL,GAEAitB,EAAA5hB,IAxHA,GA4HA,SAAAklB,EAAAhyB,EAAAyB,GACA,IAAArF,EACAkM,GACA2pB,cAAAjyB,GAEA,IAAA5D,KAAA4D,EACA,kBAAA5D,GAAAgyB,EAAA5wB,KAAApB,SAAAhC,IAAA4F,EAAA5D,KACAkM,EAAAlM,GAAA4D,EAAA5D,IAMA,OAHAqF,GACAmW,EAAAzY,MAAAmJ,EAAA7G,GAEAitB,EAAApmB,EAAAtI,GAGA,IACAkyB,KACAC,EAAA,cAAA/5B,OACAyvB,GAAAA,MAAA,UAAArH,KAAA,YACA4R,GAAApB,WAAA,YAAAC,WAAA,YACAoB,EAAA,SAAAj7B,GACA,OAAAg7B,EAAAh7B,IAAA+6B,GAAAtK,EAAAzwB,IAAAA,GAEAk7B,KACAC,EAAA3a,EAAA/T,OACArC,KAAA,SAAAhD,EAAA6O,GACAhO,KAAAmzB,QAAAh0B,EACAa,KAAAozB,OAAAplB,EACAhO,KAAAqzB,cAGApsB,IAAA,SAAAlD,EAAAxB,GACA,IAAA+wB,EAAAtzB,KAAAqzB,UACAE,GACAxvB,GAAAA,EACAxB,QAAAgW,EAAAzY,SAAAyC,IAGA+wB,EAAAv3B,KAAAw3B,GAEA,IAAAzpB,EAAA9J,KACA,IAAA8J,EAAA0pB,UAAA,CACA1pB,EAAA0pB,UAAA,SAAAC,GACA,IAAAhW,EAAAzd,KACAyN,EAAAklB,EAAAc,GACAj0B,EAAAi0B,EAAAC,MACAJ,EAAAxpB,EAAAupB,UACA7D,EAAA/hB,EAAAglB,UAGAjzB,EADA+Y,EAAAhf,UAAAiG,IACAiO,GAAA9Q,OAAA6C,IAEAiO,GAGA8K,EAAAxX,KAAAuyB,EAAA,SAAAp2B,EAAAq2B,GACA,IAAA1jB,EAAA4N,EACA,GAAAhQ,EAAAkmB,+BAAAlmB,EAAAkmB,gCACA,OAAA,EAEA,IAAA5vB,EAAAwvB,EAAAxvB,GACAxB,EAAAgxB,EAAAhxB,YACA8K,EAAA9K,EAAA8K,SACAC,EAAA/K,EAAA+K,IACA3G,EAAApE,EAAAoE,KAEA,IAAA6oB,GAAAA,GAAAjtB,EAAAitB,KAAA,IAAAjtB,EAAAitB,GAAAjzB,QAAAizB,GAAA,CAGA,GAAAniB,EAAA,CAEA,KADAwC,EAAAyc,EAAApJ,QAAAzV,EAAAtO,OAAAkO,KACAwC,IAAA4N,EAMA,OALAlF,EAAAzY,MAAA2N,GACAmmB,cAAA/jB,EACAgkB,UAAApW,IAOA,IAAAmV,EAAA9oB,EAAAspB,OACA,GAAAR,KAAAG,EAAA,CACA,IAAAe,EAAArmB,EAAAsmB,cACA,GAAAD,IAAAA,IAAAjkB,GAAAiR,EAAAF,SAAA/Q,EAAAikB,IACA,OAIAvb,EAAAhf,UAAAoN,KACA8G,EAAA9G,KAAAA,GAGA2G,GACAxD,EAAA5C,OAAAnD,EAAAxB,GAGA,IAAA5G,EAAAoI,EAAAhE,MAAA8P,EAAArQ,IAEA,IAAA7D,IACA8R,EAAAwhB,iBACAxhB,EAAA0hB,uBAKA,IAAAnhB,EAAAlE,EAAAspB,OAaAtpB,EAAAqpB,QAAAa,iBACAlqB,EAAAqpB,QAAAa,iBAAAhB,EAAAhlB,GAAAlE,EAAA0pB,WAAA,GAEA5P,QAAAC,KAAA,yBAAA/Z,EAAAqpB,WAKAjsB,OAAA,SAAAnD,EAAAxB,GAMA,IAAA0xB,EAHAzE,GAFAjtB,EAAAgW,EAAAzY,SAAAyC,IAMAitB,KAJAA,EAKAjtB,EAAAitB,GAAAyE,EAJA,IAAA/Y,OAAA,UAAAsU,EAAAvxB,QAAA,IAAA,SAAA,YAOA+B,KAAAqzB,UAAArzB,KAAAqzB,UAAAn4B,OAAA,SAAAq4B,GACA,IAAAW,IAAAnwB,GAAAA,IAAAwvB,EAAAxvB,OACAkwB,GAAAA,EAAA91B,KAAAo1B,EAAAhxB,QAAAitB,QACAjtB,EAAA8K,UAAA9K,EAAA8K,UAAAkmB,EAAAhxB,QAAA8K,UAEA,OAAA6mB,IAEA,GAAAl0B,KAAAqzB,UAAAh6B,SACA2G,KAAAmzB,QAAAgB,qBACAn0B,KAAAmzB,QAAAgB,oBAAAnB,EAAAhzB,KAAAozB,QAAApzB,KAAAwzB,WAAA,GAEAxzB,KAAAwzB,UAAA,SAIAY,EAAA7b,EAAA/T,OACArC,KAAA,SAAAsb,GACAzd,KAAAmzB,QAAA1V,EACAzd,KAAAq0B,aAKAC,SAAA,SAAAtmB,EAAAlR,EAAAyF,GAEA,IAAAgjB,EAAAnW,EAAApB,GACAA,EAAAuX,EAAAxtB,KACAw8B,EAAA1B,EAAA7kB,GACAwmB,EAAAD,IAAAA,EAAAE,UAAAF,EAAAG,eAEAtnB,EAAApN,KAAAq0B,cAGAt5B,IAAAqS,EAAAY,KACAZ,EAAAY,GAAA,IAAAklB,EAAAlzB,KAAAmzB,QAAAqB,GAAAxmB,IAIAZ,EAAAY,GAAA/G,IAAAnK,EAAAyb,EAAAzY,OACA0vB,GAAAjK,EAAAiK,IACAjtB,KAIAoyB,WAAA,SAAA3mB,EAAAjK,EAAAxB,GAEA,IAAA6K,EAAApN,KAAAq0B,SACA9O,EAAAnW,EAAApB,GAGA,GAFAA,EAAAuX,EAAAxtB,KAEA,CACA,IAAAqT,EAAAgC,EAAAY,GAEA5C,GACAA,EAAAlE,OAAAnD,EAAAwU,EAAAzY,OACA0vB,GAAAjK,EAAAiK,IACAjtB,SAIA,IAAAyL,KAAAZ,EAAA,CACA,IAAAhC,EAAAgC,EAAAY,GACA5C,EAAAlE,OAAAnD,EAAAwU,EAAAzY,OACA0vB,GAAAjK,EAAAiK,IACAjtB,QAMAqyB,EAAA,SAAAnX,GACA,IAAA/W,EAAAuS,EAAAwE,GACA/T,EAAAupB,EAAAvsB,GAIA,OAHAgD,IACAA,EAAAupB,EAAAvsB,GAAA,IAAA0tB,EAAA3W,IAEA/T,GAwDA,SAAAyD,EAAAsQ,EAAArQ,EAAAC,EAAA1G,EAAA7J,EAAAwQ,GAGA,GAAAiL,EAAAze,cAAAsT,GAIA,OAHAmL,EAAAxX,KAAAqM,EAAA,SAAArV,EAAAgM,GACAoJ,EAAAsQ,EAAA1lB,EAAAsV,EAAA1G,EAAA5C,EAAAuJ,KAEAtN,KAGAuY,EAAA1f,SAAAwU,IAAAkL,EAAA/f,WAAAsE,KACAA,EAAA6J,EACAA,EAAA0G,EACAA,OAAAtS,GAGAwd,EAAA/f,WAAAmO,KACA7J,EAAA6J,EACAA,OAAA5L,IAGA,IAAA+B,IACAA,EAAAyb,EAAAnP,aAGA,iBAAAgE,IAEAA,EADAA,EAAA7Q,QAAA,MAAA,EACA6Q,EAAApV,MAAA,KAEAoV,EAAApV,MAAA,OAIA,IAAA0R,EAAAkrB,EAAAnX,GAYA,OAVArQ,EAAAnV,QAAA,SAAA+V,GACA,GAAA,SAAAA,EACA,OAAA6mB,EAAA/3B,GAEA4M,EAAA4qB,SAAAtmB,EAAAlR,GACA6J,KAAAA,EACA0G,SAAAA,EACAC,MAAAA,MAGAtN,KA2DA,SAAA60B,EAAA/3B,GASA,OANAsyB,EAAAjxB,KAAAsS,SAAAqkB,aAAArkB,SAAAkO,KACApG,EAAA1P,MAAA/L,GAEA2T,SAAAujB,iBAAA,mBAAAl3B,GAAA,GAGAkD,KAGA,IAAA+0B,GACAC,UAAA,EACAC,MAAA,IACA1e,OAAA,GACA2e,KAAA,GACArZ,IAAA,GACAsZ,MAAA,GACAviB,OAAA,GACAwiB,KAAA,GACA5Q,KAAA,GACA6Q,UAAA,GACAC,QAAA,GACAC,OAAA,IACAC,MAAA,GACAC,MAAA,GACAC,IAAA,EACAC,GAAA,IA8EA,SAAAC,IACA,OAAAA,EA4BA,OAvCAxa,EAAAQ,QAAAlC,aACAmZ,EAAAgD,eAIApB,SAAArZ,EAAAQ,QAAAlC,WAAAmC,IACAia,aAAA1a,EAAAQ,QAAAlC,WAAAmC,MAQAtD,EAAAzY,MAAA81B,GACAxyB,OAAAoV,EAEAzZ,KAAAg2B,EAEArmB,IAzQA,SAAAA,EAAA+O,EAAArQ,EAAAC,EAAAvQ,GAEA,GAAAyb,EAAAze,cAAAsT,GAIA,OAHAmL,EAAAxX,KAAAqM,EAAA,SAAArV,EAAAgM,GACA2K,EAAA+O,EAAA1lB,EAAAsV,EAAAtJ,KAHA/D,KAQAuY,EAAA1f,SAAAwU,IAAAkL,EAAA/f,WAAAsE,KAAA,IAAAA,IACAA,EAAAuQ,EACAA,OAAAtS,IAGA,IAAA+B,IACAA,EAAAyb,EAAAnP,aAGA,iBAAAgE,IAEAA,EADAA,EAAA7Q,QAAA,MAAA,EACA6Q,EAAApV,MAAA,KAEAoV,EAAApV,MAAA,OAIA,IAAA0R,EAAAkrB,EAAAnX,GAEArQ,GAAAA,EAAAnV,QAAA,SAAA+V,GAEAtE,EAAAirB,WAAA3mB,EAAAlR,GACAuQ,SAAAA,MAGA,OAAArN,MAyOAmN,GAAAA,EAEAG,IAvKA,SAAAmQ,EAAArQ,EAAAC,EAAA1G,EAAA7J,GAGA,OAFAqQ,EAAAsQ,EAAArQ,EAAAC,EAAA1G,EAAA7J,EAAA,GAEAkD,MAsKAiJ,MAAA0pB,EAEAkC,MAAAA,EAEAkB,UA7FA,SAAAtY,GAEA,IAAAuY,EAAA7H,EAAAxnB,KAAA8W,EAAA,aACA,IAAAuY,EAAA,CACAA,KACA7H,EAAAxnB,KAAA8W,EAAA,YAAAuY,GACA,IAAAC,EAAA,SAAAC,EAAAloB,GACA,IAAA5R,EAAA4R,EAAAmoB,SAAAnoB,EAAAooB,QACA,GAAAF,EAAAG,MAAAj6B,GAAA85B,EAAAI,KAAAtoB,EAAAuoB,QAAAL,EAAAv2B,OAAAqO,EAAAwoB,WACAxoB,EAAAyoB,SAAAP,EAAAO,SAAAzoB,EAAA0oB,UAAA1oB,EAAA0oB,UAAAR,EAAAQ,UAKA,OAJA1oB,EAAAihB,iBACA,WAAAjhB,EAAAjW,MACAm+B,EAAAnyB,GAAAiK,IAEA,GAIAb,EAAAsQ,EAAA,yBAAA,SAAAzP,GACA,IAAA,iBAAA7P,KAAA6P,EAAA7O,OAAAqf,UACA,IAAA,IAAAzhB,KAAAi5B,EACAC,EAAAD,EAAAj5B,GAAAiR,KAOA,OACA/G,IAAA,SAAA0vB,EAAA5yB,IAEA4yB,EAAAp6B,QAAA,MAAA,EACAo6B,EAAAx+B,cAAAH,MAAA,KAEA2+B,EAAAx+B,cAAAH,MAAA,MAEAC,QAAA,SAAA2+B,GACA,IAAAC,GACA9yB,GAAAA,EACAuyB,KAAA,EACAD,MAAA,EACA12B,OAAA,GAEAi3B,EAAA5+B,MAAA,KAAAC,QAAA,SAAA8E,GACA,OAAAA,GACA,IAAA,MACA,IAAA,OACA,IAAA,QACA85B,EAAA95B,IAAA,EACA,MACA,QACA85B,EAAAH,SAAA35B,EAAA+5B,WAAA,GACAD,EAAAJ,QAAA1B,EAAAh4B,IAAAA,EAAAiS,cAAA8nB,WAAA,MAGA,IAAAC,GAAAF,EAAAR,KAAA,OAAA,IAAA,KAAAQ,EAAAP,IAAA,MAAA,IAAA,KAAAO,EAAAl3B,MAAA,QAAA,IAAA,IAAAk3B,EAAAJ,QACAT,EAAAe,GAAAF,OAuCAG,QAAAnE,EAEAoE,KAvKA,SAAAjpB,GACAjV,OAAA0X,SAAA9E,MACAqC,EAAAyoB,QAAA,GAEAzoB,EAAAihB,iBACAjhB,EAAAihB,iBACAjhB,EAAAmhB,mBAEA,OAAAnvB,MAiKAwN,QAzJA,SAAA0pB,EAAAn/B,EAAAyH,GACA,IAAAiO,EAEAA,EADA1V,aAAAo/B,MACAp/B,EAEAygB,EAAAzgB,EAAAyH,GAEAiO,EAAAimB,MAAAl0B,EAEA,IAAAuE,EAAAmzB,EAAAE,eAAAF,EAAA1pB,QACAzJ,EACAA,EAAAzL,KAAA4+B,EAAAzpB,GAEAmW,QAAAC,KAAA,mDAGA,OAAA7jB,QA6IApI,EAAAg+B,QAAAA,IAEAl+B,OAAA,0BACA,QACA,UACA,UACA,YACA,SAAAE,EAAA2gB,EAAAuI,EAAAzD,GACA,IAGAga,EAHAtX,EAAA,mBACAuX,EAAA/e,EAAAQ,QACAsK,EAAAvC,EAAAuC,aAGA,SAAAkU,IACA,QAAAx8B,IAAAs8B,EACA,OAAAA,EAEA,IAAAG,EAAAC,EACAtY,EAAA2B,EAAAa,eAAA,6IAEA,GACA+V,EAAAvY,EAAAuC,WAAA,GAgBA,OAdAZ,EAAAV,OAAA3P,SAAAkO,KAAAQ,GAEAqY,EAAAE,EAAApO,YAEAjM,EAAAO,IAAAuB,EAAA,WAAA,UAEAsY,EAAAC,EAAApO,YAEAkO,IAAAC,IACAA,EAAAtY,EAAA,GAAAwY,aAGA7W,EAAA5Z,OAAAiY,GAEAkY,EAAAG,EAAAC,EAMA,SAAAG,EAAAna,GACA,GAAAqD,EAAAhoB,SAAA2kB,GACA,OACA+G,KAAA,EACAD,IAAA,EACAiR,MAAA,EACAqC,OAAA,GAEA,IAAAC,EAAA1a,iBAAAK,GACA,OACA+G,KAAA8S,EAAAQ,EAAAC,gBAAAta,GACA8G,IAAA+S,EAAAQ,EAAAE,eAAAva,GACA+X,MAAA8B,EAAAQ,EAAAG,iBAAAxa,GACAoa,OAAAP,EAAAQ,EAAAI,kBAAAza,IAUA,SAAA0a,EAAA1a,EAAA2a,GACA,QAAAr9B,IAAAq9B,EACA,OAAArY,EAAA5hB,KAAAsf,EAAAe,WAAA+F,IAAA,EAAAC,KAAA,GAAA/G,EAAA4a,wBAEA,IACAh2B,EAAAghB,EAAA5F,GAEA6a,EAAAH,EAAA91B,GACAk2B,EAAAC,EAAA/a,GACAgb,EAAAb,EAAAv1B,GAMA,OAJAq2B,EAAAjb,GACA8G,IAAA6T,EAAA7T,IAAA+T,EAAA/T,IAAAgU,EAAAhU,IAAAkU,EAAAlU,IACAC,KAAA4T,EAAA5T,KAAA8T,EAAA9T,KAAA+T,EAAA/T,KAAAiU,EAAAjU,OAEAxkB,KASA,SAAA24B,EAAAlb,EAAA2a,GACA,YAAAr9B,IAAAq9B,EACA3a,EAAA4a,yBAEAF,EAAA1a,EAAA2a,GACAQ,EAAAnb,EAAA2a,GACAp4B,MAwBA,SAAA64B,EAAApb,EAAAqb,GACA,QAAA/9B,GAAA+9B,EACA,OACArU,MAAAhH,EAAAka,YACAjT,OAAAjH,EAAAsb,cAGA,IAAAC,EAAA,eAAA3b,EAAAO,IAAAH,EAAA,cACArb,GACAqiB,MAAAqU,EAAArU,MACAC,OAAAoU,EAAApU,QAEA,GAAAsU,EAUA,CACA,IAAAC,EAAArB,EAAAna,QAEA1iB,IAAAqH,EAAAqiB,QACAriB,EAAAqiB,MAAAriB,EAAAqiB,MAAAwU,EAAAzU,KAAAyU,EAAAzD,YAGAz6B,IAAAqH,EAAAsiB,SACAtiB,EAAAsiB,OAAAtiB,EAAAsiB,OAAAuU,EAAA1U,IAAA0U,EAAApB,YAlBA,CACA,IAAAqB,EAAAC,EAAA1b,QAEA1iB,IAAAqH,EAAAqiB,QACAriB,EAAAqiB,MAAAriB,EAAAqiB,MAAAyU,EAAA1U,KAAA0U,EAAA1D,YAGAz6B,IAAAqH,EAAAsiB,SACAtiB,EAAAsiB,OAAAtiB,EAAAsiB,OAAAwU,EAAA3U,IAAA2U,EAAArB,QAeA,OADAxa,EAAAO,IAAAH,EAAArb,GACApC,KAkDA,SAAAo5B,EAAApY,GACA,IAAAL,EAAAK,EAAAL,gBACAhC,EAAAqC,EAAArC,KACA0a,EAAAvyB,KAAAuyB,IACAC,EAAAD,EAAA1Y,EAAA2Y,YAAA3a,EAAA2a,aACA3B,EAAA0B,EAAA1Y,EAAAgX,YAAAhZ,EAAAgZ,aACArO,EAAA+P,EAAA1Y,EAAA2I,YAAA3K,EAAA2K,aACAiQ,EAAAF,EAAA1Y,EAAA4Y,aAAA5a,EAAA4a,cACAR,EAAAM,EAAA1Y,EAAAoY,aAAApa,EAAAoa,cACAS,EAAAH,EAAA1Y,EAAA6Y,aAAA7a,EAAA6a,cAEA,OACA/U,MAAA6U,EAAAhQ,EAAAqO,EAAA2B,EACA5U,OAAA6U,EAAAC,EAAAT,EAAAQ,GAwBA,SAAAf,EAAA/a,GACA,GAAAqD,EAAAhoB,SAAA2kB,GACA,OACA+G,KAAA,EACAD,IAAA,EACAiR,MAAA,EACAqC,OAAA,GAGA,IAAAC,EAAA1a,iBAAAK,GACA,OACA+G,KAAA8S,EAAAQ,EAAA2B,YACAlV,IAAA+S,EAAAQ,EAAA4B,WACAlE,MAAA8B,EAAAQ,EAAA6B,aACA9B,OAAAP,EAAAQ,EAAA8B,eAkBA,SAAAC,EAAApc,GACA,IAAArlB,EAAAwgC,EAAAnb,GACAqc,EAAAtB,EAAA/a,GAEA,OACAgH,MAAArsB,EAAAqsB,MAAAqV,EAAAtV,KAAAsV,EAAAtE,MACA9Q,OAAAtsB,EAAAssB,OAAAoV,EAAAvV,IAAAuV,EAAAjC,QAQA,SAAAsB,EAAA1b,GACA,GAAAqD,EAAAhoB,SAAA2kB,GACA,OACA+G,KAAA,EACAD,IAAA,EACAiR,MAAA,EACAqC,OAAA,GAGA,IAAAC,EAAA1a,iBAAAK,GACA,OACA+G,KAAA8S,EAAAQ,EAAAiC,aACAxV,IAAA+S,EAAAQ,EAAAkC,YACAxE,MAAA8B,EAAAQ,EAAAmC,cACApC,OAAAP,EAAAQ,EAAAoC,gBAUA,SAAAC,EAAA1c,EAAA2a,GACA,QAAAr9B,IAAAq9B,EAAA,CACA,IAAAhgC,EAAAqlB,EAAA4a,wBACA,OACA7T,KAAApsB,EAAAosB,KAAAzrB,OAAAqhC,YACA7V,IAAAnsB,EAAAmsB,IAAAxrB,OAAAshC,aAGA,IACAh4B,EAAAghB,EAAA5F,GAEA6a,EAAA6B,EAAA93B,GACAk2B,EAAAC,EAAA/a,GACAgb,EAAAb,EAAAv1B,GAMA,OAJAq2B,EAAAjb,GACA8G,IAAA6T,EAAA7T,IAAA+T,EAAA/T,IAAAgU,EAAAhU,IAAAkU,EAAAlU,IACAC,KAAA4T,EAAA5T,KAAA8T,EAAA9T,KAAA+T,EAAA/T,KAAAiU,EAAAjU,OAEAxkB,KA+BA,SAAA04B,EAAAjb,EAAA2a,GACA,QAAAr9B,GAAAq9B,EAAA,CACA,IACA/1B,EAAAghB,EAAA5F,GAEAhhB,EAAA07B,EAAA1a,GACA6a,EAAAH,EAAA91B,GAEAo2B,GADAD,EAAA/a,GACAma,EAAAv1B,IAGA,OACAkiB,IAAA9nB,EAAA8nB,IAAA+T,EAAA/T,IAAAkU,EAAAlU,IACAC,KAAA/nB,EAAA+nB,KAAA8T,EAAA9T,KAAAiU,EAAAjU,MAGA,IAAApiB,GACAmiB,IAAA6T,EAAA7T,IACAC,KAAA4T,EAAA5T,MAOA,MAJA,UAAAnH,EAAAO,IAAAH,EAAA,cACArb,EAAA,SAAA,YAEAib,EAAAO,IAAAH,EAAArb,GACApC,KASA,SAAAs6B,EAAA7c,EAAA2a,GACA,QAAAr9B,IAAAq9B,EAAA,CACA,IACA/1B,EAAAghB,EAAA5F,GAEAhhB,EAAAk8B,EAAAlb,GACA6a,EAAAH,EAAA91B,GAEAo2B,GADAD,EAAA/a,GACAma,EAAAv1B,IAGA,OACAkiB,IAAA9nB,EAAA8nB,IAAA+T,EAAA/T,IAAAkU,EAAAlU,IACAC,KAAA/nB,EAAA+nB,KAAA8T,EAAA9T,KAAAiU,EAAAjU,KACAC,MAAAhoB,EAAAgoB,MACAC,OAAAjoB,EAAAioB,QAKA,OAFAgU,EAAAjb,EAAA2a,GACAQ,EAAAnb,EAAA2a,GACAp4B,KAmDA,SAAAu6B,EAAA9c,EAAAhlB,GACA,IAAA+hC,EAAA,eAAA/c,EACA,YAAA1iB,IAAAtC,EACA+hC,EAAA/c,EAAA8c,WAAA9c,EAAA2c,aAEAI,EACA/c,EAAA8c,WAAA9hC,EAEAglB,EAAAgd,SAAAhiC,EAAAglB,EAAAid,SAEA16B,MAQA,SAAA26B,EAAAld,EAAAhlB,GACA,IAAAmiC,EAAA,cAAAnd,EAEA,YAAA1iB,IAAAtC,EACAmiC,EAAAnd,EAAAkd,UAAAld,EAAA4c,aAEAO,EACAnd,EAAAkd,UAAAliC,EAEAglB,EAAAgd,SAAAhd,EAAAod,QAAApiC,GAEAuH,MAQA,SAAA44B,EAAAnb,EAAAqb,GACA,QAAA/9B,GAAA+9B,EACA,OAAAvgB,EAAAzf,SAAA2kB,IAEAgH,MAAAhH,EAAAqd,WACApW,OAAAjH,EAAAsd,aAGAxiB,EAAA/e,WAAAikB,GACA2b,EAAA3oB,WAGAgU,MAAAhH,EAAA6L,YACA5E,OAAAjH,EAAA+b,cAIA,IAAAR,EAAA,eAAA3b,EAAAO,IAAAH,EAAA,cACArb,GACAqiB,MAAAqU,EAAArU,MACAC,OAAAoU,EAAApU,QAEA,IAAAsU,EAAA,CACA,IAAAE,EAAAC,EAAA1b,GACAwb,EAAArB,EAAAna,QAEA1iB,IAAAqH,EAAAqiB,OAAA,KAAAriB,EAAAqiB,OAAA,OAAAriB,EAAAqiB,QACAriB,EAAAqiB,MAAAriB,EAAAqiB,MAAAyU,EAAA1U,KAAA0U,EAAA1D,MAAAyD,EAAAzU,KAAAyU,EAAAzD,YAGAz6B,IAAAqH,EAAAsiB,QAAA,KAAAtiB,EAAAsiB,QAAA,OAAAtiB,EAAAsiB,SACAtiB,EAAAsiB,OAAAtiB,EAAAsiB,OAAAwU,EAAA3U,IAAA2U,EAAArB,OAAAoB,EAAA1U,IAAA0U,EAAApB,QAIA,OADAxa,EAAAO,IAAAH,EAAArb,GACApC,KAmBA,SAAAg7B,IACA,OAAAA,EAifA,OA9eAziB,EAAAzY,MAAAk7B,GACApD,cAAAA,EAEAO,iBAAAA,EAEAQ,aAAAA,EAEAI,aAhdA,SAAAtb,EAAAhlB,GACA,YAAAsC,GAAAtC,EACAogC,EAAApb,GAAAiH,OAEAmU,EAAApb,GACAiH,OAAAjsB,KA6cAogC,WAAAA,EAEAlB,YArZA,SAAAla,EAAAhlB,GACA,YAAAsC,GAAAtC,EACAogC,EAAApb,GAAAgH,OAEAoU,EAAApb,GACAgH,MAAAhsB,IAEAuH,OAgZAi7B,YAxYA,SAAAxd,GACA,IAAAyd,EAAArC,EAAApb,GACAyb,EAAAC,EAAA1b,GAQA,OACA+G,KAAA0U,EAAA1U,KACAD,IAAA2U,EAAA3U,IACAE,MAAAyW,EAAAzW,MAAAyU,EAAA1U,KAAA0U,EAAA1D,MACA9Q,OAAAwW,EAAAxW,OAAAwU,EAAA3U,IAAA2U,EAAArB,SA4XAuB,gBAAAA,EAEA1U,OAhWA,SAAAjH,EAAAhlB,GACA,YAAAsC,GAAAtC,EACAmgC,EAAAnb,GAAAiH,QAEAkU,EAAAnb,GACAiH,OAAAjsB,IAEAuH,OA2VAw4B,cAAAA,EAEA2C,WAlUA,SAAA1d,GACA,IAAArlB,EAAAkiC,EAAA7c,GACAqc,EAAAtB,EAAA/a,GAEA,OACA+G,KAAApsB,EAAAosB,KACAD,IAAAnsB,EAAAmsB,IACAE,MAAArsB,EAAAqsB,MAAAqV,EAAAtV,KAAAsV,EAAAtE,MACA9Q,OAAAtsB,EAAAssB,OAAAoV,EAAAvV,IAAAuV,EAAAjC,SA4TAgC,WAAAA,EAEAxW,aAAAA,EAEA8V,eAAAA,EAGAgB,aAAAA,EAEAiB,SA9PA,SAAA3d,EAAA2a,GACA,QAAAr9B,IAAAq9B,EAAA,CACA,IAAAhgC,EAAAqlB,EAAA4a,wBACA,OACA7T,KAAApsB,EAAAosB,KAAAzrB,OAAAqhC,YACA7V,IAAAnsB,EAAAmsB,IAAAxrB,OAAAshC,YACA5V,MAAA3d,KAAAu0B,MAAAjjC,EAAAqsB,OACAC,OAAA5d,KAAAu0B,MAAAjjC,EAAAssB,SAKA,OAFAyV,EAAA1c,EAAA2a,GACAQ,EAAAnb,EAAA2a,GACAp4B,MAqPA04B,iBAAAA,EAEA4B,aAAAA,EAEA/C,eAAAA,EAEA+D,eAnLA,SAAA7d,EAAA8d,GAcA,IACAC,EAAAC,EAAAhX,EAAAC,EAAAgX,EAAAC,EADAC,EAAAne,EAAAoB,WAEAgd,EAfA,SAAApe,EAAAqe,GACA,IAAAN,EAAAC,EAAAp5B,EAAAob,EAEA+d,EAAAC,EAAA,EACA,KAAAp5B,GAAAA,GAAAy5B,GAAAz5B,EAAA5I,UACA+hC,GAAAn5B,EAAA05B,YAAA,EACAN,GAAAp5B,EAAA25B,WAAA,EACA35B,EAAAA,EAAAghB,aAGA,OAAAmY,EAAAA,EAAAC,EAAAA,GAKAQ,CAAAxe,EAAAme,GAEAJ,EAAAK,EAAAL,EACAC,EAAAI,EAAAJ,EACAhX,EAAAhH,EAAA6L,YACA5E,EAAAjH,EAAA+b,aACAkC,EAAAE,EAAAjE,YACAgE,EAAAC,EAAA7C,aAEA,OAAAwC,GACAC,GAAAE,EAAAjX,EACAgX,GAAAE,EAAAjX,GACA,UAAA6W,IACAC,GAAAE,EAAA,EAAAjX,EAAA,EACAgX,GAAAE,EAAA,EAAAjX,EAAA,GAMA,OAHAkX,EAAArB,WAAAiB,EACAI,EAAAjB,UAAAc,EAEAz7B,MAiJAu6B,WAAAA,EAEAI,UAAAA,EAEA/B,KAAAA,EAEAnU,MAhEA,SAAAhH,EAAAhlB,GACA,YAAAsC,GAAAtC,EACAmgC,EAAAnb,GAAAgH,OAEAmU,EAAAnb,GACAgH,MAAAhsB,IAEAuH,SA4DA,WACA,IAAAq5B,EAAAvyB,KAAAuyB,IACA6C,EAAAp1B,KAAAo1B,IACAC,EAAA,oBACAC,EAAA,oBACAC,EAAA,wBACAC,EAAA,OACAC,EAAA,KAEA,SAAAC,EAAAC,EAAAhY,EAAAC,GACA,OACA1L,WAAAyjB,EAAA,KAAAF,EAAAp+B,KAAAs+B,EAAA,IAAAhY,EAAA,IAAA,GACAzL,WAAAyjB,EAAA,KAAAF,EAAAp+B,KAAAs+B,EAAA,IAAA/X,EAAA,IAAA,IAIA,SAAAgY,EAAAje,EAAAZ,GACA,OAAAlgB,SAAA0f,EAAAO,IAAAa,EAAAZ,GAAA,KAAA,EAqPA,IAAA8e,GACAC,KACApY,KAAA,SAAAF,EAAA3d,GACA,IAMAk2B,EANAC,EAAAn2B,EAAAm2B,OACAC,EAAAD,EAAAhkC,SAAAgkC,EAAAvC,WAAAuC,EAAArgC,OAAA+nB,KACAwY,EAAAF,EAAArY,MACAwY,EAAA3Y,EAAAE,KAAA7d,EAAAu2B,kBAAAzD,WACA0D,EAAAJ,EAAAE,EACAG,EAAAH,EAAAt2B,EAAA02B,eAAAL,EAAAD,EAIAp2B,EAAA02B,eAAAL,EAGAG,EAAA,GAAAC,GAAA,GACAP,EAAAvY,EAAAE,KAAA2Y,EAAAx2B,EAAA02B,eAAAL,EACAD,EACAzY,EAAAE,MAAA2Y,EAAAN,GAIAvY,EAAAE,KADA4Y,EAAA,GAAAD,GAAA,EACAJ,EAIAI,EAAAC,EACAL,EAAAC,EAAAr2B,EAAA02B,eAEAN,EAKAI,EAAA,EACA7Y,EAAAE,MAAA2Y,EAGAC,EAAA,EACA9Y,EAAAE,MAAA4Y,EAIA9Y,EAAAE,KAAA6U,EAAA/U,EAAAE,KAAAyY,EAAA3Y,EAAAE,OAGAD,IAAA,SAAAD,EAAA3d,GACA,IAMA22B,EANAR,EAAAn2B,EAAAm2B,OACAC,EAAAD,EAAAhkC,SAAAgkC,EAAAnC,UAAAmC,EAAArgC,OAAA8nB,IACAgZ,EAAA52B,EAAAm2B,OAAApY,OACA8Y,EAAAlZ,EAAAC,IAAA5d,EAAAu2B,kBAAAxD,UACA+D,EAAAV,EAAAS,EACAE,EAAAF,EAAA72B,EAAAg3B,gBAAAJ,EAAAR,EAIAp2B,EAAAg3B,gBAAAJ,EAGAE,EAAA,GAAAC,GAAA,GACAJ,EAAAhZ,EAAAC,IAAAkZ,EAAA92B,EAAAg3B,gBAAAJ,EACAR,EACAzY,EAAAC,KAAAkZ,EAAAH,GAIAhZ,EAAAC,IADAmZ,EAAA,GAAAD,GAAA,EACAV,EAIAU,EAAAC,EACAX,EAAAQ,EAAA52B,EAAAg3B,gBAEAZ,EAKAU,EAAA,EACAnZ,EAAAC,KAAAkZ,EAGAC,EAAA,EACApZ,EAAAC,KAAAmZ,EAIApZ,EAAAC,IAAA8U,EAAA/U,EAAAC,IAAAiZ,EAAAlZ,EAAAC,OAIAqZ,MACApZ,KAAA,SAAAF,EAAA3d,GACA,IAkBAk2B,EACAgB,EAnBAf,EAAAn2B,EAAAm2B,OACAC,EAAAD,EAAArgC,OAAA+nB,KAAAsY,EAAAvC,WACAyC,EAAAF,EAAArY,MACAsX,EAAAe,EAAAhkC,SAAAgkC,EAAAvC,WAAAuC,EAAArgC,OAAA+nB,KACAyY,EAAA3Y,EAAAE,KAAA7d,EAAAu2B,kBAAAzD,WACA0D,EAAAF,EAAAlB,EACAqB,EAAAH,EAAAt2B,EAAA02B,eAAAL,EAAAjB,EACA+B,EAAA,SAAAn3B,EAAAo3B,GAAA,IACAp3B,EAAAq3B,UACA,UAAAr3B,EAAAo3B,GAAA,GACAp3B,EAAAq3B,UACA,EACAC,EAAA,SAAAt3B,EAAAu3B,GAAA,GACAv3B,EAAAw3B,YACA,UAAAx3B,EAAAu3B,GAAA,IACAv3B,EAAAw3B,YACA,EACA1hC,GAAA,EAAAkK,EAAAlK,OAAA,GAIA0gC,EAAA,IACAN,EAAAvY,EAAAE,KAAAsZ,EAAAG,EAAAxhC,EAAAkK,EAAA02B,eACAL,EAAAD,GACA,GAAAF,EAAAX,EAAAiB,MACA7Y,EAAAE,MAAAsZ,EAAAG,EAAAxhC,GAEA2gC,EAAA,KACAS,EAAAvZ,EAAAE,KAAA7d,EAAAu2B,kBAAAzD,WAAAqE,EACAG,EAAAxhC,EAAAs/B,GACA,GAAAG,EAAA2B,GAAAT,KACA9Y,EAAAE,MAAAsZ,EAAAG,EAAAxhC,IAIA8nB,IAAA,SAAAD,EAAA3d,GACA,IAmBAy3B,EACAd,EApBAR,EAAAn2B,EAAAm2B,OACAC,EAAAD,EAAArgC,OAAA8nB,IAAAuY,EAAAnC,UACA4C,EAAAT,EAAApY,OACAsX,EAAAc,EAAAhkC,SAAAgkC,EAAAnC,UAAAmC,EAAArgC,OAAA8nB,IACAiZ,EAAAlZ,EAAAC,IAAA5d,EAAAu2B,kBAAAxD,UACA+D,EAAAD,EAAAxB,EACA0B,EAAAF,EAAA72B,EAAAg3B,gBAAAJ,EAAAvB,EACAzX,EAAA,QAAA5d,EAAAo3B,GAAA,GACAD,EAAAvZ,GACA5d,EAAA03B,WACA,WAAA13B,EAAAo3B,GAAA,GACAp3B,EAAA03B,WACA,EACAJ,EAAA,QAAAt3B,EAAAu3B,GAAA,GACAv3B,EAAA23B,aACA,WAAA33B,EAAAu3B,GAAA,IACAv3B,EAAA23B,aACA,EACA7hC,GAAA,EAAAkK,EAAAlK,OAAA,GAGAghC,EAAA,IACAH,EAAAhZ,EAAAC,IAAAuZ,EAAAG,EAAAxhC,EAAAkK,EAAAg3B,gBACAJ,EAAAR,GACA,GAAAO,EAAApB,EAAAuB,MACAnZ,EAAAC,KAAAuZ,EAAAG,EAAAxhC,GAEAihC,EAAA,KACAU,EAAA9Z,EAAAC,IAAA5d,EAAAu2B,kBAAAxD,UAAAoE,EAAAG,EACAxhC,EAAAu/B,GACA,GAAAE,EAAAkC,GAAAV,KACApZ,EAAAC,KAAAuZ,EAAAG,EAAAxhC,KAKA8hC,SACA/Z,KAAA,WACAmY,EAAAiB,KAAApZ,KAAAzkB,MAAAC,KAAAN,WACAi9B,EAAAC,IAAApY,KAAAzkB,MAAAC,KAAAN,YAEA6kB,IAAA,WACAoY,EAAAiB,KAAArZ,IAAAxkB,MAAAC,KAAAN,WACAi9B,EAAAC,IAAArY,IAAAxkB,MAAAC,KAAAN,cAKAs7B,EAAAwD,MAhWA,SAAA/gB,EAAAlb,GAIA,IAAA07B,EAAAE,EAAAG,EAAAG,EAAAC,EAAAC,EACAx/B,GAHAoD,EAAAgW,EAAAtX,UAAAsB,IAGAq8B,GACA9B,GAxBAre,EAwBAlc,EAAAu6B,OAvBA+B,EAAApgB,GAAA1lB,OACAD,EAAAgoB,EAAAhoB,SAAA+lC,GACArlC,IAAAqlC,GAAA,IAAAA,EAAAplC,SACAqlC,GAAAhmC,IAAAU,EACAulC,EAAAlF,EAAAgF,IAEApgB,QAAAogB,EACA/lC,SAAAA,EACAU,WAAAA,EACAiD,OAAAqiC,EAAA3E,EAAA1b,IAAA+F,KAAA,EAAAD,IAAA,GACAgW,WAAAA,EAAAsE,GACAlE,UAAAA,EAAAkE,GACApa,MAAAsa,EAAAta,MACAC,OAAAqa,EAAAra,SAWAsa,EAxCA,SAAAlC,GACA,IAAAmC,EAAAnC,EAAAhkC,UAAAgkC,EAAAtjC,WAAA,GACA6jB,EAAAO,IAAAkf,EAAAre,QAAA,cACAygB,EAAApC,EAAAhkC,UAAAgkC,EAAAtjC,WAAA,GACA6jB,EAAAO,IAAAkf,EAAAre,QAAA,cACA0gB,EAAA,WAAAF,GACA,SAAAA,GAAAnC,EAAArY,MAAA6U,YAAAwD,EAAAre,SAGA,OACAgG,MAHA,WAAAya,GACA,SAAAA,GAAApC,EAAApY,OAAA6U,aAAAuD,EAAAre,SAEA8Y,IAAA,EACA7S,OAAAya,EAAA5H,IAAA,GA6BA6H,CAAAtC,GACAuC,GAAA98B,EAAA88B,WAAA,QAAArnC,MAAA,KACAykC,KA3BA,IAAAhe,EACAogB,EACA/lC,EACAU,EACAslC,EACAC,EAtDA5Y,EA8EAhnB,EAAAw/B,EA7EA,IAAAxY,EAAA1sB,UAEAm/B,KAAAA,EAAAzS,GACA1pB,QAAA8nB,IAAA,EAAAC,KAAA,IAGA1D,EAAAhoB,SAAAqtB,IAEAyS,KAAAA,EAAAzS,GACA1pB,QACA8nB,IAAAoW,EAAAxU,GACA3B,KAAA+V,EAAApU,KAIAA,EAAA8I,gBAEA2J,MACAnU,MAAA,EACAC,OAAA,GAEAjoB,QACA8nB,IAAA4B,EAAAmZ,MACA9a,KAAA2B,EAAAoZ,SAKA3G,KAAAA,EAAAzS,GACA1pB,OAAA09B,EAAAhU,IAiDAhnB,EAAA8vB,iBAGA1sB,EAAA27B,GAAA,YAlFA,IAAA/X,EAoFAgY,EAAAQ,EAAA/F,KAAAnU,MACA6Z,EAAAK,EAAA/F,KAAAlU,OACA+Z,EAAAE,EAAAliC,OAGAiiC,EAAAnmB,EAAAtX,UAAAw9B,GAIAlmB,EAAAxX,MAAA,KAAA,MAAA,WACA,IACAy+B,EACAC,EAFA5D,GAAAt5B,EAAAvC,OAAA,IAAAhI,MAAA,KAIA,IAAA6jC,EAAAxiC,SACAwiC,EAAAM,EAAAh+B,KAAA09B,EAAA,IACAA,EAAAl/B,QAAA,WACAy/B,EAAAj+B,KAAA09B,EAAA,KACA,UAAAl/B,OAAAk/B,IACA,SAAA,WAEAA,EAAA,GAAAM,EAAAh+B,KAAA09B,EAAA,IAAAA,EAAA,GAAA,SACAA,EAAA,GAAAO,EAAAj+B,KAAA09B,EAAA,IAAAA,EAAA,GAAA,SAGA2D,EAAAnD,EAAA/gB,KAAAugB,EAAA,IACA4D,EAAApD,EAAA/gB,KAAAugB,EAAA,IACAY,EAAAz8B,OACAw/B,EAAAA,EAAA,GAAA,EACAC,EAAAA,EAAA,GAAA,GAIAl9B,EAAAvC,OACAs8B,EAAAhhB,KAAAugB,EAAA,IAAA,GACAS,EAAAhhB,KAAAugB,EAAA,IAAA,MAKA,IAAAwD,EAAAhmC,SACAgmC,EAAA,GAAAA,EAAA,IAGA,UAAA98B,EAAA27B,GAAA,GACAQ,EAAAla,MAAA2Z,EACA,WAAA57B,EAAA27B,GAAA,KACAQ,EAAAla,MAAA2Z,EAAA,GAGA,WAAA57B,EAAA27B,GAAA,GACAQ,EAAAna,KAAA+Z,EACA,WAAA/7B,EAAA27B,GAAA,KACAQ,EAAAna,KAAA+Z,EAAA,GAOA,OAJAL,EAAAzB,EAAAC,EAAAyB,GAAAC,EAAAG,GACAI,EAAAla,MAAAyZ,EAAA,GACAS,EAAAna,KAAA0Z,EAAA,GAEA,SAAAlhB,GACA,IAAAmgB,EAAAwC,EACAX,EAAAlF,EAAA9c,GACAihB,EAAAe,EAAAta,MACA4Z,EAAAU,EAAAra,OACA+U,EAAAiD,EAAA3f,EAAA,cACA2c,EAAAgD,EAAA3f,EAAA,aACAsgB,EAAAW,EAAAvE,EAAAiD,EAAA3f,EAAA,eACAiiB,EAAAva,MACAkZ,EAAAU,EAAA3E,EAAAgD,EAAA3f,EAAA,gBACAiiB,EAAAta,OACAJ,EAAA/L,EAAAtX,UAAAy9B,GACAZ,EAAAtB,EAAAC,EAAAsB,GAAAgB,EAAAta,MAAAsa,EAAAra,QAEA,UAAAniB,EAAAw7B,GAAA,GACAzZ,EAAAE,MAAAwZ,EACA,WAAAz7B,EAAAw7B,GAAA,KACAzZ,EAAAE,MAAAwZ,EAAA,GAGA,WAAAz7B,EAAAw7B,GAAA,GACAzZ,EAAAC,KAAA8Z,EACA,WAAA97B,EAAAw7B,GAAA,KACAzZ,EAAAC,KAAA8Z,EAAA,GAGA/Z,EAAAE,MAAAsZ,EAAA,GACAxZ,EAAAC,KAAAuZ,EAAA,GAEAZ,GACAzD,WAAAA,EACAC,UAAAA,GAGAnhB,EAAAxX,MAAA,OAAA,OAAA,SAAAnF,EAAA+jC,GACAhD,EAAA0C,EAAAzjC,KACA+gC,EAAA0C,EAAAzjC,IAAA+jC,GAAArb,GACA6Z,YAAAA,EACAG,aAAAA,EACAN,UAAAA,EACAK,WAAAA,EACAnB,kBAAAA,EACAG,eAAAA,EACAM,gBAAAA,EACAlhC,QAAAwhC,EAAA,GAAAH,EAAA,GAAAG,EAAA,GAAAH,EAAA,IACAC,GAAAx7B,EAAAw7B,GACAG,GAAA37B,EAAA27B,GACApB,OAAAA,EACA/f,KAAAA,MAKAxa,EAAAm9B,QAGAA,EAAA,SAAAt9B,GACA,IAAAoiB,EAAAia,EAAAja,KAAAF,EAAAE,KACAgR,EAAAhR,EAAA2Z,EAAAH,EACAzZ,EAAAka,EAAAla,IAAAD,EAAAC,IACAsT,EAAAtT,EAAA+Z,EAAAD,EACAuB,GACAzgC,QACAsf,QAAAtf,EACAqlB,KAAAia,EAAAja,KACAD,IAAAka,EAAAla,IACAE,MAAA0Z,EACAzZ,OAAA4Z,GAEA7f,SACAA,QAAA1B,EACAyH,KAAAF,EAAAE,KACAD,IAAAD,EAAAC,IACAE,MAAAuZ,EACAtZ,OAAA2Z,GAEAwB,WAAArK,EAAA,EAAA,OAAAhR,EAAA,EAAA,QAAA,SACAsb,SAAAjI,EAAA,EAAA,MAAAtT,EAAA,EAAA,SAAA,UAEA4Z,EAAAH,GAAA9B,EAAA1X,EAAAgR,GAAA2I,IACAyB,EAAAC,WAAA,UAEAvB,EAAAD,GAAAnC,EAAA3X,EAAAsT,GAAAyG,IACAsB,EAAAE,SAAA,UAEAzG,EAAA6C,EAAA1X,GAAA0X,EAAA1G,IAAA6D,EAAA6C,EAAA3X,GAAA2X,EAAArE,IACA+H,EAAAG,UAAA,aAEAH,EAAAG,UAAA,WAEAx9B,EAAAm9B,MAAApnC,KAAA0H,KAAAoC,EAAAw9B,KAIAzF,EAAApd,EAAAxE,EAAAtX,OAAAqjB,GAAAob,MAAAA,KA9FA,CA+FAjiB,IAnQA,GA0bA7lB,EAAAojC,KAAAA,IAEAtjC,OAAA,gCACA,QACA,UACA,YACA,UACA,YACA,SAAAE,EAAA2gB,EAAA6C,EAAA+S,EAAA9Q,GACA,IAAA2iB,EAAA5kB,EAAAM,qBAAA,aAYA,SAAAukB,EAAAC,EAAA3jB,GACA,OAAA2jB,EAAA,GAAAA,GAAA3jB,EAAAA,EACA2jB,EAAA,GAAAA,EAAA3jB,GAAAA,EAAA,EAGA,SAAAoU,EAAA1P,EAAA3W,GACA,IAhBA61B,EAAA3E,EAAAC,EACA2E,EAAAC,EAeAC,GAhBAH,EAgBA71B,EAAA61B,OAhBA3E,EAgBAlxB,EAAAmxB,EAhBAA,EAgBAnxB,EAAAkxB,EAfA4E,EAAAt5B,KAAAy5B,IAAAJ,GAAAE,EAAAv5B,KAAA05B,IAAAL,IAEAM,IAAAL,EAAA5E,EACAkF,KAAAL,EAAA5E,EACAkF,IAAAN,EAAA7E,EACAoF,IAAAR,EAAA3E,IAWApe,EAAAO,IAAAqD,EAAA+e,EAAA,UACAM,EAAAG,IAAAI,QAAA,IAAA,IAAAP,EAAAK,IAAAE,QAAA,IAAA,IACAP,EAAAI,IAAAG,QAAA,IAAA,IAAAP,EAAAM,IAAAC,QAAA,IAAA,WAIA,SAAAC,EAAA7f,EAAA3W,GACA,IAAAA,EAQA,OALAA,EAAA6jB,EAAAxnB,KAAAsa,EAAA,kBACAkf,OAAA71B,EAAA61B,QAAA,EACA71B,EAAAkxB,EAAAlxB,EAAAkxB,GAAA,EACAlxB,EAAAmxB,EAAAnxB,EAAAmxB,GAAA,EACAnxB,EAAAiS,KAAAjS,EAAAiS,MAAA,EACAjS,EAPA6jB,EAAAxnB,KAAAsa,EAAA,YAAA3W,GAWA,IAAAy2B,GAEAjB,SAAA,SAAAx1B,GACAA,EAAA61B,OAAAr5B,KAAAk6B,GAAA12B,EAAA61B,OACA71B,EAAAmxB,IAAA,GAIAoE,WAAA,SAAAv1B,GACAA,EAAA61B,OAAAr5B,KAAAk6B,GAAA12B,EAAA61B,OACA71B,EAAAkxB,IAAA,GAIAyF,OAAA,SAAA32B,EAAA42B,GACA52B,EAAA61B,OAAAe,EAAAp6B,KAAAk6B,GAAA,KAIAxc,KAAA,SAAAla,GACAA,EAAA61B,QAAAr5B,KAAAk6B,GAAA,GAIAxL,MAAA,SAAAlrB,GACAA,EAAA61B,QAAAr5B,KAAAk6B,GAAA,GAIAd,MAAA,SAAA51B,EAAAiS,GACA,IAAA4kB,EAAAlB,EAAA31B,EAAAmxB,EAAAlf,GAAA6kB,EAAAnB,EAAA31B,EAAAkxB,EAAAjf,GACA4kB,GAAAC,IACA92B,EAAAmxB,GAAA0F,EACA72B,EAAAkxB,GAAA4F,IAKAC,OAAA,SAAA/2B,GACAy2B,EAAAb,MAAA51B,EAAA,KAIAg3B,QAAA,SAAAh3B,GACAy2B,EAAAb,MAAA51B,GAAA,MAkBA,SAAAi3B,IACA,OAAAA,EAoBA,OAjBA,WAAA,aAAA,SAAA,OAAA,QAAA,QAAA,OAAA,SAAA,WAAAtpC,QAAA,SAAAC,GAhBA,IAAAspC,EAiBAD,EAAArpC,IAjBAspC,EAiBAT,EAAA7oC,GAhBA,WACA,IAAAsH,EAAA+Y,EAAA/b,UAAAkD,WACAuhB,EAAAzhB,EAAAG,QACA2K,EAAAw2B,EAAA7f,GACAzhB,EAAAoD,QAAA0H,GACAk3B,EAAAzhC,MAAAC,KAAAR,GACAmxB,EAAA1P,EAAA3W,GACAw2B,EAAA7f,EAAA3W,OAYAiO,EAAAzY,MAAAyhC,GACAxX,MAAA,SAAA9I,GACA,IAAA3W,GACAkxB,EAAA,EACAC,EAAA,EACA0E,OAAA,GAEAxP,EAAA1P,EAAA3W,GACAw2B,EAAA7f,EAAA3W,MAKA1S,EAAA2pC,WAAAA,IAGA7pC,OAAA,wBACA,QACA,UACA,YACA,SACA,WACA,aACA,SAAAE,EAAA2gB,EAAA6C,EAAA4f,EAAA3d,EAAAuY,GACA,IAAA6L,EACAC,EACAC,EAEAC,EACAC,EACAC,EACAC,EAEAC,EAAA5mB,EAAAO,kBAAA,gBACAka,EAAAza,EAAAO,kBAAA,iBAEAsmB,EAAA,8EACAtyB,EAAAyL,EAAAxB,eAAA,YACAsoB,KAwBA,SAAAC,EAAA1kB,EAAA2kB,EAAAC,EAAAC,EAAAxlC,EAAAylC,GACA,IAAAxlC,EAKAylC,EACAC,EALAC,KACAC,KACApB,EAAA,GACAqB,EAAA5iC,KAGA6iC,GAAA,EACAjI,GAAA,EAkCA,GA/BAriB,EAAAze,cAAAuoC,KACAC,EAAAD,EAAAS,OACAhmC,EAAAulC,EAAA/wB,SACAixB,EAAAF,EAAAE,MACAF,EAAAA,EAAAA,UAGA9pB,EAAA1f,SAAAwpC,KACAA,EAAAU,EAAAC,OAAAX,SAEAtnC,IAAAsnC,IACAA,EAAAU,EAAAC,OAAAC,QAEAZ,GAAA,IACAU,EAAAr0B,MACA2zB,EAAA,GAGA9pB,EAAA/f,WAAA8pC,IACAxlC,EAAAwlC,EACAY,KAAA,SAEAZ,EAAAA,GAAA,QAGAC,EACAA,GAAA,IAEAA,EAAA,EAGAhqB,EAAA1f,SAAAupC,GAEAM,EAAAjB,GAAAW,EACAM,EAAAhB,GAAAW,EAAA,IACAK,EAAAf,GAAAW,EACAE,EAAAR,MACA,CAEA,IAAAjlC,KAAAqlC,EAAA,CACA,IAAAlyB,EAAAkyB,EAAArlC,GACA,GAAAklC,EAAA9jC,KAAApB,GACAwkC,GAAAxkC,EAAA,IAAAmT,EAAA,SACA,CAIA,GAHA,cAAAnT,IACA69B,GAAA,GAEA,QAAA79B,GAAAwb,EAAAze,cAAAoW,IAEA,GADAwyB,EAAA3lC,GAAA,QAAAmT,EAAAqU,IAAA,MAAArU,EAAAslB,MAAA,MAAAtlB,EAAA2nB,OAAA,MAAA3nB,EAAAsU,KAAA,MACA,QAAAnH,EAAAO,IAAAH,EAAA,QAAA,CACA,IAAAmb,EAAAoC,EAAApC,KAAAnb,GACAJ,EAAAO,IAAAH,EAAA,OAAA,YAAAmb,EAAAnU,MAAA,MAAAmU,EAAAlU,OAAA,YACA,QAIAge,EAAA3lC,GAAAmT,EAEAyyB,EAAA5mC,KAAAwc,EAAAtJ,UAAAlS,KAGAylC,EAAA3M,EA8DA,OA3DA0L,IACAmB,EAAA/yB,GAAA4xB,EACAoB,EAAA5mC,KAAA4T,IAGA0yB,EAAA,GAAA9pB,EAAAze,cAAAsoC,KACAM,EAAAd,GAAAe,EAAA9vB,KAAA,MACA6vB,EAAAb,GAAAQ,EAAA,IACAK,EAAAX,GAAAQ,EAAA,IACAG,EAAAZ,GAAAQ,GAGAG,EAAA,SAAAz0B,GAEA,GADA60B,GAAA,EACA70B,EAAA,CACA,GAAAA,EAAA7O,SAAA6O,EAAA4lB,cACA,OAEAgC,EAAAlnB,IAAAV,EAAA7O,OAAAqjC,EAAAC,QAEA7M,EAAAlnB,IAAA+O,EAAAukB,EAAAS,GAEAplB,EAAAO,IAAAH,EAAAykB,GAIAplC,GAAAA,EAAAxE,KAAA0H,OAGAqiC,EAAA,IACAzM,EAAAzoB,GAAAsQ,EAAA+kB,EAAAC,GAGAlqB,EAAAhQ,SAAA,WACAs6B,GAGAJ,EAAAnqC,KAAAsqC,IACA,KAAAP,EAAAE,GAAA,GALAhqB,IASAkF,EAAA0lB,WAEA9lB,EAAAO,IAAAH,EAAAilB,GAEAL,GAAA,GACA9pB,EAAAhQ,SAAA,WACAs6B,GAGAJ,EAAAnqC,KAAAsqC,IACA,EALArqB,GAQAqiB,GACAwI,EAAA3lB,EAAA2kB,EAAA,UAAAC,EAAAvlC,GAGAkD,KASA,SAAAue,EAAAd,EAAA4lB,EAAAvmC,GAUA,OATAugB,EAAAkB,KAAAd,GACA4lB,KACAvmC,GAAAyb,EAAA/f,WAAA6qC,KACAvmC,EAAAumC,EACAA,EAAA,UAEAhmB,EAAAO,IAAAH,EAAA,UAAA,GACA0kB,EAAA1kB,GAAApB,QAAA,EAAA6jB,MAAA,OAAAmD,EAAAvmC,IAEAkD,KAUA,SAAAoe,EAAAX,EAAA4lB,EAAAvmC,GAeA,OAdAumC,IACAvmC,GAAAyb,EAAA/f,WAAA6qC,KACAvmC,EAAAumC,EACAA,EAAA,UAEAlB,EAAA1kB,GAAApB,QAAA,EAAA6jB,MAAA,OAAAmD,EAAA,WACAhmB,EAAAe,KAAAX,GACA3gB,GACAA,EAAAxE,KAAAmlB,MAIAJ,EAAAe,KAAAX,GAEAzd,KAUA,SAAAojC,EAAA3lB,EAAAoe,EAAAwH,EAAAvmC,GACA,IAAAwmC,EAAA3lC,SAAA8f,EAAAkd,WACA/+B,EAAA,EAEA2nC,EAAA,IAAAF,EADA,EAEA5I,EAAA98B,SAAAk+B,GAEA2H,EAAAC,YAAA,aACA7nC,GAEA2nC,IAAA9lB,EAAAkd,WAAAF,EAAA6I,GAAAC,EAAA3nC,EAAA0nC,GAEA1nC,GAAA2nC,EAAA,IACAG,cAAAF,GACA1mC,GAAAyb,EAAAhQ,SAAAzL,EAAA,IAAAyb,KAXA,GAuCA,SAAAorB,EAAAlmB,EAAA4lB,EAAAhnB,EAAAymB,EAAAhmC,GAEA,OADAqlC,EAAA1kB,GAAApB,QAAAA,GAAAgnB,EAAAP,EAAAhmC,GACAkD,KAWA,SAAA4jC,EAAAnmB,EAAA4lB,EAAAP,EAAAhmC,GACA,IAAAqC,EAAAke,EAAAO,IAAAH,EAAA,WAUA,OATAte,EAAA,EACAke,EAAAO,IAAAH,EAAA,UAAA,GAEAte,EAAA,EAEAke,EAAAkB,KAAAd,GAEAkmB,EAAAlmB,EAAA4lB,EAAAlkC,EAAA2jC,EAAAhmC,GAEAkD,KAUA,SAAA6jC,EAAApmB,EAAA4lB,EAAAP,EAAAhmC,GACA,IACAwU,EACA+K,EAAAgB,EAAAO,IAAAH,EAAA,WACAlb,KAyBA,OAvBAgW,EAAAze,cAAAupC,IACA9gC,EAAAugC,OAAAO,EAAAP,OACAvgC,EAAA8/B,SAAAgB,EAAAhB,SACA/wB,EAAA+xB,EAAA/xB,WAEA/O,EAAA8/B,SAAAgB,EACAvmC,GACAwU,EAAAxU,EACAyF,EAAAugC,OAAAA,GAEAxxB,EAAAwxB,GAGAvgC,EAAA+O,SAAA,WACA+L,EAAAO,IAAAH,EAAA,UAAApB,GACAgB,EAAAe,KAAAX,GACAnM,GACAA,EAAAhZ,KAAAmlB,IAIAkmB,EAAAlmB,EAAAlb,EAAA,GAEAvC,KAyBA,SAAA8jC,EAAArmB,EAAA4kB,EAAAvlC,GAGA,IAAAwnB,EAAAjH,EAAAO,IAAAH,EAAA,YAGAc,EAAAd,GAGAJ,EAAAO,IAAAH,GACA6G,SAAA,WACAyf,WAAA,WAIA,IAAArK,EAAArc,EAAAO,IAAAH,EAAA,cACAmc,EAAAvc,EAAAO,IAAAH,EAAA,iBACAuc,EAAA3c,EAAAO,IAAAH,EAAA,eACAyc,EAAA7c,EAAAO,IAAAH,EAAA,kBACAiH,EAAArH,EAAAO,IAAAH,EAAA,UA8BA,OA3BAJ,EAAAO,IAAAH,GACA6G,SAAAA,EACAyf,WAAA,UACAC,SAAA,SACAtf,OAAA,EACAgV,UAAA,EACAE,aAAA,EACAI,WAAA,EACAE,cAAA,IAIAiI,EAAA1kB,GACAiH,OAAAA,EACAgV,UAAAA,EACAE,aAAAA,EACAI,WAAAA,EACAE,cAAAA,IAEAmI,SAAAA,EACA/wB,SAAA,WACAxU,GACAA,EAAAiD,MAAA0d,MAKAzd,KASA,SAAAikC,EAAAxmB,EAAA4kB,EAAAvlC,GAEA,GAAAk+B,EAAAtW,OAAAjH,GAAA,EAAA,CAGAJ,EAAAO,IAAAH,EAAA,YAAA,IAGAiH,EAAArH,EAAAO,IAAAH,EAAA,UACAic,EAAArc,EAAAO,IAAAH,EAAA,cACAmc,EAAAvc,EAAAO,IAAAH,EAAA,iBACAuc,EAAA3c,EAAAO,IAAAH,EAAA,eACAyc,EAAA7c,EAAAO,IAAAH,EAAA,kBAGAJ,EAAAO,IAAAH,GACAsmB,WAAA,UACAC,SAAA,SACAtf,OAAAA,EACAgV,UAAAA,EACAE,aAAAA,EACAI,WAAAA,EACAE,cAAAA,IAIAiI,EAAA1kB,GACAiH,OAAA,EACAgV,UAAA,EACAE,aAAA,EACAI,WAAA,EACAE,cAAA,IAGAmI,SAAAA,EACA6B,OAAA,EACA5yB,SAAA,WACA8M,EAAAX,GACAJ,EAAAO,IAAAH,GACAsmB,WAAA,UACAC,SAAA,SACAtf,OAAAA,EACAgV,UAAAA,EACAE,aAAAA,EACAI,WAAAA,EACAE,cAAAA,IAEAp9B,GACAA,EAAAiD,MAAA0d,MAKA,OAAAzd,KAsCA,SAAA+iC,IACA,OAAAA,EA4BA,OAtgBAb,EAAAT,EAAArmB,EAAAM,qBAAA,mBACAwmB,EAAAR,EAAAtmB,EAAAM,qBAAA,uBACAwmB,EAAA9mB,EAAAM,qBAAA,oBACAwmB,EAAAP,EAAAvmB,EAAAM,qBAAA,8BAAA,GAEAwmB,EAAAN,EAAAxmB,EAAAM,qBAAA,wBACAwmB,EAAAL,EAAAzmB,EAAAM,qBAAA,wBACAwmB,EAAAH,EAAA3mB,EAAAM,qBAAA,qBACAwmB,EAAAJ,EAAA1mB,EAAAM,qBAAA,+BAAA,GAqeAnD,EAAAzY,MAAAijC,GACAr0B,KAAA,EAEAs0B,QACAC,OAAA,IACAkB,KAAA,IACAC,KAAA,KAGAjC,QAAAA,EACAkC,qBA7BA,SAAA5mB,EAAA4kB,GACA,IAAAiC,GAAA,EACA1O,EAAAtoB,IAAAmQ,EAAA,gBAAA,WACA6mB,GAAA,IASA,OAFA17B,WALA,WACA07B,GACA1O,EAAApoB,QAAAiQ,EAAA,kBAGA4kB,GAEAriC,MAkBA4jC,OAAAA,EACAC,QAAAA,EACAF,OAAAA,EACAY,WAtLA,SAAA9mB,EAAA4lB,EAAAmB,EAAAC,GACApnB,EAAAgB,YAAAZ,GACAmmB,EAAAnmB,EAAA4lB,EAAAP,OAAAhmC,UAEA+mC,EAAApmB,EAAA4lB,EAAAP,OAAAhmC,UAEA,OAAAkD,MAiLAoe,KAAAA,EACAglB,YAAAA,EAEAU,UAAAA,EACAY,YAnDA,SAAAjnB,EAAA4kB,EAAAvlC,GAGA,GAAAk+B,EAAAtW,OAAAjH,GACAqmB,EAAArmB,EAAA4kB,EAAAvlC,GAIAmnC,EAAAxmB,EAAA4kB,EAAAvlC,GAEA,OAAAkD,MA0CAikC,QAAAA,EACA1lB,KAAAA,EACAomB,OAxRA,SAAAlnB,EAAA4lB,EAAAvmC,GACAugB,EAAAgB,YAAAZ,GACAc,EAAAd,EAAA4lB,EAAAvmC,GAEAshB,EAAAX,EAAA4lB,EAAAvmC,GAEA,OAAAkD,QAqRApI,EAAAmrC,GAAAA,IAEArrC,OAAA,2BACA,QACA,UACA,UACA,UACA,YACA,WACA,SACA,WACA,QACA,SAAAE,EAAA2gB,EAAAuI,EAAAqN,EAAAyH,EAAAtJ,EAAA0O,EAAA3d,EAAA0lB,GACA,IAUA6B,EAVAC,EAAA1rC,MAAAc,UAAA4qC,KACA9oC,EAAA5C,MAAAc,UAAA8B,KAGAM,GAFAlD,MAAAc,UAAA6hB,MACA3iB,MAAAc,UAAA0C,OACAxD,MAAAc,UAAAoC,OAEAnB,GADA/B,MAAAc,UAAA2C,IACAzD,MAAAc,UAAAiB,QACAjD,EAAAkB,MAAAc,UAAAhC,QACAsE,EAAApD,MAAAc,UAAAsC,QACAwJ,EAAA5M,MAAAc,UAAA8L,KAGA++B,EAAA,2CAEArsB,EAAAF,EAAAE,QACArf,EAAAmf,EAAAnf,YACAP,EAAA0f,EAAA1f,SACAoE,EAAAsb,EAAAtb,KACAzE,EAAA+f,EAAA/f,WAEAT,EAAAwgB,EAAAxgB,KAOAa,GANA2f,EAAAvf,QAEAuf,EAAAzf,SAEAyf,EAAA/e,WAEA+e,EAAA3f,UAEA2f,EAAAze,cAEAye,EAAAtc,QAEAsc,EAAA7c,QAEA6c,EAAAxJ,UAEAwJ,EAAAtJ,UACAqd,EAAAxI,SAEA,SAAAihB,EAAAt4B,EAAA/D,GACA,OAAA,WACA,IACAjJ,EAAApD,EAAA/D,KAAAoH,WACA/D,EAAA4c,EAAA3b,IAFAoD,KAEA,SAAA+c,EAAA7f,GACA,OAAAuP,EAAA1M,MAAA2I,GAAAqU,GAAApgB,OAAA8C,MAEA,OAAA4F,EAAApI,EAAAtB,KAIA,SAAAqpC,EAAAv4B,EAAA/D,EAAA+d,GACA,OAAA,SAAApZ,GAEAhR,EAAA/D,KAAAoH,WADA,IAEA/D,EAAAqE,KAAApD,IAAA,SAAAM,EAAA6f,GAEA,GAAAA,EAAAwN,cACA,OAAA9d,EAAA1M,MAAA2I,EAAA+d,GAAA1J,IAAAA,EAAA1P,MAGA,OAAAoZ,GAAApZ,EACA1R,EAAAT,OAAAmS,GAEA1R,GA4BA,SAAAspC,EAAAx4B,EAAA/D,GACA,OAAA,WACA,IACAjJ,EAAApD,EAAA/D,KAAAoH,WAIA,OAHAM,KAAAe,KAAA,SAAA7D,GACAuP,EAAA1M,MAAA2I,GAAA1I,MAAArD,OAAA8C,MAHAO,MASA,SAAAklC,EAAAz4B,EAAA/D,EAAAy8B,GACA,OAAA,SAAAC,GACA,IACA3lC,EAAApD,EAAA/D,KAAAoH,WAKA,OAJAzH,EAAAK,KAFA0H,KAEA,SAAA+c,EAAA7f,GACAub,EAAAsE,EAAAqoB,EAAAloC,EAAAioC,EAAApoB,IACAtQ,EAAA1M,MAAA2I,GAAAqU,EAAAqoB,GAAAzoC,OAAA8C,EAAApD,MAAA,OAJA2D,MAoBA,SAAAqlC,EAAA54B,EAAA/D,EAAAy8B,GACA,OAAA,SAAAjtC,EAAAO,GACA,IACAgH,EAAApD,EAAA/D,KAAAoH,WAEA,OAAA6Y,EAAAze,cAAA5B,IAAAqgB,EAAAhf,UAAAd,IACAR,EAAAK,KAJA0H,KAIA,SAAA+c,EAAA7f,GAEAioC,GACA1sB,EAAAsE,EAAAtkB,EAAAyE,EAAAioC,EAAApoB,EAAA7kB,IAIAuU,EAAA1M,MAAA2I,GAAAqU,GAAApgB,OAAA8C,MAXAO,MAAAA,KAeA,GACAyM,EAAA1M,MAAA2I,GAhBA1I,KAgBA,GAAA9H,SADA,GAQA,SAAAotC,EAAA74B,EAAA/D,EAAAy8B,GACA,OAAA,SAAA1sC,GAGA,OAAA8f,EAAAhf,UAAAd,IACAR,EAAAK,KAHA0H,KAGA,SAAA+c,EAAA7f,GACA,IAAAqoC,EAEAA,EADAJ,EACA1sB,EAAAsE,EAAAtkB,EAAAyE,EAAAioC,EAAApoB,IAEAtkB,EAEAgU,EAAA1M,MAAA2I,GAAAqU,EAAAwoB,MAVAvlC,MAAAA,KAcA,GACAyM,EAAA1M,MAAA2I,GAfA1I,KAeA,UADA,GAQA,IAojBAgjB,EApjBAwiB,EAAAjtB,EAAA/T,OACAhB,UAAA,aACArB,KAAA,SAAAkL,EAAA3E,GACA,IACAmH,EAAAoQ,EAAAvD,EAAAta,EAsDA,GApDAiL,IAHArN,KAIA0I,QAAAA,EAAAA,GAAAoY,EAAAE,MAEAnoB,EAAAwU,IANArN,KAQAqN,SAAAA,GAGAwC,EADA,MAAAxC,EAAAiC,OAAA,IAAA,MAAAjC,EAAAiC,OAAAjC,EAAAhU,OAAA,IAAAgU,EAAAhU,QAAA,GACA,KAAAgU,EAAA,MAEAy3B,EAAAxpB,KAAAjO,IAIAwC,EAAA,IAEAoQ,EAAAa,EAAAa,eAAAtU,GAEAkL,EAAAze,cAAA4O,KACAtG,EAAAsG,KAIAgU,EAAA4P,EAAAE,KAAA3c,EAAA,GAAAiR,EAAAD,SAAAnY,OAIAuX,GAAAvD,KAMAnE,EAAA1f,SAAA6P,KACAA,EAAA4jB,EAAA1D,KAAAlgB,IAGAuX,EAAAqM,EAAAnC,YAAAzhB,EAAA2E,KAKA4S,EAFA7mB,EAAAiU,GAEAA,GAGAA,IAOA4S,IAEAlkB,EAAAgE,MAzDAC,KAyDAigB,GAEA7d,GACA,IAAA,IAAAlK,KAAAkK,EAEAmW,EAAA/f,WAAAwH,KAAA9H,IACA8H,KAAA9H,GAAAkK,EAAAlK,IAEA8H,KAAAgX,KAAA9e,EAAAkK,EAAAlK,IAMA,OAvEA8H,QA2EAqF,EAAA,WACAu/B,EAAA,SAAA3rC,GACA,OAAAA,aAAAusC,GAEArjC,KAAA,SAAAkL,EAAA3E,GACA,OAAA,IAAA88B,EAAAn4B,EAAA3E,IAGA,IA/LA+D,EAAA/D,EAAA+d,EA+LAzD,EAAA,SAAA3V,EAAA3E,GACA,IAAAlQ,EAAA6U,GAIA,OAAAu3B,EAAAv3B,GACAA,EAEA3E,GAAAk8B,EAAAl8B,IAAA7P,EAAAwU,GACA3E,EAAAkgB,KAAAvb,GAEAlL,KAAAkL,EAAA3E,GATAktB,EAAAf,MAAA,WACAxnB,EAAA2V,MAYAA,EAAAjf,GAAAyhC,EAAAvrC,UACAse,EAAAzY,MAAAkjB,EAAAjf,IAGA1K,OAAA,EAEAuD,IAAA,SAAAmH,GACA,OAAAif,EAAA/lB,EAAAsb,EAAA3b,IAAAoD,KAAA,SAAAihB,EAAArlB,GACA,OAAAmI,EAAAzL,KAAA2oB,EAAArlB,EAAAqlB,QAIA5kB,MAAA,WACA,OAAA2mB,EAAA3mB,EAAA0D,MAAAC,KAAAN,aAGAzH,QAAA,WACA,OAAAA,EAAA8H,MAAAC,KAAAN,YAGA+G,IAAA,SAAAvJ,GACA,YAAAnC,IAAAmC,EAAAb,EAAA/D,KAAA0H,MAAAA,KAAA9C,GAAA,EAAAA,EAAAA,EAAA8C,KAAA3G,SAGAkD,QAAA,WACA,OAAAA,EAAAwD,MAAAC,KAAAN,YAGAqG,KAAA,WACA,OAAAA,EAAAhG,MAAAC,KAAAN,YAGA+lC,QAAA,WACA,OAAAppC,EAAA/D,KAAA0H,OAGA44B,KAAA,WACA,OAAA54B,KAAA3G,QAGA6N,OAAA+9B,EAAAnkB,EAAA5Z,OAAA4Z,GAEA/f,KAAA,SAAAjE,GAEA,OADAyb,EAAAxX,KAAAf,KAAAlD,GACAkD,MAGA9E,OAAA,SAAAmS,GACA,OAAA7U,EAAA6U,GAAArN,KAAAipB,IAAAjpB,KAAAipB,IAAA5b,IACA2V,EAAA9nB,EAAA5C,KAAA0H,KAAA,SAAAye,GACA,OAAA6N,EAAA/lB,QAAAkY,EAAApR,OAIApG,IAAA,SAAAoG,EAAA3E,GACA,OAAAsa,EAAA/lB,EAAA+C,KAAAylC,UAAA9oC,OAAAqmB,EAAA3V,EAAA3E,GAAA+8B,cAGAxiB,GAAA,SAAA5V,GACA,GAAArN,KAAA3G,OAAA,EAAA,CAEA,GAAAkf,EAAA1f,SAAAwU,GACA,OAAAw3B,EAAAvsC,KAFA0H,KAEA,SAAA+c,GACA,OAAAuP,EAAA/lB,QAAAwW,EAAA1P,KAEA,GAAAkL,EAAAnf,YAAAiU,GACA,OAAAw3B,EAAAvsC,KANA0H,KAMA,SAAA+c,GACA,OAAAxE,EAAAjc,QAAAygB,EAAA1P,IAAA,IAEA,GAAAkL,EAAA7f,WAAA2U,GACA,OAAAw3B,EAAAvsC,KAVA0H,KAUA,SAAA+c,GACA,OAAAA,GAAA1P,IAIA,OAAA,GAGA4b,IAAA,SAAA5b,GACA,IAAA4S,KACA,GAAAznB,EAAA6U,SAAAtS,IAAAsS,EAAA/U,KACA0H,KAAAe,KAAA,SAAA7D,GACAmQ,EAAA/U,KAAA0H,KAAA9C,IAAA+iB,EAAAlkB,KAAAiE,YAEA,CACA,IAAA0lC,EAAA,iBAAAr4B,EAAArN,KAAA9E,OAAAmS,GACAjU,EAAAiU,IAAA7U,EAAA6U,EAAAxR,MAAAQ,EAAA/D,KAAA+U,GAAA2V,EAAA3V,GACArN,KAAA/H,QAAA,SAAAgpB,GACAykB,EAAAnpC,QAAA0kB,GAAA,GAAAhB,EAAAlkB,KAAAklB,KAGA,OAAA+B,EAAA/C,IAGAjhB,IAAA,SAAAqO,GACA,OAAArN,KAAA9E,OAAA,WACA,OAAAtC,EAAAyU,GACAyT,EAAAF,SAAA5gB,KAAAqN,GACA2V,EAAAhjB,MAAA4oB,KAAAvb,GAAAurB,UAIAr6B,GAAA,SAAArB,GACA,OAAA,IAAAA,EAAA8C,KAAA3D,MAAAa,GAAA8C,KAAA3D,MAAAa,GAAAA,EAAA,IAGAhB,MAAA,WACA,OAAA8D,KAAAzB,GAAA,IAGAkoB,KAAA,WACA,OAAAzmB,KAAAzB,IAAA,IAGAqqB,KAAAoc,EAAA1Y,EAAAnC,YAAAmC,GAEApJ,QAAA8hB,EAAA1Y,EAAApJ,QAAAoJ,GAaAqZ,QAAAX,EAAA1Y,EAAAtC,UAAAsC,GAEAsZ,cAjVAn5B,EAiVA6f,EAAAtC,UAjVAthB,EAiVA4jB,EAhVA,SAAAuZ,EAAAx4B,GAEAhR,EAAA/D,KAAAoH,gBACA3E,IAAAsS,IACAA,EAAAw4B,EACAA,OAAA9qC,GAEA,IAAAY,EAAAqE,KAAApD,IAAA,SAAAM,EAAA6f,GAEA,GAAAA,EAAAwN,cACA,OAAA9d,EAAA1M,MAAA2I,EAAA+d,GAAA1J,EAAA8oB,IAAA9oB,EAAA1P,EAAAw4B,MAGA,OAAApf,GAAApZ,EACA1R,EAAAT,OAAAmS,GAEA1R,IAmUA0G,OAAA2iC,EAAA1Y,EAAAjqB,OAAAiqB,GAEAxI,SAAAkhB,EAAA1Y,EAAAxI,SAAAwI,GAEA/K,SAAAwjB,EAAAjkB,EAAAS,SAAAT,GAEAmB,MAAAgjB,EAAAnkB,EAAAmB,MAAAnB,GAGAoN,MAAA,SAAArQ,GACA,OAAAtF,EAAA3b,IAAAoD,KAAA,SAAAihB,GACA,OAAAA,EAAApD,MAIAioB,UAAA,SAAAC,GACA,IAAA5hC,EAAA6e,EAAA+iB,GAEA,OADA5hC,EAAA6hC,WAAAhmC,KACAmE,GAGA8hC,YAAA,SAAAC,GACA,OAAAlmC,KAAA6H,OAAAq+B,GAAAh/B,UAGAi/B,KAAA,SAAAC,GACA,IAAA35B,EAAAjU,EAAA4tC,GACA,GAAApmC,KAAA,KAAAyM,EACA,IAAA7U,EAAAorB,EAAAojB,GAAA3/B,IAAA,GACA/F,EAAA9I,EAAAinB,YAAA7e,KAAA3G,OAAA,EAEA,OAAA2G,KAAAe,KAAA,SAAAvF,GACAwnB,EAAAhjB,MAAAqmC,QACA55B,EAAA25B,EAAA9tC,KAAA0H,KAAAxE,GACAkF,EAAA9I,EAAAuoB,WAAA,GAAAvoB,MAKAyuC,QAAA,SAAAC,GACA,GAAAtmC,KAAA,GAAA,CAEA,IAAA8jB,EAEA,IAHAd,EAAAhjB,KAAA,IAAA6H,OAAAy+B,EAAAtjB,EAAAsjB,KAGAxiB,EAAAwiB,EAAAxiB,YAAAzqB,QACAitC,EAAAxiB,EAAA5nB,QAEA8mB,EAAAsjB,GAAAlmB,OAAApgB,MAEA,OAAAA,MAGAumC,UAAA,SAAAD,GACA,IAAA75B,EAAAjU,EAAA8tC,GACA,OAAAtmC,KAAAe,KAAA,SAAAvF,GACA,IAAAsO,EAAAkZ,EAAAhjB,MACAuhB,EAAAzX,EAAAyX,WACA3pB,EAAA6U,EAAA65B,EAAAhuC,KAAA0H,KAAAxE,GAAA8qC,EACA/kB,EAAAloB,OAAAkoB,EAAA8kB,QAAAzuC,GAAAkS,EAAAsW,OAAAxoB,MAIAutB,OAAA,SAAA9X,GAWA,OAVA,IAAArN,KAAAqC,SAAAyhB,WAAAzqB,OAEA2G,KAAAqC,OAAAgL,GAAA4b,IAAA,QAAAloB,KAAA,WACAiiB,EAAAhjB,MAAAimC,YAAAx1B,SAAAuR,eAAAhiB,KAAA0hB,WAAA,GAAAiN,gBAGA3uB,KAAAqC,SAAAtB,KAAA,WACAiiB,EAAAhjB,MAAAimC,YAAAjjB,EAAAhjB,MAAA8jB,cAGA9jB,MAGAU,MAAA,WACA,OAAAV,KAAApD,IAAA,WACA,OAAAoD,KAAAmgB,WAAA,MAIA/B,KAAA6mB,EAAAlC,EAAA3kB,KAAA2kB,GAEA4B,OAAA,SAAA9N,GACA,OAAA72B,KAAAe,KAAA,WACA,IAAAkgB,EAAA+B,EAAAhjB,YACAjF,IAAA87B,EAAA,QAAA5V,EAAArD,IAAA,WAAAiZ,GAAA5V,EAAA1C,OAAA0C,EAAA7C,UAIA1G,KAAA,SAAArK,GACA,OAAA2V,EAAAhjB,KAAAkuB,MAAA,2BAAAhzB,OAAAmS,GAAA,MAGAm5B,QAAAxB,EAAA1Y,EAAA7B,gBAAA6B,GAEAxkB,KAAA,SAAAuF,GACA,OAAA2V,EAAAhjB,KAAAkuB,MAAA,uBAAAhzB,OAAAmS,GAAA,MAGAo5B,QAAAzB,EAAA1Y,EAAA1B,aAAA0B,GAEAxB,SAAAka,EAAA1Y,EAAAxB,SAAAwB,GAEA1a,KAAA0zB,EAAAxkB,EAAAlP,KAAAkP,EAAAA,EAAAlP,MAEAC,KAAAyzB,EAAAnX,EAAAtc,KAAAsc,EAAAA,EAAAtc,MAEAmF,KAAAquB,EAAAlX,EAAAnX,KAAAmX,EAAAA,EAAAnX,MAEAsX,WAAA2W,EAAA9W,EAAAG,WAAAH,GAEAtsB,KAAAwjC,EAAAlX,EAAAtsB,KAAAssB,EAAAA,EAAAtsB,MAEA4sB,WAAAwW,EAAA9W,EAAAM,WAAAN,GAEAxnB,KAAA0+B,EAAAlX,EAAAxnB,KAAAwnB,EAAAA,EAAAxnB,MAEA6nB,WAAAyW,EAAA9W,EAAAK,WAAAL,GAEAlX,IAAAquB,EAAAnX,EAAAlX,IAAAkX,EAAAA,EAAAlX,KAEAxa,OAAA6oC,EAAAtK,EAAAb,aAAAa,EAAAA,EAAAb,cAEAnf,MAAAqqB,EAAAhoB,EAAAO,IAAAP,GAEAO,IAAAynB,EAAAhoB,EAAAO,IAAAP,GAEA7hB,MAAA,SAAAuhB,GACA,OAAAA,EACA/c,KAAAzD,QAAAymB,EAAAjG,GAAA,IAEA/c,KAAAqC,SAAAyhB,WAAAvnB,QAAAyD,KAAA,KAKAme,SAhbA,SAAA1R,EAAA/D,GACA,OAAA,WACA,IACAjJ,EAAApD,EAAA/D,KAAAoH,WACA,OAAAmlC,EAAAvsC,KAFA0H,KAEA,SAAA+c,GACA,OAAAtQ,EAAA1M,MAAA2I,GAAAqU,GAAApgB,OAAA8C,OA2aAinC,CAAArpB,EAAAc,SAAAd,GAGAG,SAAA0nB,EAAA7nB,EAAAG,SAAAH,EAAAA,EAAA/c,WAGAge,YAAA4mB,EAAA7nB,EAAAiB,YAAAjB,EAAAA,EAAA/c,WAGA0e,YAAAkmB,EAAA7nB,EAAA2B,YAAA3B,EAAAA,EAAA/c,WAEAq6B,UAAA2K,EAAAtK,EAAAL,UAAAK,GAEAT,WAAA+K,EAAAtK,EAAAT,WAAAS,GAEA1W,SAAA,SAAA/hB,GACA,GAAAvC,KAAA3G,OAAA,CAEA,GAAAkJ,EAKA,OAJAA,EAAAq8B,IAAAr8B,EAAAq8B,GAAAvlC,UACAkJ,EAAAgW,EAAA7X,MAAA6B,IACAq8B,GAAAr8B,EAAAq8B,GAAA,IAEA5+B,KAAAe,KAAA,WACAi6B,EAAAwD,MAAAx+B,KAAAuC,KAGA,IAAAwa,EAAA/c,KAAA,GAEA,OAAAg7B,EAAAtC,iBAAA3b,KAKAsG,aAAA0hB,EAAA/J,EAAA3X,aAAA2X,KAIAhY,EAAAjf,GAAA4iC,OAAA3jB,EAAAjf,GAAAmD,OAEA8b,EAAAjf,GAAAgvB,MAAA,SAAA6T,EAAAC,GACA,OAAA7mC,KAAA2xB,WAAAiV,GAAAhV,WAAAiV,GAAAD,IAGA5jB,EAAAjf,GAAA60B,KAAA0M,EAAAtK,EAAApC,KAAAoC,GAEAhY,EAAAjf,GAAA0gB,MAAA6gB,EAAAtK,EAAAvW,MAAAuW,EAAAA,EAAAvW,OAEAzB,EAAAjf,GAAA2gB,OAAA4gB,EAAAtK,EAAAtW,OAAAsW,EAAAA,EAAAtW,QAEA1B,EAAAjf,GAAA80B,WAAAyM,EAAAtK,EAAAnC,WAAAmC,EAAAnC,aAEA,QAAA,UAAA5gC,QAAA,SAAA6gC,GACA,IAAAgO,EAAAhO,EAAA76B,QAAA,IAAA,SAAA8oC,GACA,OAAAA,EAAA,GAAA/3B,gBAGAgU,EAAAjf,GAAA,QAAA+iC,GAAA,SAAAE,EAAAvuC,GAWA,GAVAiH,UAAArG,OACA,kBAAA2tC,IACAvuC,EAAAuuC,EACAA,GAAA,IAGAA,GAAA,EACAvuC,OAAAsC,QAGAA,IAAAtC,EAAA,CACA,IAAAwoB,EAAAjhB,KAAA,GACA,IAAAihB,EACA,OAEA,IAAAgmB,EAAAjM,EAAApC,KAAA3X,GACA,GAAA+lB,EAAA,CACA,IAAAlN,EAAAkB,EAAAxC,cAAAvX,GACAgmB,EAAAxiB,MAAAwiB,EAAAxiB,MAAAqV,EAAAtV,KAAAsV,EAAAtE,MACAyR,EAAAviB,OAAAuiB,EAAAviB,OAAAoV,EAAAvV,IAAAuV,EAAAjC,OAEA,MAAA,UAAAiB,EAAAmO,EAAAxiB,MAAAwiB,EAAAviB,OAEA,OAAA1kB,KAAAe,KAAA,SAAA7D,EAAA+jB,GACA,IAAAimB,KACApN,EAAAkB,EAAAxC,cAAAvX,GACA,UAAA6X,GACAoO,EAAAziB,MAAAhsB,EACAuuC,IACAE,EAAAziB,MAAAyiB,EAAAziB,MAAAqV,EAAAtV,KAAAsV,EAAAtE,SAGA0R,EAAAxiB,OAAAjsB,EACAuuC,IACAE,EAAAxiB,OAAAwiB,EAAAxiB,OAAAoV,EAAAvV,IAAAuV,EAAAjC,SAGAmD,EAAApC,KAAA3X,EAAAimB,QAOAlkB,EAAAjf,GAAA+2B,WAAAwK,EAAAtK,EAAArD,YAAAqD,EAAAA,EAAArD,aAEA3U,EAAAjf,GAAAg3B,YAAAuK,EAAAtK,EAAAjC,aAAAiC,EAAAA,EAAAjC,cAEAjY,EAAAiE,SAEA,SAAAoiB,EAAA16B,EAAA/D,EAAAy8B,GACA,OAAA,SAAAvzB,GACA,IAAAw1B,EAAAnnB,EAAA1H,EAAA3b,IAAA8C,UAAA,SAAAwB,GAEA,MAAA,WADAkmC,EAAArvC,EAAAmJ,KACA,SAAAkmC,GAAA,MAAAlmC,EACAA,EAAA4f,EAAAa,eAAAzgB,KAEA,OAAA+e,EAAA5mB,OAAA,EACA2G,MAEAA,KAAAe,KAAA,SAAA7D,GACAuP,EAAA1M,MAAA2I,GAAA1I,KAAAigB,EAAA/iB,EAAA,MAEA8C,OAmEA,OA9DAgjB,EAAAjf,GAAAiE,MAAAm/B,EAAArmB,EAAA9Y,MAAA8Y,GAEAkC,EAAAjf,GAAA4f,QAAAwjB,EAAArmB,EAAA6C,QAAA7C,GAEAkC,EAAAjf,GAAA8D,OAAAs/B,EAAArmB,EAAAjZ,OAAAiZ,GAEAkC,EAAAjf,GAAAqc,OAAA+mB,EAAArmB,EAAAV,OAAAU,GAGAvI,EAAAxX,MACAsmC,SAAA,SACAC,UAAA,UACA5jB,aAAA,SACA6jB,YAAA,QACAC,WAAA,eACA,SAAAtvC,EAAAuvC,GACAzkB,EAAAjf,GAAA7L,GAAA,SAAAmV,GAOA,IANA,IAAAq6B,EACAvjC,KACAwjC,EAAA3kB,EAAA3V,GACAoZ,EAAAkhB,EAAAtuC,OAAA,EACAuC,EAAA,EAEAA,GAAA6qB,EAAA7qB,IACA8rC,EAAA9rC,IAAA6qB,EAAAzmB,KAAAA,KAAAU,OAAA,GACAsiB,EAAA2kB,EAAA/rC,IAAA6rC,GAAAC,GAIA3rC,EAAAgE,MAAAoE,EAAAujC,EAAAjhC,OAGA,OAAAzG,KAAA8lC,UAAA3hC,MA8BA6e,EAneA,GA8qBA,OAxMAA,EAgEA3d,GA/DAtB,GAAAoJ,GAAA83B,EAAArP,EAAAzoB,GAAAyoB,GAEA5S,EAAAjf,GAAA2K,IAAAu2B,EAAArP,EAAAlnB,IAAAknB,GAEA5S,EAAAjf,GAAAyJ,QAAAy3B,EAAArP,EAAApoB,QAAAooB,GAEA,qMAEA59B,MAAA,KAAAC,QAAA,SAAA+V,GACAgV,EAAAjf,GAAAiK,GAAA,SAAArH,EAAA7J,GACA,OAAA,KAAA4C,UACAM,KAAAmN,GAAAa,EAAArH,EAAA7J,GACAkD,KAAAwN,QAAAQ,MAIAgV,EAAAjf,GAAAuJ,IAAA,SAAAU,EAAAX,EAAA1G,EAAA7J,GAYA,OAXAyb,EAAA1f,SAAAwU,IAAAkL,EAAA/f,WAAAsE,KACAA,EAAA6J,EACAA,EAAA0G,EACAA,EAAA,MAGAkL,EAAA/f,WAAAmO,KACA7J,EAAA6J,EACAA,EAAA,MAGA3G,KAAAmN,GAAAa,EAAAX,EAAA1G,EAAA7J,EAAA,IAGAkmB,EAAAjf,GAAAo+B,QAAA8C,EAAAlC,EAAAZ,QAAAY,GACA/f,EAAAjf,GAAAsgC,qBAAAY,EAAAlC,EAAAsB,qBAAAtB,GAEA/f,EAAAjf,GAAAwa,KAAA0mB,EAAAlC,EAAAxkB,KAAAwkB,GACA/f,EAAAjf,GAAAqa,KAAA6mB,EAAAlC,EAAA3kB,KAAA2kB,GACA/f,EAAAjf,GAAA6jC,OAAA3C,EAAAlC,EAAA6E,OAAA7E,GACA/f,EAAAjf,GAAA4/B,OAAAsB,EAAAlC,EAAAY,OAAAZ,GACA/f,EAAAjf,GAAA6/B,OAAAqB,EAAAlC,EAAAa,OAAAb,GACA/f,EAAAjf,GAAA8/B,QAAAoB,EAAAlC,EAAAc,QAAAd,GACA/f,EAAAjf,GAAAwgC,WAAAU,EAAAlC,EAAAwB,WAAAxB,GAEA/f,EAAAjf,GAAA+/B,UAAAmB,EAAAlC,EAAAe,UAAAf,GACA/f,EAAAjf,GAAA2gC,YAAAO,EAAAlC,EAAA2B,YAAA3B,GACA/f,EAAAjf,GAAAkgC,QAAAgB,EAAAlC,EAAAkB,QAAAlB,GAEA/f,EAAAjf,GAAA8jC,aAAA,SAAAC,GACA,IAAAxjB,EAAAtkB,KAAA4d,IAAA,YACAmqB,EAAA,aAAAzjB,EACA0jB,EAAAF,EAAA,uBAAA,gBACAD,EAAA7nC,KAAA2lC,UAAAzqC,OAAA,WACA,IAAAmH,EAAA2gB,EAAAhjB,MACA,QAAA+nC,GAAA,WAAA1lC,EAAAub,IAAA,cAGAoqB,EAAA7pC,KAAAkE,EAAAub,IAAA,YAAAvb,EAAAub,IAAA,cACAvb,EAAAub,IAAA,iBACArf,GAAA,GAEA,MAAA,UAAA+lB,GAAAujB,EAAAxuC,OAEAwuC,EADA7kB,EAAAhjB,KAAA,GAAAid,eAAAxM,WAMA,SAAAuS,GACAA,EAAAjf,GAAA8X,IAAA,WACA,OAAA7b,KAAAgmC,YAAAhjB,KAGAA,EAAAjf,GAAAkkC,QAAA,WACA,OAAAjoC,KAAAiH,IAAAjH,KAAAgmC,YAAAhjB,MAGAA,EAAAjf,GAAAmkC,QAAA,SAAA76B,GACA,OAAArN,KAAAgmC,WACA34B,EACArN,KAAAiH,IAAAjH,KAAAgmC,WAAA9qC,OAAAmS,IAEArN,KAAAiH,IAAAjH,KAAAgmC,YAGAhmC,MAIA,6EAAAhI,MAAA,KAAAC,QAAA,SAAA4lB,GACA,IAAA9Z,EAAAif,EAAAjf,GAAA8Z,GACAmF,EAAAjf,GAAA8Z,GAAA,WACA,IAAA1Z,EAAAJ,EAAAhE,MAAAC,KAAAN,WAEA,OADAyE,EAAA6hC,WAAAhmC,KACAmE,KA1BA,CA6BAkB,GAGA,SAAA2d,GAuEA,IACAmlB,EAvEAnlB,EAAAjf,GAAAsB,MAAA2d,EAAAjf,GAAA6kB,KAEA5F,EAAAjf,GAAAqkC,MAAA,SAAA5kB,EAAAc,GAwBA,OALA/L,EAAA1f,SAAA2qB,GACAA,EAAA8I,EAAAhC,WAAA9G,GACAohB,EAAAphB,KACAA,EAAAA,EAAA,IAEAxjB,KAAAe,KAAA,SAAAnF,EAAA8gB,GACA,OAAA4H,GACA,IAAA,SACAxD,EAAAjZ,OAAA2b,EAAA9G,GACA,MACA,IAAA,QACAoE,EAAA9Y,MAAAwb,EAAA9G,GACA,MACA,IAAA,UACAoE,EAAA7iB,QAAAulB,EAAA9G,GACA,MACA,IAAA,OACAoE,EAAAmB,MAAAuB,GACA1C,EAAAV,OAAAoD,EAAA9G,GACA,MACA,IAAA,QACAoE,EAAA6C,QAAAH,EAAA9G,GACA,MAEA,QACAoE,EAAAV,OAAAoD,EAAA9G,OAKAsG,EAAAjf,GAAAskC,WAAA,SAAAC,EAAAhkB,GAIA,OAHAgkB,EAAA54B,WACA44B,EAAA/vB,EAAA9I,WAAA64B,EAAA54B,SAAA44B,IAEAtoC,KAAAogB,OAAAkoB,IAGAtlB,EAAAjf,GAAAwkC,aAAA,SAAAC,EAAAC,GAGA,OAFAzoC,KAAAse,YAAAmqB,GACAzoC,KAAAwd,SAAAgrB,GACAxoC,MAGAgjB,EAAAjf,GAAAwkC,aAAA,SAAAC,EAAAC,GAGA,OAFAzoC,KAAAse,YAAAmqB,GACAzoC,KAAAwd,SAAAgrB,GACAxoC,MAGAgjB,EAAAjf,GAAA2kC,kBACAP,EAAA,kBAAA13B,SAAAC,cAAA,OACA,cACA,YAEA,WACA,OAAA1Q,KAAAmN,GAAAg7B,EAAA,uBAAA,SAAAn6B,GACAA,EAAAihB,qBAKAjM,EAAAjf,GAAA4kC,gBAAA,WACA,OAAA3oC,KAAA0O,IAAA,yBApFA,CAwFArJ,GAEAA,EAAAtB,GAAA6kC,OAAA,SAAA1wC,EAAAqK,GACA,IAAA/C,EAAAnD,EAAA/D,KAAAoH,UAAA,GACAoK,EAAA9J,KACA6oC,EAAA7oC,KAKA,OAHAA,KAAAe,KAAA,WACA8nC,EAAAC,QAAAC,YAAAhpC,MAAA+J,GAAA9J,KAAA9H,GAAAyE,OAAA6C,MAEAqpC,GAGAjxC,EAAAyN,MAAAA,IAGA3N,OAAA,4BACA,QACA,UACA,YACA,UACA,WACA,SACA,WACA,UACA,eACA,WACA,SAAAE,EAAA2gB,EAAAqd,EAAA9U,EAAAwL,EAAA0O,EAAA3d,EAAA8Q,EAAAoT,EAAAve,GAEA,SAAAgmB,EAAAC,GACA1wB,EAAAvf,QAAAiwC,KACAA,GAAAA,IAEA,IAAAC,EAAAD,EAAA5vC,OACA8vC,EAAA,EACAC,EAAA,EACAC,EAAA,EACA/+B,EAAA,IAAAiO,EAAAxT,SAGA,SAAAuM,IAEAhH,EAAAL,SACA/E,MAAAgkC,EACAI,UAAAF,EACAG,SAAAF,EACAJ,KAAAA,IAIA,SAAAn+B,EAAA+X,EAAA2mB,GAEAL,IACAK,EACAJ,IAEAC,IAIA/+B,EAAAQ,UACA+X,IAAAA,EACA2mB,SAAAA,EACAC,WAAAN,EACAjkC,MAAAgkC,EACAD,KAAAA,IAIAE,GAAAD,GACA53B,IA8BA,OAHAiH,EAAA1P,MAvBA,WACA,IAAAogC,EAAA5vC,OAEA,YADAiY,IAIA23B,EAAAhxC,QAAA,SAAA4qB,GACA6mB,EAAA7mB,GACA/X,EAAA+X,EAAA2mB,EAAA3mB,IAEA+S,EAAAzoB,GAAA0V,GACAoP,KAAA,WACAnnB,EAAA+X,GAAA,IAGAxX,MAAA,WACAP,EAAA+X,GAAA,UASAvY,EAAAN,QAAAk/B,WAAAA,EACA5+B,EAAAN,QAIA,SAAA0/B,EAAA7mB,GACA,OAAAA,EAAAvR,eAAAvW,IAAA8nB,EAAA8mB,aAGA,SAAAH,EAAA3mB,GACA,OAAAA,EAAAvR,UAAA,IAAAuR,EAAA8mB,aAGA,SAAAC,EAAAnsB,EAAAlb,GACA,IAAA0mC,KAIA,SAAAY,EAAAC,GAEA,IACAvjC,EADA,0BACA+U,KAAA+B,EAAAO,IAAAksB,EAAA,qBACAt5B,EAAAjK,GAAAA,EAAA,GACA,GAAAiK,EAAA,CACA,IAAAqS,EAAA,IAAAknB,MACAlnB,EAAAliB,IAAA6P,EACAy4B,EAAAltC,KAAA8mB,IAKA,GAfAtgB,EAAAA,MAeA,OAAAkb,EAAAe,SACAyqB,EAAAltC,KAAA0hB,OACA,CAIA,IAFA,IAAAusB,EAAA1d,EAAAI,QAAAjP,EAAA,OAEA7hB,EAAA,EAAAA,EAAAouC,EAAA3wC,OAAAuC,IACAqtC,EAAAltC,KAAAiuC,EAAApuC,IAIA,IAAA,IAAA2G,EAAA0nC,WACAJ,EAAApsB,QACA,GAAA,iBAAAlb,EAAA0nC,WAAA,CACA,IAAAnmB,EAAAwI,EAAAI,QAAAjP,EAAAlb,EAAA0nC,YACA,IAAAruC,EAAA,EAAAA,EAAAkoB,EAAAzqB,OAAAuC,IACAiuC,EAAA/lB,EAAAloB,KAKA,OAAAotC,EAAAC,GAwBA,SAAAiB,EAAAjpB,EAAA1e,GACA,IAAAsgB,EACA7H,KACA6d,EAAAmC,EAAAnC,WAAA5X,GACAkpB,EAAA5nC,EAAAqnC,OACArnC,EAAAgnC,SAEA,SAAAa,IACA/sB,EAAAO,IAAAiF,GACA0B,KAAAsU,EAAAnU,OAAA7B,EAAA2W,cAAA,EAAA,KACAhV,MAAAqU,EAAApU,MAAA5B,EAAAyG,aAAA,EAAA,OAGAiY,EAAAxX,MAAAlH,GAEAxF,EAAAO,IAAAiF,GACAkhB,WAAA,YAGAoG,GACAA,IAIA,SAAAE,KA4BA,SAAAC,EAAA95B,GACAqS,EAAA7H,MAAA+oB,WAAA,SACAlhB,EAAAliB,IAAA6P,GA3BA,WAEA,aADAwK,EAAAqC,EAAAO,IAAAqD,GAAA,WAAA,cACAqD,UAAA,YAAAtJ,EAAAsJ,UACAjH,EAAAO,IAAAqD,EAAA,WAAA,YAEA5D,EAAAO,IAAAqD,EAAA,WAAA,UAEA4B,EAAA,IAAAknB,MAEA1sB,EAAAO,IAAAiF,GACAyB,SAAA,WACAimB,OAAA,EAAAC,QAAA,EAAAxD,OAAA,EAAAviB,MAAA,OAAAC,OAAA,OACAqf,WAAA,WAGAlhB,EAAAunB,OAAAA,EACAvnB,EAAAwnB,QAAAA,EAEAvpB,EAAAV,OAAAa,EAAA4B,GAEAtgB,EAAAiO,KACA85B,EAAA/nC,EAAAiO,KAeAi6B,GAEA,IAAAtmC,GACA8tB,KAAAqY,EACAI,QAVA,WACA5pB,EAAA5Z,OAAA2b,GACAxF,EAAAO,IAAAqD,EAAAjG,GACA6H,EAAAA,EAAAunB,OAAAvnB,EAAAwnB,QAAA,OAoBA,OAVA,WAAA,aAAA,SAAA,OAAA,QAAA,QAAA,OAAA,SAAA,UAAA,SAAApyC,QACA,SAAAC,GACAiM,EAAAjM,GAAA,WACA,IAAAsH,EAAA+Y,EAAA/b,UAAAkD,WACAF,EAAAoD,QAAAigB,GACA0e,EAAArpC,GAAA6H,MAAA,KAAAP,MAKA2E,EAOA,SAAAwmC,IACA,OAAAA,EAyBA,OAtHA3nB,EAAAjf,GAAA6mC,aAAA,SAAAroC,GACA,OAAAqnC,EAAA5pC,KAAAuC,IAuFAygB,EAAAjf,GAAA8mC,aAAA,SAAAtoC,GACA,OAAA2nC,EAAAlqC,KAAAuC,IAOAooC,EAAAh7B,UAAA,SAAAsR,EAAA1e,MAGA,WAAA,aAAA,SAAA,OAAA,QAAA,QAAA,OAAA,SAAA,UAAA,SAAAtK,QACA,SAAAC,GACAyyC,EAAAh7B,UAAAzX,GAAAqpC,EAAArpC,KAKAqgB,EAAAzY,MAAA6qC,GACAjB,YAAAA,EAEAF,SAAAA,EAEAI,OAAAA,EAEAkB,QAjIA,SAAAC,EAAAxoC,GACAgW,EAAA1f,SAAAkyC,KACAA,GAAAA,IAEA,IAAAJ,KAQA,OANAI,EAAA9yC,QAAA,SAAAuY,GACA,IAAAqS,EAAA,IAAAknB,MACAlnB,EAAAliB,IAAA6P,EACAm6B,EAAA5uC,KAAA8mB,KAGAmmB,EAAA2B,IAuHAT,OAAAA,IAGAtyC,EAAA+yC,OAAAA,IAGAjzC,OAAA,+BACA,4BACA,SAAAizC,GACA,OAAAA,IAEAjzC,OAAA,6BACA,YACA,SAAAizC,GACA,OAAAA,IAEAjzC,OAAA,wBAAA,6BAAA,SAAAszC,GAAA,OAAAA","file":"../skylark-utils-imagex-all.js","sourcesContent":["define('skylark-langx/skylark',[], function() {\r\n    var skylark = {\r\n\r\n    };\r\n    return skylark;\r\n});\r\n\ndefine('skylark-utils-dom/skylark',[\"skylark-langx/skylark\"], function(skylark) {\r\n    return skylark;\r\n});\r\n\ndefine('skylark-utils-dom/dom',[\"./skylark\"], function(skylark) {\r\n\treturn skylark.dom = {};\r\n});\r\n\ndefine('skylark-langx/types',[\r\n],function(){\r\n    var toString = {}.toString;\r\n    \r\n    var type = (function() {\r\n        var class2type = {};\r\n\r\n        // Populate the class2type map\r\n        \"Boolean Number String Function Array Date RegExp Object Error Symbol\".split(\" \").forEach(function(name) {\r\n            class2type[\"[object \" + name + \"]\"] = name.toLowerCase();\r\n        });\r\n\r\n        return function type(obj) {\r\n            return obj == null ? String(obj) :\r\n                class2type[toString.call(obj)] || \"object\";\r\n        };\r\n    })();\r\n\r\n    function isArray(object) {\r\n        return object && object.constructor === Array;\r\n    }\r\n\r\n\r\n    /**\r\n     * Checks if `value` is array-like. A value is considered array-like if it's\r\n     * not a function/string/element and has a `value.length` that's an integer greater than or\r\n     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\r\n     *\r\n     * @category Lang\r\n     * @param {*} value The value to check.\r\n     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\r\n     * @example\r\n     *\r\n     * isArrayLike([1, 2, 3])\r\n     * // => true\r\n     *\r\n     * isArrayLike(document.body.children)\r\n     * // => false\r\n     *\r\n     * isArrayLike('abc')\r\n     * // => true\r\n     *\r\n     * isArrayLike(Function)\r\n     * // => false\r\n     */    \r\n    function isArrayLike(obj) {\r\n        return !isString(obj) && !isHtmlNode(obj) && typeof obj.length == 'number' && !isFunction(obj);\r\n    }\r\n\r\n    /**\r\n     * Checks if `value` is classified as a boolean primitive or object.\r\n     *\r\n     * @param {*} value The value to check.\r\n     * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.\r\n     * @example\r\n     *\r\n     * isBoolean(false)\r\n     * // => true\r\n     *\r\n     * isBoolean(null)\r\n     * // => false\r\n     */\r\n    function isBoolean(obj) {\r\n        return typeof(obj) === \"boolean\";\r\n    }\r\n\r\n    function isDefined(obj) {\r\n        return typeof obj !== 'undefined';\r\n    }\r\n\r\n    function isDocument(obj) {\r\n        return obj != null && obj.nodeType == obj.DOCUMENT_NODE;\r\n    }\r\n\r\n    function isEmptyObject(obj) {\r\n        var name;\r\n        for (name in obj) {\r\n            if (obj[name] !== null) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n\r\n    /**\r\n     * Checks if `value` is classified as a `Function` object.\r\n     *\r\n     * @param {*} value The value to check.\r\n     * @returns {boolean} Returns `true` if `value` is a function, else `false`.\r\n     * @example\r\n     *\r\n     * isFunction(parseInt)\r\n     * // => true\r\n     *\r\n     * isFunction(/abc/)\r\n     * // => false\r\n     */\r\n    function isFunction(value) {\r\n        return type(value) == \"function\";\r\n    }\r\n\r\n    function isHtmlNode(obj) {\r\n        return obj && (obj instanceof Node);\r\n    }\r\n\r\n    function isInstanceOf( /*Object*/ value, /*Type*/ type) {\r\n        //Tests whether the value is an instance of a type.\r\n        if (value === undefined) {\r\n            return false;\r\n        } else if (value === null || type == Object) {\r\n            return true;\r\n        } else if (typeof value === \"number\") {\r\n            return type === Number;\r\n        } else if (typeof value === \"string\") {\r\n            return type === String;\r\n        } else if (typeof value === \"boolean\") {\r\n            return type === Boolean;\r\n        } else if (typeof value === \"string\") {\r\n            return type === String;\r\n        } else {\r\n            return (value instanceof type) || (value && value.isInstanceOf ? value.isInstanceOf(type) : false);\r\n        }\r\n    }\r\n\r\n    function isNull(value) {\r\n      return type(value) === \"null\";\r\n    }\r\n\r\n    function isNumber(obj) {\r\n        return typeof obj == 'number';\r\n    }\r\n\r\n    function isObject(obj) {\r\n        return type(obj) == \"object\";\r\n    }\r\n\r\n    function isPlainObject(obj) {\r\n        return isObject(obj) && !isWindow(obj) && Object.getPrototypeOf(obj) == Object.prototype;\r\n    }\r\n\r\n    function isString(obj) {\r\n        return typeof obj === 'string';\r\n    }\r\n\r\n    function isWindow(obj) {\r\n        return obj && obj == obj.window;\r\n    }\r\n\r\n    function isSameOrigin(href) {\r\n        if (href) {\r\n            var origin = location.protocol + '//' + location.hostname;\r\n            if (location.port) {\r\n                origin += ':' + location.port;\r\n            }\r\n            return href.startsWith(origin);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Checks if `value` is classified as a `Symbol` primitive or object.\r\n     *\r\n     * @param {*} value The value to check.\r\n     * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\r\n     * @example\r\n     *\r\n     * _.isSymbol(Symbol.iterator);\r\n     * // => true\r\n     *\r\n     * _.isSymbol('abc');\r\n     * // => false\r\n     */\r\n    function isSymbol(value) {\r\n      return typeof value == 'symbol' ||\r\n        (isObjectLike(value) && objectToString.call(value) == symbolTag);\r\n    }\r\n\r\n    function isUndefined(value) {\r\n      return value === undefined\r\n    }\r\n\r\n    return {\r\n\r\n        isArray: isArray,\r\n\r\n        isArrayLike: isArrayLike,\r\n\r\n        isBoolean: isBoolean,\r\n\r\n        isDefined: isDefined,\r\n\r\n        isDocument: isDocument,\r\n\r\n        isEmpty : isEmptyObject,\r\n\r\n        isEmptyObject: isEmptyObject,\r\n\r\n        isFunction: isFunction,\r\n\r\n        isHtmlNode: isHtmlNode,\r\n\r\n        isNull: isNull,\r\n\r\n        isNumber: isNumber,\r\n\r\n        isObject: isObject,\r\n\r\n        isPlainObject: isPlainObject,\r\n\r\n        isString: isString,\r\n\r\n        isSameOrigin: isSameOrigin,\r\n\r\n        isSymbol : isSymbol,\r\n\r\n        isUndefined: isUndefined,\r\n\r\n        isWindow: isWindow,\r\n\r\n        type: type\r\n    };\r\n\r\n});\ndefine('skylark-langx/arrays',[\r\n\t\"./types\"\r\n],function(types,objects){\r\n\tvar filter = Array.prototype.filter,\r\n\t\tisArrayLike = types.isArrayLike;\r\n\r\n    /**\r\n     * The base implementation of `_.findIndex` and `_.findLastIndex` without\r\n     * support for iteratee shorthands.\r\n     *\r\n     * @param {Array} array The array to inspect.\r\n     * @param {Function} predicate The function invoked per iteration.\r\n     * @param {number} fromIndex The index to search from.\r\n     * @param {boolean} [fromRight] Specify iterating from right to left.\r\n     * @returns {number} Returns the index of the matched value, else `-1`.\r\n     */\r\n    function baseFindIndex(array, predicate, fromIndex, fromRight) {\r\n      var length = array.length,\r\n          index = fromIndex + (fromRight ? 1 : -1);\r\n\r\n      while ((fromRight ? index-- : ++index < length)) {\r\n        if (predicate(array[index], index, array)) {\r\n          return index;\r\n        }\r\n      }\r\n      return -1;\r\n    }\r\n\r\n    /**\r\n     * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\r\n     *\r\n     * @param {Array} array The array to inspect.\r\n     * @param {*} value The value to search for.\r\n     * @param {number} fromIndex The index to search from.\r\n     * @returns {number} Returns the index of the matched value, else `-1`.\r\n     */\r\n    function baseIndexOf(array, value, fromIndex) {\r\n      if (value !== value) {\r\n        return baseFindIndex(array, baseIsNaN, fromIndex);\r\n      }\r\n      var index = fromIndex - 1,\r\n          length = array.length;\r\n\r\n      while (++index < length) {\r\n        if (array[index] === value) {\r\n          return index;\r\n        }\r\n      }\r\n      return -1;\r\n    }\r\n\r\n    /**\r\n     * The base implementation of `isNaN` without support for number objects.\r\n     *\r\n     * @private\r\n     * @param {*} value The value to check.\r\n     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\r\n     */\r\n    function baseIsNaN(value) {\r\n      return value !== value;\r\n    }\r\n\r\n\r\n    function compact(array) {\r\n        return filter.call(array, function(item) {\r\n            return item != null;\r\n        });\r\n    }\r\n\r\n    function flatten(array) {\r\n        if (isArrayLike(array)) {\r\n            var result = [];\r\n            for (var i = 0; i < array.length; i++) {\r\n                var item = array[i];\r\n                if (isArrayLike(item)) {\r\n                    for (var j = 0; j < item.length; j++) {\r\n                        result.push(item[j]);\r\n                    }\r\n                } else {\r\n                    result.push(item);\r\n                }\r\n            }\r\n            return result;\r\n        } else {\r\n            return array;\r\n        }\r\n        //return array.length > 0 ? concat.apply([], array) : array;\r\n    }\r\n\r\n    function grep(array, callback) {\r\n        var out = [];\r\n\r\n        each(array, function(i, item) {\r\n            if (callback(item, i)) {\r\n                out.push(item);\r\n            }\r\n        });\r\n\r\n        return out;\r\n    }\r\n\r\n    function inArray(item, array) {\r\n        if (!array) {\r\n            return -1;\r\n        }\r\n        var i;\r\n\r\n        if (array.indexOf) {\r\n            return array.indexOf(item);\r\n        }\r\n\r\n        i = array.length;\r\n        while (i--) {\r\n            if (array[i] === item) {\r\n                return i;\r\n            }\r\n        }\r\n\r\n        return -1;\r\n    }\r\n\r\n    function makeArray(obj, offset, startWith) {\r\n       if (isArrayLike(obj) ) {\r\n        return (startWith || []).concat(Array.prototype.slice.call(obj, offset || 0));\r\n      }\r\n\r\n      // array of single index\r\n      return [ obj ];             \r\n    }\r\n\r\n    function map(elements, callback) {\r\n        var value, values = [],\r\n            i, key\r\n        if (isArrayLike(elements))\r\n            for (i = 0; i < elements.length; i++) {\r\n                value = callback.call(elements[i], elements[i], i);\r\n                if (value != null) values.push(value)\r\n            }\r\n        else\r\n            for (key in elements) {\r\n                value = callback.call(elements[key], elements[key], key);\r\n                if (value != null) values.push(value)\r\n            }\r\n        return flatten(values)\r\n    }\r\n\r\n    function uniq(array) {\r\n        return filter.call(array, function(item, idx) {\r\n            return array.indexOf(item) == idx;\r\n        })\r\n    }\r\n\r\n    return {\r\n        baseFindIndex: baseFindIndex,\r\n\r\n        baseIndexOf : baseIndexOf,\r\n        \r\n        compact: compact,\r\n\r\n        first : function(items,n) {\r\n            if (n) {\r\n                return items.slice(0,n);\r\n            } else {\r\n                return items[0];\r\n            }\r\n        },\r\n\r\n        flatten: flatten,\r\n\r\n        inArray: inArray,\r\n\r\n        makeArray: makeArray,\r\n\r\n        map : map,\r\n        \r\n        uniq : uniq\r\n\r\n    }\r\n});\ndefine('skylark-langx/numbers',[\r\n\t\"./types\"\r\n],function(types){\r\n\tvar isObject = types.isObject,\r\n\t\tisSymbol = types.isSymbol;\r\n\r\n\tvar INFINITY = 1 / 0,\r\n\t    MAX_SAFE_INTEGER = 9007199254740991,\r\n\t    MAX_INTEGER = 1.7976931348623157e+308,\r\n\t    NAN = 0 / 0;\r\n\r\n\t/** Used to match leading and trailing whitespace. */\r\n\tvar reTrim = /^\\s+|\\s+$/g;\r\n\r\n\t/** Used to detect bad signed hexadecimal string values. */\r\n\tvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\r\n\r\n\t/** Used to detect binary string values. */\r\n\tvar reIsBinary = /^0b[01]+$/i;\r\n\r\n\t/** Used to detect octal string values. */\r\n\tvar reIsOctal = /^0o[0-7]+$/i;\r\n\r\n\t/** Used to detect unsigned integer values. */\r\n\tvar reIsUint = /^(?:0|[1-9]\\d*)$/;\r\n\r\n\t/** Built-in method references without a dependency on `root`. */\r\n\tvar freeParseInt = parseInt;\r\n\r\n\t/**\r\n\t * Converts `value` to a finite number.\r\n\t *\r\n\t * @static\r\n\t * @memberOf _\r\n\t * @since 4.12.0\r\n\t * @category Lang\r\n\t * @param {*} value The value to convert.\r\n\t * @returns {number} Returns the converted number.\r\n\t * @example\r\n\t *\r\n\t * _.toFinite(3.2);\r\n\t * // => 3.2\r\n\t *\r\n\t * _.toFinite(Number.MIN_VALUE);\r\n\t * // => 5e-324\r\n\t *\r\n\t * _.toFinite(Infinity);\r\n\t * // => 1.7976931348623157e+308\r\n\t *\r\n\t * _.toFinite('3.2');\r\n\t * // => 3.2\r\n\t */\r\n\tfunction toFinite(value) {\r\n\t  if (!value) {\r\n\t    return value === 0 ? value : 0;\r\n\t  }\r\n\t  value = toNumber(value);\r\n\t  if (value === INFINITY || value === -INFINITY) {\r\n\t    var sign = (value < 0 ? -1 : 1);\r\n\t    return sign * MAX_INTEGER;\r\n\t  }\r\n\t  return value === value ? value : 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts `value` to an integer.\r\n\t *\r\n\t * **Note:** This method is loosely based on\r\n\t * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\r\n\t *\r\n\t * @static\r\n\t * @memberOf _\r\n\t * @param {*} value The value to convert.\r\n\t * @returns {number} Returns the converted integer.\r\n\t * @example\r\n\t *\r\n\t * _.toInteger(3.2);\r\n\t * // => 3\r\n\t *\r\n\t * _.toInteger(Number.MIN_VALUE);\r\n\t * // => 0\r\n\t *\r\n\t * _.toInteger(Infinity);\r\n\t * // => 1.7976931348623157e+308\r\n\t *\r\n\t * _.toInteger('3.2');\r\n\t * // => 3\r\n\t */\r\n\tfunction toInteger(value) {\r\n\t  var result = toFinite(value),\r\n\t      remainder = result % 1;\r\n\r\n\t  return result === result ? (remainder ? result - remainder : result) : 0;\r\n\t}\t\r\n\r\n\t/**\r\n\t * Converts `value` to a number.\r\n\t *\r\n\t * @static\r\n\t * @memberOf _\r\n\t * @since 4.0.0\r\n\t * @category Lang\r\n\t * @param {*} value The value to process.\r\n\t * @returns {number} Returns the number.\r\n\t * @example\r\n\t *\r\n\t * _.toNumber(3.2);\r\n\t * // => 3.2\r\n\t *\r\n\t * _.toNumber(Number.MIN_VALUE);\r\n\t * // => 5e-324\r\n\t *\r\n\t * _.toNumber(Infinity);\r\n\t * // => Infinity\r\n\t *\r\n\t * _.toNumber('3.2');\r\n\t * // => 3.2\r\n\t */\r\n\tfunction toNumber(value) {\r\n\t  if (typeof value == 'number') {\r\n\t    return value;\r\n\t  }\r\n\t  if (isSymbol(value)) {\r\n\t    return NAN;\r\n\t  }\r\n\t  if (isObject(value)) {\r\n\t    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\r\n\t    value = isObject(other) ? (other + '') : other;\r\n\t  }\r\n\t  if (typeof value != 'string') {\r\n\t    return value === 0 ? value : +value;\r\n\t  }\r\n\t  value = value.replace(reTrim, '');\r\n\t  var isBinary = reIsBinary.test(value);\r\n\t  return (isBinary || reIsOctal.test(value))\r\n\t    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\r\n\t    : (reIsBadHex.test(value) ? NAN : +value);\r\n\t}\r\n\r\n\treturn  {\r\n\t\ttoFinite : toFinite,\r\n\t\ttoNumber : toNumber,\r\n\t\ttoInteger : toInteger\r\n\t}\r\n});\ndefine('skylark-langx/objects',[\r\n\t\"./types\",\r\n    \"./numbers\"\r\n],function(types,numbers){\r\n\tvar hasOwnProperty = Object.prototype.hasOwnProperty,\r\n        slice = Array.prototype.slice,\r\n        isBoolean = types.isBoolean,\r\n        isFunction = types.isFunction,\r\n\t\tisObject = types.isObject,\r\n\t\tisPlainObject = types.isPlainObject,\r\n\t\tisArray = types.isArray,\r\n        isArrayLike = types.isArrayLike,\r\n        isString = types.isString,\r\n        toInteger = numbers.toInteger;\r\n\r\n     // An internal function for creating assigner functions.\r\n    function createAssigner(keysFunc, defaults) {\r\n        return function(obj) {\r\n          var length = arguments.length;\r\n          if (defaults) obj = Object(obj);  \r\n          if (length < 2 || obj == null) return obj;\r\n          for (var index = 1; index < length; index++) {\r\n            var source = arguments[index],\r\n                keys = keysFunc(source),\r\n                l = keys.length;\r\n            for (var i = 0; i < l; i++) {\r\n              var key = keys[i];\r\n              if (!defaults || obj[key] === void 0) obj[key] = source[key];\r\n            }\r\n          }\r\n          return obj;\r\n       };\r\n    }\r\n\r\n    // Internal recursive comparison function for `isEqual`.\r\n    var eq, deepEq;\r\n    var SymbolProto = typeof Symbol !== 'undefined' ? Symbol.prototype : null;\r\n\r\n    eq = function(a, b, aStack, bStack) {\r\n        // Identical objects are equal. `0 === -0`, but they aren't identical.\r\n        // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\r\n        if (a === b) return a !== 0 || 1 / a === 1 / b;\r\n        // `null` or `undefined` only equal to itself (strict comparison).\r\n        if (a == null || b == null) return false;\r\n        // `NaN`s are equivalent, but non-reflexive.\r\n        if (a !== a) return b !== b;\r\n        // Exhaust primitive checks\r\n        var type = typeof a;\r\n        if (type !== 'function' && type !== 'object' && typeof b != 'object') return false;\r\n        return deepEq(a, b, aStack, bStack);\r\n    };\r\n\r\n    // Internal recursive comparison function for `isEqual`.\r\n    deepEq = function(a, b, aStack, bStack) {\r\n        // Unwrap any wrapped objects.\r\n        //if (a instanceof _) a = a._wrapped;\r\n        //if (b instanceof _) b = b._wrapped;\r\n        // Compare `[[Class]]` names.\r\n        var className = toString.call(a);\r\n        if (className !== toString.call(b)) return false;\r\n        switch (className) {\r\n            // Strings, numbers, regular expressions, dates, and booleans are compared by value.\r\n            case '[object RegExp]':\r\n            // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\r\n            case '[object String]':\r\n                // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\r\n                // equivalent to `new String(\"5\")`.\r\n                return '' + a === '' + b;\r\n            case '[object Number]':\r\n                // `NaN`s are equivalent, but non-reflexive.\r\n                // Object(NaN) is equivalent to NaN.\r\n                if (+a !== +a) return +b !== +b;\r\n                // An `egal` comparison is performed for other numeric values.\r\n                return +a === 0 ? 1 / +a === 1 / b : +a === +b;\r\n            case '[object Date]':\r\n            case '[object Boolean]':\r\n                // Coerce dates and booleans to numeric primitive values. Dates are compared by their\r\n                // millisecond representations. Note that invalid dates with millisecond representations\r\n                // of `NaN` are not equivalent.\r\n                return +a === +b;\r\n            case '[object Symbol]':\r\n                return SymbolProto.valueOf.call(a) === SymbolProto.valueOf.call(b);\r\n        }\r\n\r\n        var areArrays = className === '[object Array]';\r\n        if (!areArrays) {\r\n            if (typeof a != 'object' || typeof b != 'object') return false;\r\n            // Objects with different constructors are not equivalent, but `Object`s or `Array`s\r\n            // from different frames are.\r\n            var aCtor = a.constructor, bCtor = b.constructor;\r\n            if (aCtor !== bCtor && !(isFunction(aCtor) && aCtor instanceof aCtor &&\r\n                               isFunction(bCtor) && bCtor instanceof bCtor)\r\n                          && ('constructor' in a && 'constructor' in b)) {\r\n                return false;\r\n            }\r\n        }\r\n        // Assume equality for cyclic structures. The algorithm for detecting cyclic\r\n        // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\r\n\r\n        // Initializing stack of traversed objects.\r\n        // It's done here since we only need them for objects and arrays comparison.\r\n        aStack = aStack || [];\r\n        bStack = bStack || [];\r\n        var length = aStack.length;\r\n        while (length--) {\r\n            // Linear search. Performance is inversely proportional to the number of\r\n            // unique nested structures.\r\n            if (aStack[length] === a) return bStack[length] === b;\r\n        }\r\n\r\n        // Add the first object to the stack of traversed objects.\r\n        aStack.push(a);\r\n        bStack.push(b);\r\n\r\n        // Recursively compare objects and arrays.\r\n        if (areArrays) {\r\n            // Compare array lengths to determine if a deep comparison is necessary.\r\n            length = a.length;\r\n            if (length !== b.length) return false;\r\n            // Deep compare the contents, ignoring non-numeric properties.\r\n            while (length--) {\r\n                if (!eq(a[length], b[length], aStack, bStack)) return false;\r\n            }\r\n        } else {\r\n            // Deep compare objects.\r\n            var keys = Object.keys(a), key;\r\n            length = keys.length;\r\n            // Ensure that both objects contain the same number of properties before comparing deep equality.\r\n            if (Object.keys(b).length !== length) return false;\r\n            while (length--) {\r\n                // Deep compare each member\r\n                key = keys[length];\r\n                if (!(b[key]!==undefined && eq(a[key], b[key], aStack, bStack))) return false;\r\n            }\r\n        }\r\n        // Remove the first object from the stack of traversed objects.\r\n        aStack.pop();\r\n        bStack.pop();\r\n        return true;\r\n    };\r\n\r\n    // Retrieve all the property names of an object.\r\n    function allKeys(obj) {\r\n        if (!isObject(obj)) return [];\r\n        var keys = [];\r\n        for (var key in obj) keys.push(key);\r\n        return keys;\r\n    }\r\n\r\n    function each(obj, callback) {\r\n        var length, key, i, undef, value;\r\n\r\n        if (obj) {\r\n            length = obj.length;\r\n\r\n            if (length === undef) {\r\n                // Loop object items\r\n                for (key in obj) {\r\n                    if (obj.hasOwnProperty(key)) {\r\n                        value = obj[key];\r\n                        if (callback.call(value, key, value) === false) {\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                // Loop array items\r\n                for (i = 0; i < length; i++) {\r\n                    value = obj[i];\r\n                    if (callback.call(value, i, value) === false) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function extend(target) {\r\n        var deep, args = slice.call(arguments, 1);\r\n        if (typeof target == 'boolean') {\r\n            deep = target\r\n            target = args.shift()\r\n        }\r\n        if (args.length == 0) {\r\n            args = [target];\r\n            target = this;\r\n        }\r\n        args.forEach(function(arg) {\r\n            mixin(target, arg, deep);\r\n        });\r\n        return target;\r\n    }\r\n\r\n    // Retrieve the names of an object's own properties.\r\n    // Delegates to **ECMAScript 5**'s native `Object.keys`.\r\n    function keys(obj) {\r\n        if (isObject(obj)) return [];\r\n        var keys = [];\r\n        for (var key in obj) if (has(obj, key)) keys.push(key);\r\n        return keys;\r\n    }\r\n\r\n    function has(obj, path) {\r\n        if (!isArray(path)) {\r\n            return obj != null && hasOwnProperty.call(obj, path);\r\n        }\r\n        var length = path.length;\r\n        for (var i = 0; i < length; i++) {\r\n            var key = path[i];\r\n            if (obj == null || !hasOwnProperty.call(obj, key)) {\r\n                return false;\r\n            }\r\n            obj = obj[key];\r\n        }\r\n        return !!length;\r\n    }\r\n\r\n    /**\r\n     * Checks if `value` is in `collection`. If `collection` is a string, it's\r\n     * checked for a substring of `value`, otherwise\r\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\r\n     * is used for equality comparisons. If `fromIndex` is negative, it's used as\r\n     * the offset from the end of `collection`.\r\n     *\r\n     * @static\r\n     * @memberOf _\r\n     * @since 0.1.0\r\n     * @category Collection\r\n     * @param {Array|Object|string} collection The collection to inspect.\r\n     * @param {*} value The value to search for.\r\n     * @param {number} [fromIndex=0] The index to search from.\r\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\r\n     * @returns {boolean} Returns `true` if `value` is found, else `false`.\r\n     * @example\r\n     *\r\n     * _.includes([1, 2, 3], 1);\r\n     * // => true\r\n     *\r\n     * _.includes([1, 2, 3], 1, 2);\r\n     * // => false\r\n     *\r\n     * _.includes({ 'a': 1, 'b': 2 }, 1);\r\n     * // => true\r\n     *\r\n     * _.includes('abcd', 'bc');\r\n     * // => true\r\n     */\r\n    function includes(collection, value, fromIndex, guard) {\r\n      collection = isArrayLike(collection) ? collection : values(collection);\r\n      fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;\r\n\r\n      var length = collection.length;\r\n      if (fromIndex < 0) {\r\n        fromIndex = nativeMax(length + fromIndex, 0);\r\n      }\r\n      return isString(collection)\r\n        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)\r\n        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);\r\n    }\r\n\r\n\r\n   // Perform a deep comparison to check if two objects are equal.\r\n    function isEqual(a, b) {\r\n        return eq(a, b);\r\n    }\r\n\r\n    // Returns whether an object has a given set of `key:value` pairs.\r\n    function isMatch(object, attrs) {\r\n        var keys = keys(attrs), length = keys.length;\r\n        if (object == null) return !length;\r\n        var obj = Object(object);\r\n        for (var i = 0; i < length; i++) {\r\n          var key = keys[i];\r\n          if (attrs[key] !== obj[key] || !(key in obj)) return false;\r\n        }\r\n        return true;\r\n    }    \r\n\r\n    function _mixin(target, source, deep, safe) {\r\n        for (var key in source) {\r\n            //if (!source.hasOwnProperty(key)) {\r\n            //    continue;\r\n            //}\r\n            if (safe && target[key] !== undefined) {\r\n                continue;\r\n            }\r\n            if (deep && (isPlainObject(source[key]) || isArray(source[key]))) {\r\n                if (isPlainObject(source[key]) && !isPlainObject(target[key])) {\r\n                    target[key] = {};\r\n                }\r\n                if (isArray(source[key]) && !isArray(target[key])) {\r\n                    target[key] = [];\r\n                }\r\n                _mixin(target[key], source[key], deep, safe);\r\n            } else if (source[key] !== undefined) {\r\n                target[key] = source[key]\r\n            }\r\n        }\r\n        return target;\r\n    }\r\n\r\n    function _parseMixinArgs(args) {\r\n        var params = slice.call(arguments, 0),\r\n            target = params.shift(),\r\n            deep = false;\r\n        if (isBoolean(params[params.length - 1])) {\r\n            deep = params.pop();\r\n        }\r\n\r\n        return {\r\n            target: target,\r\n            sources: params,\r\n            deep: deep\r\n        };\r\n    }\r\n\r\n    function mixin() {\r\n        var args = _parseMixinArgs.apply(this, arguments);\r\n\r\n        args.sources.forEach(function(source) {\r\n            _mixin(args.target, source, args.deep, false);\r\n        });\r\n        return args.target;\r\n    }\r\n\r\n    function removeItem(items, item) {\r\n        if (isArray(items)) {\r\n            var idx = items.indexOf(item);\r\n            if (idx != -1) {\r\n                items.splice(idx, 1);\r\n            }\r\n        } else if (isPlainObject(items)) {\r\n            for (var key in items) {\r\n                if (items[key] == item) {\r\n                    delete items[key];\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function result(obj, path, fallback) {\r\n        if (!isArray(path)) {\r\n            path = [path]\r\n        };\r\n        var length = path.length;\r\n        if (!length) {\r\n          return isFunction(fallback) ? fallback.call(obj) : fallback;\r\n        }\r\n        for (var i = 0; i < length; i++) {\r\n          var prop = obj == null ? void 0 : obj[path[i]];\r\n          if (prop === void 0) {\r\n            prop = fallback;\r\n            i = length; // Ensure we don't continue iterating.\r\n          }\r\n          obj = isFunction(prop) ? prop.call(obj) : prop;\r\n        }\r\n\r\n        return obj;\r\n    }\r\n\r\n    function safeMixin() {\r\n        var args = _parseMixinArgs.apply(this, arguments);\r\n\r\n        args.sources.forEach(function(source) {\r\n            _mixin(args.target, source, args.deep, true);\r\n        });\r\n        return args.target;\r\n    }\r\n\r\n    // Retrieve the values of an object's properties.\r\n    function values(obj) {\r\n        var keys = _.keys(obj);\r\n        var length = keys.length;\r\n        var values = Array(length);\r\n        for (var i = 0; i < length; i++) {\r\n            values[i] = obj[keys[i]];\r\n        }\r\n        return values;\r\n    }\r\n\r\n\r\n    \r\n    function clone( /*anything*/ src,checkCloneMethod) {\r\n        var copy;\r\n        if (src === undefined || src === null) {\r\n            copy = src;\r\n        } else if (checkCloneMethod && src.clone) {\r\n            copy = src.clone();\r\n        } else if (isArray(src)) {\r\n            copy = [];\r\n            for (var i = 0; i < src.length; i++) {\r\n                copy.push(clone(src[i]));\r\n            }\r\n        } else if (isPlainObject(src)) {\r\n            copy = {};\r\n            for (var key in src) {\r\n                copy[key] = clone(src[key]);\r\n            }\r\n        } else {\r\n            copy = src;\r\n        }\r\n\r\n        return copy;\r\n\r\n    }\r\n\r\n    return {\r\n        allKeys: allKeys,\r\n\r\n        clone: clone,\r\n\r\n        defaults : createAssigner(allKeys, true),\r\n\r\n        each : each,\r\n\r\n        extend : extend,\r\n\r\n        has: has,\r\n\r\n        isEqual: isEqual,   \r\n\r\n        includes: includes,\r\n\r\n        isMatch: isMatch,\r\n\r\n        keys: keys,\r\n\r\n        mixin: mixin,\r\n\r\n        removeItem: removeItem,\r\n\r\n        result : result,\r\n        \r\n        safeMixin: safeMixin,\r\n\r\n        values: values\r\n    };\r\n\r\n\r\n\r\n});\ndefine('skylark-langx/klass',[\r\n    \"./arrays\",\r\n    \"./objects\",\r\n    \"./types\"\r\n],function(arrays,objects,types){\r\n    var uniq = arrays.uniq,\r\n        has = objects.has,\r\n        mixin = objects.mixin,\r\n        isArray = types.isArray,\r\n        isDefined = types.isDefined;\r\n\r\n/* for reference \r\n function klass(props,parent) {\r\n    var ctor = function(){\r\n        this._construct();\r\n    };\r\n    ctor.prototype = props;\r\n    if (parent) {\r\n        ctor._proto_ = parent;\r\n        props.__proto__ = parent.prototype;\r\n    }\r\n    return ctor;\r\n}\r\n\r\n// Type some JavaScript code here.\r\nlet animal = klass({\r\n  _construct(){\r\n      this.name = this.name + \",hi\";\r\n  },\r\n    \r\n  name: \"Animal\",\r\n  eat() {         // [[HomeObject]] == animal\r\n    alert(`${this.name} eats.`);\r\n  }\r\n    \r\n    \r\n});\r\n\r\n\r\nlet rabbit = klass({\r\n  name: \"Rabbit\",\r\n  _construct(){\r\n      super._construct();\r\n  },\r\n  eat() {         // [[HomeObject]] == rabbit\r\n    super.eat();\r\n  }\r\n},animal);\r\n\r\nlet longEar = klass({\r\n  name: \"Long Ear\",\r\n  eat() {         // [[HomeObject]] == longEar\r\n    super.eat();\r\n  }\r\n},rabbit);\r\n*/\r\n    \r\n    function inherit(ctor, base) {\r\n        var f = function() {};\r\n        f.prototype = base.prototype;\r\n\r\n        ctor.prototype = new f();\r\n    }\r\n\r\n    var f1 = function() {\r\n        function extendClass(ctor, props, options) {\r\n            // Copy the properties to the prototype of the class.\r\n            var proto = ctor.prototype,\r\n                _super = ctor.superclass.prototype,\r\n                noOverrided = options && options.noOverrided,\r\n                overrides = options && options.overrides || {};\r\n\r\n            for (var name in props) {\r\n                if (name === \"constructor\") {\r\n                    continue;\r\n                }\r\n\r\n                // Check if we're overwriting an existing function\r\n                var prop = props[name];\r\n                if (typeof props[name] == \"function\") {\r\n                    proto[name] =  !prop._constructor && !noOverrided && typeof _super[name] == \"function\" ?\r\n                          (function(name, fn, superFn) {\r\n                            return function() {\r\n                                var tmp = this.overrided;\r\n\r\n                                // Add a new ._super() method that is the same method\r\n                                // but on the super-class\r\n                                this.overrided = superFn;\r\n\r\n                                // The method only need to be bound temporarily, so we\r\n                                // remove it when we're done executing\r\n                                var ret = fn.apply(this, arguments);\r\n\r\n                                this.overrided = tmp;\r\n\r\n                                return ret;\r\n                            };\r\n                        })(name, prop, _super[name]) :\r\n                        prop;\r\n                } else if (types.isPlainObject(prop) && prop!==null && (prop.get)) {\r\n                    Object.defineProperty(proto,name,prop);\r\n                } else {\r\n                    proto[name] = prop;\r\n                }\r\n            }\r\n            return ctor;\r\n        }\r\n\r\n        function serialMixins(ctor,mixins) {\r\n            var result = [];\r\n\r\n            mixins.forEach(function(mixin){\r\n                if (has(mixin,\"__mixins__\")) {\r\n                     throw new Error(\"nested mixins\");\r\n                }\r\n                var clss = [];\r\n                while (mixin) {\r\n                    clss.unshift(mixin);\r\n                    mixin = mixin.superclass;\r\n                }\r\n                result = result.concat(clss);\r\n            });\r\n\r\n            result = uniq(result);\r\n\r\n            result = result.filter(function(mixin){\r\n                var cls = ctor;\r\n                while (cls) {\r\n                    if (mixin === cls) {\r\n                        return false;\r\n                    }\r\n                    if (has(cls,\"__mixins__\")) {\r\n                        var clsMixines = cls[\"__mixins__\"];\r\n                        for (var i=0; i<clsMixines.length;i++) {\r\n                            if (clsMixines[i]===mixin) {\r\n                                return false;\r\n                            }\r\n                        }\r\n                    }\r\n                    cls = cls.superclass;\r\n                }\r\n                return true;\r\n            });\r\n\r\n            if (result.length>0) {\r\n                return result;\r\n            } else {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        function mergeMixins(ctor,mixins) {\r\n            var newCtor =ctor;\r\n            for (var i=0;i<mixins.length;i++) {\r\n                var xtor = new Function();\r\n                xtor.prototype = Object.create(newCtor.prototype);\r\n                xtor.__proto__ = newCtor;\r\n                xtor.superclass = null;\r\n                mixin(xtor.prototype,mixins[i].prototype);\r\n                xtor.prototype.__mixin__ = mixins[i];\r\n                newCtor = xtor;\r\n            }\r\n\r\n            return newCtor;\r\n        }\r\n\r\n        function _constructor ()  {\r\n            if (this._construct) {\r\n                return this._construct.apply(this, arguments);\r\n            } else  if (this.init) {\r\n                return this.init.apply(this, arguments);\r\n            }\r\n        }\r\n\r\n        return function createClass(props, parent, mixins,options) {\r\n            if (isArray(parent)) {\r\n                options = mixins;\r\n                mixins = parent;\r\n                parent = null;\r\n            }\r\n            parent = parent || Object;\r\n\r\n            if (isDefined(mixins) && !isArray(mixins)) {\r\n                options = mixins;\r\n                mixins = false;\r\n            }\r\n\r\n            var innerParent = parent;\r\n\r\n            if (mixins) {\r\n                mixins = serialMixins(innerParent,mixins);\r\n            }\r\n\r\n            if (mixins) {\r\n                innerParent = mergeMixins(innerParent,mixins);\r\n            }\r\n\r\n            var klassName = props.klassName || \"\",\r\n                ctor = new Function(\r\n                    \"return function \" + klassName + \"() {\" +\r\n                    \"var inst = this,\" +\r\n                    \" ctor = arguments.callee;\" +\r\n                    \"if (!(inst instanceof ctor)) {\" +\r\n                    \"inst = Object.create(ctor.prototype);\" +\r\n                    \"}\" +\r\n                    \"return ctor._constructor.apply(inst, arguments) || inst;\" + \r\n                    \"}\"\r\n                )();\r\n\r\n\r\n            // Populate our constructed prototype object\r\n            ctor.prototype = Object.create(innerParent.prototype);\r\n\r\n            // Enforce the constructor to be what we expect\r\n            ctor.prototype.constructor = ctor;\r\n            ctor.superclass = parent;\r\n\r\n            // And make this class extendable\r\n            ctor.__proto__ = innerParent;\r\n\r\n\r\n            if (!ctor._constructor) {\r\n                ctor._constructor = _constructor;\r\n            } \r\n\r\n            if (mixins) {\r\n                ctor.__mixins__ = mixins;\r\n            }\r\n\r\n            if (!ctor.partial) {\r\n                ctor.partial = function(props, options) {\r\n                    return extendClass(this, props, options);\r\n                };\r\n            }\r\n            if (!ctor.inherit) {\r\n                ctor.inherit = function(props, mixins,options) {\r\n                    return createClass(props, this, mixins,options);\r\n                };\r\n            }\r\n\r\n            ctor.partial(props, options);\r\n\r\n            return ctor;\r\n        };\r\n    }\r\n\r\n    var createClass = f1();\r\n\r\n    return createClass;\r\n});\ndefine('skylark-langx/ArrayStore',[\r\n    \"./klass\"\r\n],function(klass){\r\n    var SimpleQueryEngine = function(query, options){\r\n        // summary:\r\n        //      Simple query engine that matches using filter functions, named filter\r\n        //      functions or objects by name-value on a query object hash\r\n        //\r\n        // description:\r\n        //      The SimpleQueryEngine provides a way of getting a QueryResults through\r\n        //      the use of a simple object hash as a filter.  The hash will be used to\r\n        //      match properties on data objects with the corresponding value given. In\r\n        //      other words, only exact matches will be returned.\r\n        //\r\n        //      This function can be used as a template for more complex query engines;\r\n        //      for example, an engine can be created that accepts an object hash that\r\n        //      contains filtering functions, or a string that gets evaluated, etc.\r\n        //\r\n        //      When creating a new dojo.store, simply set the store's queryEngine\r\n        //      field as a reference to this function.\r\n        //\r\n        // query: Object\r\n        //      An object hash with fields that may match fields of items in the store.\r\n        //      Values in the hash will be compared by normal == operator, but regular expressions\r\n        //      or any object that provides a test() method are also supported and can be\r\n        //      used to match strings by more complex expressions\r\n        //      (and then the regex's or object's test() method will be used to match values).\r\n        //\r\n        // options: dojo/store/api/Store.QueryOptions?\r\n        //      An object that contains optional information such as sort, start, and count.\r\n        //\r\n        // returns: Function\r\n        //      A function that caches the passed query under the field \"matches\".  See any\r\n        //      of the \"query\" methods on dojo.stores.\r\n        //\r\n        // example:\r\n        //      Define a store with a reference to this engine, and set up a query method.\r\n        //\r\n        //  |   var myStore = function(options){\r\n        //  |       //  ...more properties here\r\n        //  |       this.queryEngine = SimpleQueryEngine;\r\n        //  |       //  define our query method\r\n        //  |       this.query = function(query, options){\r\n        //  |           return QueryResults(this.queryEngine(query, options)(this.data));\r\n        //  |       };\r\n        //  |   };\r\n\r\n        // create our matching query function\r\n        switch(typeof query){\r\n            default:\r\n                throw new Error(\"Can not query with a \" + typeof query);\r\n            case \"object\": case \"undefined\":\r\n                var queryObject = query;\r\n                query = function(object){\r\n                    for(var key in queryObject){\r\n                        var required = queryObject[key];\r\n                        if(required && required.test){\r\n                            // an object can provide a test method, which makes it work with regex\r\n                            if(!required.test(object[key], object)){\r\n                                return false;\r\n                            }\r\n                        }else if(required != object[key]){\r\n                            return false;\r\n                        }\r\n                    }\r\n                    return true;\r\n                };\r\n                break;\r\n            case \"string\":\r\n                // named query\r\n                if(!this[query]){\r\n                    throw new Error(\"No filter function \" + query + \" was found in store\");\r\n                }\r\n                query = this[query];\r\n                // fall through\r\n            case \"function\":\r\n                // fall through\r\n        }\r\n        \r\n        function filter(arr, callback, thisObject){\r\n            // summary:\r\n            //      Returns a new Array with those items from arr that match the\r\n            //      condition implemented by callback.\r\n            // arr: Array\r\n            //      the array to iterate over.\r\n            // callback: Function|String\r\n            //      a function that is invoked with three arguments (item,\r\n            //      index, array). The return of this function is expected to\r\n            //      be a boolean which determines whether the passed-in item\r\n            //      will be included in the returned array.\r\n            // thisObject: Object?\r\n            //      may be used to scope the call to callback\r\n            // returns: Array\r\n            // description:\r\n            //      This function corresponds to the JavaScript 1.6 Array.filter() method, with one difference: when\r\n            //      run over sparse arrays, this implementation passes the \"holes\" in the sparse array to\r\n            //      the callback function with a value of undefined. JavaScript 1.6's filter skips the holes in the sparse array.\r\n            //      For more details, see:\r\n            //      https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Array/filter\r\n            // example:\r\n            //  | // returns [2, 3, 4]\r\n            //  | array.filter([1, 2, 3, 4], function(item){ return item>1; });\r\n\r\n            // TODO: do we need \"Ctr\" here like in map()?\r\n            var i = 0, l = arr && arr.length || 0, out = [], value;\r\n            if(l && typeof arr == \"string\") arr = arr.split(\"\");\r\n            if(typeof callback == \"string\") callback = cache[callback] || buildFn(callback);\r\n            if(thisObject){\r\n                for(; i < l; ++i){\r\n                    value = arr[i];\r\n                    if(callback.call(thisObject, value, i, arr)){\r\n                        out.push(value);\r\n                    }\r\n                }\r\n            }else{\r\n                for(; i < l; ++i){\r\n                    value = arr[i];\r\n                    if(callback(value, i, arr)){\r\n                        out.push(value);\r\n                    }\r\n                }\r\n            }\r\n            return out; // Array\r\n        }\r\n\r\n        function execute(array){\r\n            // execute the whole query, first we filter\r\n            var results = filter(array, query);\r\n            // next we sort\r\n            var sortSet = options && options.sort;\r\n            if(sortSet){\r\n                results.sort(typeof sortSet == \"function\" ? sortSet : function(a, b){\r\n                    for(var sort, i=0; sort = sortSet[i]; i++){\r\n                        var aValue = a[sort.attribute];\r\n                        var bValue = b[sort.attribute];\r\n                        // valueOf enables proper comparison of dates\r\n                        aValue = aValue != null ? aValue.valueOf() : aValue;\r\n                        bValue = bValue != null ? bValue.valueOf() : bValue;\r\n                        if (aValue != bValue){\r\n                            // modified by lwf 2016/07/09\r\n                            //return !!sort.descending == (aValue == null || aValue > bValue) ? -1 : 1;\r\n                            return !!sort.descending == (aValue == null || aValue > bValue) ? -1 : 1;\r\n                        }\r\n                    }\r\n                    return 0;\r\n                });\r\n            }\r\n            // now we paginate\r\n            if(options && (options.start || options.count)){\r\n                var total = results.length;\r\n                results = results.slice(options.start || 0, (options.start || 0) + (options.count || Infinity));\r\n                results.total = total;\r\n            }\r\n            return results;\r\n        }\r\n        execute.matches = query;\r\n        return execute;\r\n    };\r\n\r\n    var QueryResults = function(results){\r\n        // summary:\r\n        //      A function that wraps the results of a store query with additional\r\n        //      methods.\r\n        // description:\r\n        //      QueryResults is a basic wrapper that allows for array-like iteration\r\n        //      over any kind of returned data from a query.  While the simplest store\r\n        //      will return a plain array of data, other stores may return deferreds or\r\n        //      promises; this wrapper makes sure that *all* results can be treated\r\n        //      the same.\r\n        //\r\n        //      Additional methods include `forEach`, `filter` and `map`.\r\n        // results: Array|dojo/promise/Promise\r\n        //      The result set as an array, or a promise for an array.\r\n        // returns:\r\n        //      An array-like object that can be used for iterating over.\r\n        // example:\r\n        //      Query a store and iterate over the results.\r\n        //\r\n        //  |   store.query({ prime: true }).forEach(function(item){\r\n        //  |       //  do something\r\n        //  |   });\r\n\r\n        if(!results){\r\n            return results;\r\n        }\r\n\r\n        var isPromise = !!results.then;\r\n        // if it is a promise it may be frozen\r\n        if(isPromise){\r\n            results = Object.delegate(results);\r\n        }\r\n        function addIterativeMethod(method){\r\n            // Always add the iterative methods so a QueryResults is\r\n            // returned whether the environment is ES3 or ES5\r\n            results[method] = function(){\r\n                var args = arguments;\r\n                var result = Deferred.when(results, function(results){\r\n                    //Array.prototype.unshift.call(args, results);\r\n                    return QueryResults(Array.prototype[method].apply(results, args));\r\n                });\r\n                // forEach should only return the result of when()\r\n                // when we're wrapping a promise\r\n                if(method !== \"forEach\" || isPromise){\r\n                    return result;\r\n                }\r\n            };\r\n        }\r\n\r\n        addIterativeMethod(\"forEach\");\r\n        addIterativeMethod(\"filter\");\r\n        addIterativeMethod(\"map\");\r\n        if(results.total == null){\r\n            results.total = Deferred.when(results, function(results){\r\n                return results.length;\r\n            });\r\n        }\r\n        return results; // Object\r\n    };\r\n\r\n    var ArrayStore = klass({\r\n        \"klassName\": \"ArrayStore\",\r\n\r\n        \"queryEngine\": SimpleQueryEngine,\r\n        \r\n        \"idProperty\": \"id\",\r\n\r\n\r\n        get: function(id){\r\n            // summary:\r\n            //      Retrieves an object by its identity\r\n            // id: Number\r\n            //      The identity to use to lookup the object\r\n            // returns: Object\r\n            //      The object in the store that matches the given id.\r\n            return this.data[this.index[id]];\r\n        },\r\n\r\n        getIdentity: function(object){\r\n            return object[this.idProperty];\r\n        },\r\n\r\n        put: function(object, options){\r\n            var data = this.data,\r\n                index = this.index,\r\n                idProperty = this.idProperty;\r\n            var id = object[idProperty] = (options && \"id\" in options) ? options.id : idProperty in object ? object[idProperty] : Math.random();\r\n            if(id in index){\r\n                // object exists\r\n                if(options && options.overwrite === false){\r\n                    throw new Error(\"Object already exists\");\r\n                }\r\n                // replace the entry in data\r\n                data[index[id]] = object;\r\n            }else{\r\n                // add the new object\r\n                index[id] = data.push(object) - 1;\r\n            }\r\n            return id;\r\n        },\r\n\r\n        add: function(object, options){\r\n            (options = options || {}).overwrite = false;\r\n            // call put with overwrite being false\r\n            return this.put(object, options);\r\n        },\r\n\r\n        remove: function(id){\r\n            // summary:\r\n            //      Deletes an object by its identity\r\n            // id: Number\r\n            //      The identity to use to delete the object\r\n            // returns: Boolean\r\n            //      Returns true if an object was removed, falsy (undefined) if no object matched the id\r\n            var index = this.index;\r\n            var data = this.data;\r\n            if(id in index){\r\n                data.splice(index[id], 1);\r\n                // now we have to reindex\r\n                this.setData(data);\r\n                return true;\r\n            }\r\n        },\r\n        query: function(query, options){\r\n            // summary:\r\n            //      Queries the store for objects.\r\n            // query: Object\r\n            //      The query to use for retrieving objects from the store.\r\n            // options: dojo/store/api/Store.QueryOptions?\r\n            //      The optional arguments to apply to the resultset.\r\n            // returns: dojo/store/api/Store.QueryResults\r\n            //      The results of the query, extended with iterative methods.\r\n            //\r\n            // example:\r\n            //      Given the following store:\r\n            //\r\n            //  |   var store = new Memory({\r\n            //  |       data: [\r\n            //  |           {id: 1, name: \"one\", prime: false },\r\n            //  |           {id: 2, name: \"two\", even: true, prime: true},\r\n            //  |           {id: 3, name: \"three\", prime: true},\r\n            //  |           {id: 4, name: \"four\", even: true, prime: false},\r\n            //  |           {id: 5, name: \"five\", prime: true}\r\n            //  |       ]\r\n            //  |   });\r\n            //\r\n            //  ...find all items where \"prime\" is true:\r\n            //\r\n            //  |   var results = store.query({ prime: true });\r\n            //\r\n            //  ...or find all items where \"even\" is true:\r\n            //\r\n            //  |   var results = store.query({ even: true });\r\n            return QueryResults(this.queryEngine(query, options)(this.data));\r\n        },\r\n\r\n        setData: function(data){\r\n            // summary:\r\n            //      Sets the given data as the source for this store, and indexes it\r\n            // data: Object[]\r\n            //      An array of objects to use as the source of data.\r\n            if(data.items){\r\n                // just for convenience with the data format IFRS expects\r\n                this.idProperty = data.identifier || this.idProperty;\r\n                data = this.data = data.items;\r\n            }else{\r\n                this.data = data;\r\n            }\r\n            this.index = {};\r\n            for(var i = 0, l = data.length; i < l; i++){\r\n                this.index[data[i][this.idProperty]] = i;\r\n            }\r\n        },\r\n\r\n        init: function(options) {\r\n            for(var i in options){\r\n                this[i] = options[i];\r\n            }\r\n            this.setData(this.data || []);\r\n        }\r\n\r\n    });\r\n\r\n\treturn ArrayStore;\r\n});\ndefine('skylark-langx/aspect',[\r\n],function(){\r\n\r\n  var undefined, nextId = 0;\r\n    function advise(dispatcher, type, advice, receiveArguments){\r\n        var previous = dispatcher[type];\r\n        var around = type == \"around\";\r\n        var signal;\r\n        if(around){\r\n            var advised = advice(function(){\r\n                return previous.advice(this, arguments);\r\n            });\r\n            signal = {\r\n                remove: function(){\r\n                    if(advised){\r\n                        advised = dispatcher = advice = null;\r\n                    }\r\n                },\r\n                advice: function(target, args){\r\n                    return advised ?\r\n                        advised.apply(target, args) :  // called the advised function\r\n                        previous.advice(target, args); // cancelled, skip to next one\r\n                }\r\n            };\r\n        }else{\r\n            // create the remove handler\r\n            signal = {\r\n                remove: function(){\r\n                    if(signal.advice){\r\n                        var previous = signal.previous;\r\n                        var next = signal.next;\r\n                        if(!next && !previous){\r\n                            delete dispatcher[type];\r\n                        }else{\r\n                            if(previous){\r\n                                previous.next = next;\r\n                            }else{\r\n                                dispatcher[type] = next;\r\n                            }\r\n                            if(next){\r\n                                next.previous = previous;\r\n                            }\r\n                        }\r\n\r\n                        // remove the advice to signal that this signal has been removed\r\n                        dispatcher = advice = signal.advice = null;\r\n                    }\r\n                },\r\n                id: nextId++,\r\n                advice: advice,\r\n                receiveArguments: receiveArguments\r\n            };\r\n        }\r\n        if(previous && !around){\r\n            if(type == \"after\"){\r\n                // add the listener to the end of the list\r\n                // note that we had to change this loop a little bit to workaround a bizarre IE10 JIT bug\r\n                while(previous.next && (previous = previous.next)){}\r\n                previous.next = signal;\r\n                signal.previous = previous;\r\n            }else if(type == \"before\"){\r\n                // add to beginning\r\n                dispatcher[type] = signal;\r\n                signal.next = previous;\r\n                previous.previous = signal;\r\n            }\r\n        }else{\r\n            // around or first one just replaces\r\n            dispatcher[type] = signal;\r\n        }\r\n        return signal;\r\n    }\r\n    function aspect(type){\r\n        return function(target, methodName, advice, receiveArguments){\r\n            var existing = target[methodName], dispatcher;\r\n            if(!existing || existing.target != target){\r\n                // no dispatcher in place\r\n                target[methodName] = dispatcher = function(){\r\n                    var executionId = nextId;\r\n                    // before advice\r\n                    var args = arguments;\r\n                    var before = dispatcher.before;\r\n                    while(before){\r\n                        args = before.advice.apply(this, args) || args;\r\n                        before = before.next;\r\n                    }\r\n                    // around advice\r\n                    if(dispatcher.around){\r\n                        var results = dispatcher.around.advice(this, args);\r\n                    }\r\n                    // after advice\r\n                    var after = dispatcher.after;\r\n                    while(after && after.id < executionId){\r\n                        if(after.receiveArguments){\r\n                            var newResults = after.advice.apply(this, args);\r\n                            // change the return value only if a new value was returned\r\n                            results = newResults === undefined ? results : newResults;\r\n                        }else{\r\n                            results = after.advice.call(this, results, args);\r\n                        }\r\n                        after = after.next;\r\n                    }\r\n                    return results;\r\n                };\r\n                if(existing){\r\n                    dispatcher.around = {advice: function(target, args){\r\n                        return existing.apply(target, args);\r\n                    }};\r\n                }\r\n                dispatcher.target = target;\r\n            }\r\n            var results = advise((dispatcher || existing), type, advice, receiveArguments);\r\n            advice = null;\r\n            return results;\r\n        };\r\n    }\r\n\r\n    return {\r\n        after: aspect(\"after\"),\r\n \r\n        around: aspect(\"around\"),\r\n        \r\n        before: aspect(\"before\")\r\n    };\r\n});\ndefine('skylark-langx/funcs',[\r\n    \"./objects\",\r\n\t\"./types\"\r\n],function(objects,types){\r\n\tvar mixin = objects.mixin,\r\n        slice = Array.prototype.slice,\r\n        isFunction = types.isFunction,\r\n        isString = types.isString;\r\n\r\n    function defer(fn) {\r\n        if (requestAnimationFrame) {\r\n            requestAnimationFrame(fn);\r\n        } else {\r\n            setTimeoutout(fn);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function noop() {\r\n    }\r\n\r\n    function proxy(fn, context) {\r\n        var args = (2 in arguments) && slice.call(arguments, 2)\r\n        if (isFunction(fn)) {\r\n            var proxyFn = function() {\r\n                return fn.apply(context, args ? args.concat(slice.call(arguments)) : arguments);\r\n            }\r\n            return proxyFn;\r\n        } else if (isString(context)) {\r\n            if (args) {\r\n                args.unshift(fn[context], fn)\r\n                return proxy.apply(null, args)\r\n            } else {\r\n                return proxy(fn[context], fn);\r\n            }\r\n        } else {\r\n            throw new TypeError(\"expected function\");\r\n        }\r\n    }\r\n\r\n    function debounce(fn, wait) {\r\n        var timeout;\r\n        return function () {\r\n            var context = this, args = arguments;\r\n            var later = function () {\r\n                timeout = null;\r\n                fn.apply(context, args);\r\n            };\r\n            if (timeout) clearTimeout(timeout);\r\n            timeout = setTimeout(later, wait);\r\n        };\r\n    }\r\n   \r\n    var delegate = (function() {\r\n        // boodman/crockford delegation w/ cornford optimization\r\n        function TMP() {}\r\n        return function(obj, props) {\r\n            TMP.prototype = obj;\r\n            var tmp = new TMP();\r\n            TMP.prototype = null;\r\n            if (props) {\r\n                mixin(tmp, props);\r\n            }\r\n            return tmp; // Object\r\n        };\r\n    })();\r\n\r\n\r\n    return {\r\n        debounce: debounce,\r\n\r\n        delegate: delegate,\r\n\r\n        defer: defer,\r\n\r\n        noop : noop,\r\n\r\n        proxy: proxy,\r\n\r\n        returnTrue: function() {\r\n            return true;\r\n        },\r\n\r\n        returnFalse: function() {\r\n            return false;\r\n        }\r\n    };\r\n});\ndefine('skylark-langx/Deferred',[\r\n    \"./arrays\",\r\n\t\"./funcs\",\r\n    \"./objects\"\r\n],function(arrays,funcs,objects){\r\n    \"use strict\";\r\n    \r\n    var  PGLISTENERS = Symbol ? Symbol() : '__pglisteners',\r\n         PGNOTIFIES = Symbol ? Symbol() : '__pgnotifies';\r\n\r\n    var slice = Array.prototype.slice,\r\n        proxy = funcs.proxy,\r\n        makeArray = arrays.makeArray,\r\n        result = objects.result,\r\n        mixin = objects.mixin;\r\n\r\n    mixin(Promise.prototype,{\r\n        always: function(handler) {\r\n            //this.done(handler);\r\n            //this.fail(handler);\r\n            this.then(handler,handler);\r\n            return this;\r\n        },\r\n        done : function() {\r\n            for (var i = 0;i<arguments.length;i++) {\r\n                this.then(arguments[i]);\r\n            }\r\n            return this;\r\n        },\r\n        fail : function(handler) { \r\n            //return mixin(Promise.prototype.catch.call(this,handler),added);\r\n            //return this.then(null,handler);\r\n            this.catch(handler);\r\n            return this;\r\n         }\r\n    });\r\n\r\n\r\n    var Deferred = function() {\r\n        var self = this,\r\n            p = this.promise = new Promise(function(resolve, reject) {\r\n                self._resolve = resolve;\r\n                self._reject = reject;\r\n            });\r\n\r\n        wrapPromise(p,self);\r\n\r\n        this[PGLISTENERS] = [];\r\n        this[PGNOTIFIES] = [];\r\n\r\n        //this.resolve = Deferred.prototype.resolve.bind(this);\r\n        //this.reject = Deferred.prototype.reject.bind(this);\r\n        //this.progress = Deferred.prototype.progress.bind(this);\r\n\r\n    };\r\n\r\n    function wrapPromise(p,d) {\r\n        var   added = {\r\n                state : function() {\r\n                    if (d.isResolved()) {\r\n                        return 'resolved';\r\n                    }\r\n                    if (d.isRejected()) {\r\n                        return 'rejected';\r\n                    }\r\n                    return 'pending';\r\n                },\r\n                then : function(onResolved,onRejected,onProgress) {\r\n                    if (onProgress) {\r\n                        this.progress(onProgress);\r\n                    }\r\n                    return wrapPromise(Promise.prototype.then.call(this,\r\n                            onResolved && function(args) {\r\n                                if (args && args.__ctx__ !== undefined) {\r\n                                    return onResolved.apply(args.__ctx__,args);\r\n                                } else {\r\n                                    return onResolved(args);\r\n                                }\r\n                            },\r\n                            onRejected && function(args){\r\n                                if (args && args.__ctx__ !== undefined) {\r\n                                    return onRejected.apply(args.__ctx__,args);\r\n                                } else {\r\n                                    return onRejected(args);\r\n                                }\r\n                            }));\r\n                },\r\n                progress : function(handler) {\r\n                    d[PGNOTIFIES].forEach(function (value) {\r\n                        handler(value);\r\n                    });\r\n                    d[PGLISTENERS].push(handler);\r\n                    return this;\r\n                }\r\n\r\n            };\r\n\r\n        added.pipe = added.then;\r\n        return mixin(p,added);\r\n\r\n    }\r\n\r\n    Deferred.prototype.resolve = function(value) {\r\n        var args = slice.call(arguments);\r\n        return this.resolveWith(null,args);\r\n    };\r\n\r\n    Deferred.prototype.resolveWith = function(context,args) {\r\n        args = args ? makeArray(args) : []; \r\n        args.__ctx__ = context;\r\n        this._resolve(args);\r\n        this._resolved = true;\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.notify = function(value) {\r\n        try {\r\n            this[PGNOTIFIES].push(value);\r\n\r\n            return this[PGLISTENERS].forEach(function (listener) {\r\n                return listener(value);\r\n            });\r\n        } catch (error) {\r\n          this.reject(error);\r\n        }\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.reject = function(reason) {\r\n        var args = slice.call(arguments);\r\n        return this.rejectWith(null,args);\r\n    };\r\n\r\n    Deferred.prototype.rejectWith = function(context,args) {\r\n        args = args ? makeArray(args) : []; \r\n        args.__ctx__ = context;\r\n        this._reject(args);\r\n        this._rejected = true;\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.isResolved = function() {\r\n        return !!this._resolved;\r\n    };\r\n\r\n    Deferred.prototype.isRejected = function() {\r\n        return !!this._rejected;\r\n    };\r\n\r\n    Deferred.prototype.then = function(callback, errback, progback) {\r\n        var p = result(this,\"promise\");\r\n        return p.then(callback, errback, progback);\r\n    };\r\n\r\n    Deferred.prototype.progress = function(progback){\r\n        var p = result(this,\"promise\");\r\n        return p.progress(progback);\r\n    };\r\n   \r\n    Deferred.prototype.catch = function(errback) {\r\n        var p = result(this,\"promise\");\r\n        return p.catch(errback);\r\n    };\r\n\r\n\r\n    Deferred.prototype.done  = function() {\r\n        var p = result(this,\"promise\");\r\n        return p.done.apply(p,arguments);\r\n    };\r\n\r\n    Deferred.prototype.fail = function(errback) {\r\n        var p = result(this,\"promise\");\r\n        return p.fail(errback);\r\n    };\r\n\r\n\r\n    Deferred.all = function(array) {\r\n        //return wrapPromise(Promise.all(array));\r\n        var d = new Deferred();\r\n        Promise.all(array).then(d.resolve.bind(d),d.reject.bind(d));\r\n        return result(d,\"promise\");\r\n    };\r\n\r\n    Deferred.first = function(array) {\r\n        return wrapPromise(Promise.race(array));\r\n    };\r\n\r\n\r\n    Deferred.when = function(valueOrPromise, callback, errback, progback) {\r\n        var receivedPromise = valueOrPromise && typeof valueOrPromise.then === \"function\";\r\n        var nativePromise = receivedPromise && valueOrPromise instanceof Promise;\r\n\r\n        if (!receivedPromise) {\r\n            if (arguments.length > 1) {\r\n                return callback ? callback(valueOrPromise) : valueOrPromise;\r\n            } else {\r\n                return new Deferred().resolve(valueOrPromise);\r\n            }\r\n        } else if (!nativePromise) {\r\n            var deferred = new Deferred(valueOrPromise.cancel);\r\n            valueOrPromise.then(proxy(deferred.resolve,deferred), proxy(deferred.reject,deferred), deferred.notify);\r\n            valueOrPromise = deferred.promise;\r\n        }\r\n\r\n        if (callback || errback || progback) {\r\n            return valueOrPromise.then(callback, errback, progback);\r\n        }\r\n        return valueOrPromise;\r\n    };\r\n\r\n    Deferred.reject = function(err) {\r\n        var d = new Deferred();\r\n        d.reject(err);\r\n        return d.promise;\r\n    };\r\n\r\n    Deferred.resolve = function(data) {\r\n        var d = new Deferred();\r\n        d.resolve.apply(d,arguments);\r\n        return d.promise;\r\n    };\r\n\r\n    Deferred.immediate = Deferred.resolve;\r\n\r\n    return Deferred;\r\n});\ndefine('skylark-langx/async',[\r\n    \"./Deferred\",\r\n    \"./objects\"\r\n],function(Deferred,objects){\r\n    var each = objects.each;\r\n    \r\n    var async = {\r\n        parallel : function(arr,args,ctx) {\r\n            var rets = [];\r\n            ctx = ctx || null;\r\n            args = args || [];\r\n\r\n            each(arr,function(i,func){\r\n                rets.push(func.apply(ctx,args));\r\n            });\r\n\r\n            return Deferred.all(rets);\r\n        },\r\n\r\n        series : function(arr,args,ctx) {\r\n            var rets = [],\r\n                d = new Deferred(),\r\n                p = d.promise;\r\n\r\n            ctx = ctx || null;\r\n            args = args || [];\r\n\r\n            d.resolve();\r\n            each(arr,function(i,func){\r\n                p = p.then(function(){\r\n                    return func.apply(ctx,args);\r\n                });\r\n                rets.push(p);\r\n            });\r\n\r\n            return Deferred.all(rets);\r\n        },\r\n\r\n        waterful : function(arr,args,ctx) {\r\n            var d = new Deferred(),\r\n                p = d.promise;\r\n\r\n            ctx = ctx || null;\r\n            args = args || [];\r\n\r\n            d.resolveWith(ctx,args);\r\n\r\n            each(arr,function(i,func){\r\n                p = p.then(func);\r\n            });\r\n            return p;\r\n        }\r\n    };\r\n\r\n\treturn async;\t\r\n});\ndefine('skylark-langx/datetimes',[],function(){\r\n     function parseMilliSeconds(str) {\r\n\r\n        var strs = str.split(' ');\r\n        var number = parseInt(strs[0]);\r\n\r\n        if (isNaN(number)){\r\n            return 0;\r\n        }\r\n\r\n        var min = 60000 * 60;\r\n\r\n        switch (strs[1].trim().replace(/\\./g, '')) {\r\n            case 'minutes':\r\n            case 'minute':\r\n            case 'min':\r\n            case 'mm':\r\n            case 'm':\r\n                return 60000 * number;\r\n            case 'hours':\r\n            case 'hour':\r\n            case 'HH':\r\n            case 'hh':\r\n            case 'h':\r\n            case 'H':\r\n                return min * number;\r\n            case 'seconds':\r\n            case 'second':\r\n            case 'sec':\r\n            case 'ss':\r\n            case 's':\r\n                return 1000 * number;\r\n            case 'days':\r\n            case 'day':\r\n            case 'DD':\r\n            case 'dd':\r\n            case 'd':\r\n                return (min * 24) * number;\r\n            case 'months':\r\n            case 'month':\r\n            case 'MM':\r\n            case 'M':\r\n                return (min * 24 * 28) * number;\r\n            case 'weeks':\r\n            case 'week':\r\n            case 'W':\r\n            case 'w':\r\n                return (min * 24 * 7) * number;\r\n            case 'years':\r\n            case 'year':\r\n            case 'yyyy':\r\n            case 'yy':\r\n            case 'y':\r\n                return (min * 24 * 365) * number;\r\n            default:\r\n                return 0;\r\n        }\r\n    };\r\n\t\r\n\treturn {\r\n\t\tparseMilliSeconds\r\n\t};\r\n});\ndefine('skylark-langx/Evented',[\r\n    \"./klass\",\r\n    \"./arrays\",\r\n    \"./objects\",\r\n\t\"./types\"\r\n],function(klass,arrays,objects,types){\r\n\tvar slice = Array.prototype.slice,\r\n        compact = arrays.compact,\r\n        isDefined = types.isDefined,\r\n        isPlainObject = types.isPlainObject,\r\n\t\tisFunction = types.isFunction,\r\n\t\tisString = types.isString,\r\n\t\tisEmptyObject = types.isEmptyObject,\r\n\t\tmixin = objects.mixin;\r\n\r\n    var Evented = klass({\r\n        on: function(events, selector, data, callback, ctx, /*used internally*/ one) {\r\n            var self = this,\r\n                _hub = this._hub || (this._hub = {});\r\n\r\n            if (isPlainObject(events)) {\r\n                ctx = callback;\r\n                each(events, function(type, fn) {\r\n                    self.on(type, selector, data, fn, ctx, one);\r\n                });\r\n                return this;\r\n            }\r\n\r\n            if (!isString(selector) && !isFunction(callback)) {\r\n                ctx = callback;\r\n                callback = data;\r\n                data = selector;\r\n                selector = undefined;\r\n            }\r\n\r\n            if (isFunction(data)) {\r\n                ctx = callback;\r\n                callback = data;\r\n                data = null;\r\n            }\r\n\r\n            if (isString(events)) {\r\n                events = events.split(/\\s/)\r\n            }\r\n\r\n            events.forEach(function(name) {\r\n                (_hub[name] || (_hub[name] = [])).push({\r\n                    fn: callback,\r\n                    selector: selector,\r\n                    data: data,\r\n                    ctx: ctx,\r\n                    one: one\r\n                });\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        one: function(events, selector, data, callback, ctx) {\r\n            return this.on(events, selector, data, callback, ctx, 1);\r\n        },\r\n\r\n        trigger: function(e /*,argument list*/ ) {\r\n            if (!this._hub) {\r\n                return this;\r\n            }\r\n\r\n            var self = this;\r\n\r\n            if (isString(e)) {\r\n                e = new CustomEvent(e);\r\n            }\r\n\r\n            Object.defineProperty(e,\"target\",{\r\n                value : this\r\n            });\r\n\r\n            var args = slice.call(arguments, 1);\r\n            if (isDefined(args)) {\r\n                args = [e].concat(args);\r\n            } else {\r\n                args = [e];\r\n            }\r\n            [e.type || e.name, \"all\"].forEach(function(eventName) {\r\n                var listeners = self._hub[eventName];\r\n                if (!listeners) {\r\n                    return;\r\n                }\r\n\r\n                var len = listeners.length,\r\n                    reCompact = false;\r\n\r\n                for (var i = 0; i < len; i++) {\r\n                    var listener = listeners[i];\r\n                    if (e.data) {\r\n                        if (listener.data) {\r\n                            e.data = mixin({}, listener.data, e.data);\r\n                        }\r\n                    } else {\r\n                        e.data = listener.data || null;\r\n                    }\r\n                    listener.fn.apply(listener.ctx, args);\r\n                    if (listener.one) {\r\n                        listeners[i] = null;\r\n                        reCompact = true;\r\n                    }\r\n                }\r\n\r\n                if (reCompact) {\r\n                    self._hub[eventName] = compact(listeners);\r\n                }\r\n\r\n            });\r\n            return this;\r\n        },\r\n\r\n        listened: function(event) {\r\n            var evtArr = ((this._hub || (this._events = {}))[event] || []);\r\n            return evtArr.length > 0;\r\n        },\r\n\r\n        listenTo: function(obj, event, callback, /*used internally*/ one) {\r\n            if (!obj) {\r\n                return this;\r\n            }\r\n\r\n            // Bind callbacks on obj,\r\n            if (isString(callback)) {\r\n                callback = this[callback];\r\n            }\r\n\r\n            if (one) {\r\n                obj.one(event, callback, this);\r\n            } else {\r\n                obj.on(event, callback, this);\r\n            }\r\n\r\n            //keep track of them on listening.\r\n            var listeningTo = this._listeningTo || (this._listeningTo = []),\r\n                listening;\r\n\r\n            for (var i = 0; i < listeningTo.length; i++) {\r\n                if (listeningTo[i].obj == obj) {\r\n                    listening = listeningTo[i];\r\n                    break;\r\n                }\r\n            }\r\n            if (!listening) {\r\n                listeningTo.push(\r\n                    listening = {\r\n                        obj: obj,\r\n                        events: {}\r\n                    }\r\n                );\r\n            }\r\n            var listeningEvents = listening.events,\r\n                listeningEvent = listeningEvents[event] = listeningEvents[event] || [];\r\n            if (listeningEvent.indexOf(callback) == -1) {\r\n                listeningEvent.push(callback);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        listenToOnce: function(obj, event, callback) {\r\n            return this.listenTo(obj, event, callback, 1);\r\n        },\r\n\r\n        off: function(events, callback) {\r\n            var _hub = this._hub || (this._hub = {});\r\n            if (isString(events)) {\r\n                events = events.split(/\\s/)\r\n            }\r\n\r\n            events.forEach(function(name) {\r\n                var evts = _hub[name];\r\n                var liveEvents = [];\r\n\r\n                if (evts && callback) {\r\n                    for (var i = 0, len = evts.length; i < len; i++) {\r\n                        if (evts[i].fn !== callback && evts[i].fn._ !== callback)\r\n                            liveEvents.push(evts[i]);\r\n                    }\r\n                }\r\n\r\n                if (liveEvents.length) {\r\n                    _hub[name] = liveEvents;\r\n                } else {\r\n                    delete _hub[name];\r\n                }\r\n            });\r\n\r\n            return this;\r\n        },\r\n        unlistenTo: function(obj, event, callback) {\r\n            var listeningTo = this._listeningTo;\r\n            if (!listeningTo) {\r\n                return this;\r\n            }\r\n            for (var i = 0; i < listeningTo.length; i++) {\r\n                var listening = listeningTo[i];\r\n\r\n                if (obj && obj != listening.obj) {\r\n                    continue;\r\n                }\r\n\r\n                var listeningEvents = listening.events;\r\n                for (var eventName in listeningEvents) {\r\n                    if (event && event != eventName) {\r\n                        continue;\r\n                    }\r\n\r\n                    var listeningEvent = listeningEvents[eventName];\r\n\r\n                    for (var j = 0; j < listeningEvent.length; j++) {\r\n                        if (!callback || callback == listeningEvent[i]) {\r\n                            listening.obj.off(eventName, listeningEvent[i], this);\r\n                            listeningEvent[i] = null;\r\n                        }\r\n                    }\r\n\r\n                    listeningEvent = listeningEvents[eventName] = compact(listeningEvent);\r\n\r\n                    if (isEmptyObject(listeningEvent)) {\r\n                        listeningEvents[eventName] = null;\r\n                    }\r\n\r\n                }\r\n\r\n                if (isEmptyObject(listeningEvents)) {\r\n                    listeningTo[i] = null;\r\n                }\r\n            }\r\n\r\n            listeningTo = this._listeningTo = compact(listeningTo);\r\n            if (isEmptyObject(listeningTo)) {\r\n                this._listeningTo = null;\r\n            }\r\n\r\n            return this;\r\n        }\r\n    });\r\n\r\n\treturn Evented;\r\n\r\n});\ndefine('skylark-langx/strings',[\r\n],function(){\r\n\r\n     /*\r\n     * Converts camel case into dashes.\r\n     * @param {String} str\r\n     * @return {String}\r\n     * @exapmle marginTop -> margin-top\r\n     */\r\n    function dasherize(str) {\r\n        return str.replace(/::/g, '/')\r\n            .replace(/([A-Z]+)([A-Z][a-z])/g, '$1_$2')\r\n            .replace(/([a-z\\d])([A-Z])/g, '$1_$2')\r\n            .replace(/_/g, '-')\r\n            .toLowerCase();\r\n    }\r\n\r\n    function deserializeValue(value) {\r\n        try {\r\n            return value ?\r\n                value == \"true\" ||\r\n                (value == \"false\" ? false :\r\n                    value == \"null\" ? null :\r\n                    +value + \"\" == value ? +value :\r\n                    /^[\\[\\{]/.test(value) ? JSON.parse(value) :\r\n                    value) : value;\r\n        } catch (e) {\r\n            return value;\r\n        }\r\n    }\r\n\r\n\r\n    function trim(str) {\r\n        return str == null ? \"\" : String.prototype.trim.call(str);\r\n    }\r\n    function substitute( /*String*/ template,\r\n        /*Object|Array*/\r\n        map,\r\n        /*Function?*/\r\n        transform,\r\n        /*Object?*/\r\n        thisObject) {\r\n        // summary:\r\n        //    Performs parameterized substitutions on a string. Throws an\r\n        //    exception if any parameter is unmatched.\r\n        // template:\r\n        //    a string with expressions in the form `${key}` to be replaced or\r\n        //    `${key:format}` which specifies a format function. keys are case-sensitive.\r\n        // map:\r\n        //    hash to search for substitutions\r\n        // transform:\r\n        //    a function to process all parameters before substitution takes\r\n\r\n\r\n        thisObject = thisObject || window;\r\n        transform = transform ?\r\n            proxy(thisObject, transform) : function(v) {\r\n                return v;\r\n            };\r\n\r\n        function getObject(key, map) {\r\n            if (key.match(/\\./)) {\r\n                var retVal,\r\n                    getValue = function(keys, obj) {\r\n                        var _k = keys.pop();\r\n                        if (_k) {\r\n                            if (!obj[_k]) return null;\r\n                            return getValue(keys, retVal = obj[_k]);\r\n                        } else {\r\n                            return retVal;\r\n                        }\r\n                    };\r\n                return getValue(key.split(\".\").reverse(), map);\r\n            } else {\r\n                return map[key];\r\n            }\r\n        }\r\n\r\n        return template.replace(/\\$\\{([^\\s\\:\\}]+)(?:\\:([^\\s\\:\\}]+))?\\}/g,\r\n            function(match, key, format) {\r\n                var value = getObject(key, map);\r\n                if (format) {\r\n                    value = getObject(format, thisObject).call(thisObject, value, key);\r\n                }\r\n                return transform(value, key).toString();\r\n            }); // String\r\n    }\r\n\r\n    var idCounter = 0;\r\n    function uniqueId (prefix) {\r\n        var id = ++idCounter + '';\r\n        return prefix ? prefix + id : id;\r\n    }\r\n\r\n\treturn {\r\n        camelCase: function(str) {\r\n            return str.replace(/-([\\da-z])/g, function(a) {\r\n                return a.toUpperCase().replace('-', '');\r\n            });\r\n        },\r\n\r\n        dasherize: dasherize,\r\n\r\n        deserializeValue: deserializeValue,\r\n\r\n        lowerFirst: function(str) {\r\n            return str.charAt(0).toLowerCase() + str.slice(1);\r\n        },\r\n\r\n        serializeValue: function(value) {\r\n            return JSON.stringify(value)\r\n        },\r\n\r\n\r\n        substitute: substitute,\r\n\r\n        trim: trim,\r\n\r\n        uniqueId: uniqueId,\r\n\r\n        upperFirst: function(str) {\r\n            return str.charAt(0).toUpperCase() + str.slice(1);\r\n        }\r\n\t} ; \r\n\r\n});\ndefine('skylark-langx/Xhr',[\r\n    \"./arrays\",\r\n    \"./Deferred\",\r\n    \"./Evented\",\r\n    \"./objects\",\r\n    \"./funcs\",\r\n    \"./types\"\r\n],function(arrays,Deferred,Evented,objects,funcs,types){\r\n    var each = objects.each,\r\n        mixin = objects.mixin,\r\n        noop = funcs.noop,\r\n        isArray = types.isArray,\r\n        isFunction = types.isFunction,\r\n        isPlainObject = types.isPlainObject,\r\n        type = types.type;\r\n \r\n     var getAbsoluteUrl = (function() {\r\n        var a;\r\n\r\n        return function(url) {\r\n            if (!a) a = document.createElement('a');\r\n            a.href = url;\r\n\r\n            return a.href;\r\n        };\r\n    })();\r\n   \r\n    var Xhr = (function(){\r\n        var jsonpID = 0,\r\n            key,\r\n            name,\r\n            rscript = /<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi,\r\n            scriptTypeRE = /^(?:text|application)\\/javascript/i,\r\n            xmlTypeRE = /^(?:text|application)\\/xml/i,\r\n            jsonType = 'application/json',\r\n            htmlType = 'text/html',\r\n            blankRE = /^\\s*$/;\r\n\r\n        var XhrDefaultOptions = {\r\n            async: true,\r\n\r\n            // Default type of request\r\n            type: 'GET',\r\n            // Callback that is executed before request\r\n            beforeSend: noop,\r\n            // Callback that is executed if the request succeeds\r\n            success: noop,\r\n            // Callback that is executed the the server drops error\r\n            error: noop,\r\n            // Callback that is executed on request complete (both: error and success)\r\n            complete: noop,\r\n            // The context for the callbacks\r\n            context: null,\r\n            // Whether to trigger \"global\" Ajax events\r\n            global: true,\r\n\r\n            // MIME types mapping\r\n            // IIS returns Javascript as \"application/x-javascript\"\r\n            accepts: {\r\n                script: 'text/javascript, application/javascript, application/x-javascript',\r\n                json: 'application/json',\r\n                xml: 'application/xml, text/xml',\r\n                html: 'text/html',\r\n                text: 'text/plain'\r\n            },\r\n            // Whether the request is to another domain\r\n            crossDomain: false,\r\n            // Default timeout\r\n            timeout: 0,\r\n            // Whether data should be serialized to string\r\n            processData: true,\r\n            // Whether the browser should be allowed to cache GET responses\r\n            cache: true,\r\n\r\n            xhrFields : {\r\n                withCredentials : true\r\n            }\r\n        };\r\n\r\n        function mimeToDataType(mime) {\r\n            if (mime) {\r\n                mime = mime.split(';', 2)[0];\r\n            }\r\n            if (mime) {\r\n                if (mime == htmlType) {\r\n                    return \"html\";\r\n                } else if (mime == jsonType) {\r\n                    return \"json\";\r\n                } else if (scriptTypeRE.test(mime)) {\r\n                    return \"script\";\r\n                } else if (xmlTypeRE.test(mime)) {\r\n                    return \"xml\";\r\n                }\r\n            }\r\n            return \"text\";\r\n        }\r\n\r\n        function appendQuery(url, query) {\r\n            if (query == '') return url\r\n            return (url + '&' + query).replace(/[&?]{1,2}/, '?')\r\n        }\r\n\r\n        // serialize payload and append it to the URL for GET requests\r\n        function serializeData(options) {\r\n            options.data = options.data || options.query;\r\n            if (options.processData && options.data && type(options.data) != \"string\") {\r\n                options.data = param(options.data, options.traditional);\r\n            }\r\n            if (options.data && (!options.type || options.type.toUpperCase() == 'GET')) {\r\n                options.url = appendQuery(options.url, options.data);\r\n                options.data = undefined;\r\n            }\r\n        }\r\n\r\n        function serialize(params, obj, traditional, scope) {\r\n            var t, array = isArray(obj),\r\n                hash = isPlainObject(obj)\r\n            each(obj, function(key, value) {\r\n                t =type(value);\r\n                if (scope) key = traditional ? scope :\r\n                    scope + '[' + (hash || t == 'object' || t == 'array' ? key : '') + ']'\r\n                // handle data in serializeArray() format\r\n                if (!scope && array) params.add(value.name, value.value)\r\n                // recurse into nested objects\r\n                else if (t == \"array\" || (!traditional && t == \"object\"))\r\n                    serialize(params, value, traditional, key)\r\n                else params.add(key, value)\r\n            })\r\n        }\r\n\r\n        var param = function(obj, traditional) {\r\n            var params = []\r\n            params.add = function(key, value) {\r\n                if (isFunction(value)) value = value()\r\n                if (value == null) value = \"\"\r\n                this.push(escape(key) + '=' + escape(value))\r\n            }\r\n            serialize(params, obj, traditional)\r\n            return params.join('&').replace(/%20/g, '+')\r\n        };\r\n\r\n        var Xhr = Evented.inherit({\r\n            klassName : \"Xhr\",\r\n\r\n            _request  : function(args) {\r\n                var _ = this._,\r\n                    self = this,\r\n                    options = mixin({},XhrDefaultOptions,_.options,args),\r\n                    xhr = _.xhr = new XMLHttpRequest();\r\n\r\n                serializeData(options)\r\n\r\n                var dataType = options.dataType || options.handleAs,\r\n                    mime = options.mimeType || options.accepts[dataType],\r\n                    headers = options.headers,\r\n                    xhrFields = options.xhrFields,\r\n                    isFormData = options.data && options.data instanceof FormData,\r\n                    basicAuthorizationToken = options.basicAuthorizationToken,\r\n                    type = options.type,\r\n                    url = options.url,\r\n                    async = options.async,\r\n                    user = options.user , \r\n                    password = options.password,\r\n                    deferred = new Deferred(),\r\n                    contentType = isFormData ? false : 'application/x-www-form-urlencoded';\r\n\r\n                if (xhrFields) {\r\n                    for (name in xhrFields) {\r\n                        xhr[name] = xhrFields[name];\r\n                    }\r\n                }\r\n\r\n                if (mime && mime.indexOf(',') > -1) {\r\n                    mime = mime.split(',', 2)[0];\r\n                }\r\n                if (mime && xhr.overrideMimeType) {\r\n                    xhr.overrideMimeType(mime);\r\n                }\r\n\r\n                //if (dataType) {\r\n                //    xhr.responseType = dataType;\r\n                //}\r\n\r\n                var finish = function() {\r\n                    xhr.onloadend = noop;\r\n                    xhr.onabort = noop;\r\n                    xhr.onprogress = noop;\r\n                    xhr.ontimeout = noop;\r\n                    xhr = null;\r\n                }\r\n                var onloadend = function() {\r\n                    var result, error = false\r\n                    if ((xhr.status >= 200 && xhr.status < 300) || xhr.status == 304 || (xhr.status == 0 && getAbsoluteUrl(url).startsWith('file:'))) {\r\n                        dataType = dataType || mimeToDataType(options.mimeType || xhr.getResponseHeader('content-type'));\r\n\r\n                        result = xhr.responseText;\r\n                        try {\r\n                            if (dataType == 'script') {\r\n                                eval(result);\r\n                            } else if (dataType == 'xml') {\r\n                                result = xhr.responseXML;\r\n                            } else if (dataType == 'json') {\r\n                                result = blankRE.test(result) ? null : JSON.parse(result);\r\n                            } else if (dataType == \"blob\") {\r\n                                result = Blob([xhrObj.response]);\r\n                            } else if (dataType == \"arraybuffer\") {\r\n                                result = xhr.reponse;\r\n                            }\r\n                        } catch (e) { \r\n                            error = e;\r\n                        }\r\n\r\n                        if (error) {\r\n                            deferred.reject(error,xhr.status,xhr);\r\n                        } else {\r\n                            deferred.resolve(result,xhr.status,xhr);\r\n                        }\r\n                    } else {\r\n                        deferred.reject(new Error(xhr.statusText),xhr.status,xhr);\r\n                    }\r\n                    finish();\r\n                };\r\n\r\n                var onabort = function() {\r\n                    if (deferred) {\r\n                        deferred.reject(new Error(\"abort\"),xhr.status,xhr);\r\n                    }\r\n                    finish();                 \r\n                }\r\n \r\n                var ontimeout = function() {\r\n                    if (deferred) {\r\n                        deferred.reject(new Error(\"timeout\"),xhr.status,xhr);\r\n                    }\r\n                    finish();                 \r\n                }\r\n\r\n                var onprogress = function(evt) {\r\n                    if (deferred) {\r\n                        deferred.notify(evt,xhr.status,xhr);\r\n                    }\r\n                }\r\n\r\n                xhr.onloadend = onloadend;\r\n                xhr.onabort = onabort;\r\n                xhr.ontimeout = ontimeout;\r\n                xhr.onprogress = onprogress;\r\n\r\n                xhr.open(type, url, async, user, password);\r\n               \r\n                if (headers) {\r\n                    for ( var key in headers) {\r\n                        var value = headers[key];\r\n \r\n                        if(key.toLowerCase() === 'content-type'){\r\n                            contentType = headers[hdr];\r\n                        } else {\r\n                           xhr.setRequestHeader(key, value);\r\n                        }\r\n                    }\r\n                }   \r\n\r\n                if  (contentType && contentType !== false){\r\n                    xhr.setRequestHeader('Content-Type', contentType);\r\n                }\r\n\r\n                if(!headers || !('X-Requested-With' in headers)){\r\n                    xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\r\n                }\r\n\r\n\r\n                //If basicAuthorizationToken is defined set its value into \"Authorization\" header\r\n                if (basicAuthorizationToken) {\r\n                    xhr.setRequestHeader(\"Authorization\", basicAuthorizationToken);\r\n                }\r\n\r\n                xhr.send(options.data ? options.data : null);\r\n\r\n                return deferred.promise;\r\n\r\n            },\r\n\r\n            \"abort\": function() {\r\n                var _ = this._,\r\n                    xhr = _.xhr;\r\n\r\n                if (xhr) {\r\n                    xhr.abort();\r\n                }    \r\n            },\r\n\r\n\r\n            \"request\": function(args) {\r\n                return this._request(args);\r\n            },\r\n\r\n            get : function(args) {\r\n                args = args || {};\r\n                args.type = \"GET\";\r\n                return this._request(args);\r\n            },\r\n\r\n            post : function(args) {\r\n                args = args || {};\r\n                args.type = \"POST\";\r\n                return this._request(args);\r\n            },\r\n\r\n            patch : function(args) {\r\n                args = args || {};\r\n                args.type = \"PATCH\";\r\n                return this._request(args);\r\n            },\r\n\r\n            put : function(args) {\r\n                args = args || {};\r\n                args.type = \"PUT\";\r\n                return this._request(args);\r\n            },\r\n\r\n            del : function(args) {\r\n                args = args || {};\r\n                args.type = \"DELETE\";\r\n                return this._request(args);\r\n            },\r\n\r\n            \"init\": function(options) {\r\n                this._ = {\r\n                    options : options || {}\r\n                };\r\n            }\r\n        });\r\n\r\n        [\"request\",\"get\",\"post\",\"put\",\"del\",\"patch\"].forEach(function(name){\r\n            Xhr[name] = function(url,args) {\r\n                var xhr = new Xhr({\"url\" : url});\r\n                return xhr[name](args);\r\n            };\r\n        });\r\n\r\n        Xhr.defaultOptions = XhrDefaultOptions;\r\n        Xhr.param = param;\r\n\r\n        return Xhr;\r\n    })();\r\n\r\n\treturn Xhr;\t\r\n});\ndefine('skylark-langx/Restful',[\r\n    \"./Evented\",\r\n    \"./objects\",\r\n    \"./strings\",\r\n    \"./Xhr\"\r\n],function(Evented,objects,strings,Xhr){\r\n    var mixin = objects.mixin,\r\n        substitute = strings.substitute;\r\n\r\n    var Restful = Evented.inherit({\r\n        \"klassName\" : \"Restful\",\r\n\r\n        \"idAttribute\": \"id\",\r\n        \r\n        getBaseUrl : function(args) {\r\n            //$$baseEndpoint : \"/files/${fileId}/comments\",\r\n            var baseEndpoint = substitute(this.baseEndpoint,args),\r\n                baseUrl = this.server + this.basePath + baseEndpoint;\r\n            if (args[this.idAttribute]!==undefined) {\r\n                baseUrl = baseUrl + \"/\" + args[this.idAttribute]; \r\n            }\r\n            return baseUrl;\r\n        },\r\n        _head : function(args) {\r\n            //get resource metadata .\r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n        },\r\n        _get : function(args) {\r\n            //get resource ,one or list .\r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, null if list\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n            return Xhr.get(this.getBaseUrl(args),args);\r\n        },\r\n        _post  : function(args,verb) {\r\n            //create or move resource .\r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"data\" : body // the own data,required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n            //verb : the verb ,ex: copy,touch,trash,untrash,watch\r\n            var url = this.getBaseUrl(args);\r\n            if (verb) {\r\n                url = url + \"/\" + verb;\r\n            }\r\n            return Xhr.post(url, args);\r\n        },\r\n\r\n        _put  : function(args,verb) {\r\n            //update resource .\r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"data\" : body // the own data,required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n            //verb : the verb ,ex: copy,touch,trash,untrash,watch\r\n            var url = this.getBaseUrl(args);\r\n            if (verb) {\r\n                url = url + \"/\" + verb;\r\n            }\r\n            return Xhr.put(url, args);\r\n        },\r\n\r\n        _delete : function(args) {\r\n            //delete resource . \r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}         \r\n\r\n            // HTTP request : DELETE http://center.utilhub.com/registry/v1/apps/{appid}\r\n            var url = this.getBaseUrl(args);\r\n            return Xhr.del(url);\r\n        },\r\n\r\n        _patch : function(args){\r\n            //update resource metadata. \r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"data\" : body // the own data,required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n            var url = this.getBaseUrl(args);\r\n            return Xhr.patch(url, args);\r\n        },\r\n        query: function(params) {\r\n            \r\n            return this._post(params);\r\n        },\r\n\r\n        retrieve: function(params) {\r\n            return this._get(params);\r\n        },\r\n\r\n        create: function(params) {\r\n            return this._post(params);\r\n        },\r\n\r\n        update: function(params) {\r\n            return this._put(params);\r\n        },\r\n\r\n        delete: function(params) {\r\n            // HTTP request : DELETE http://center.utilhub.com/registry/v1/apps/{appid}\r\n            return this._delete(params);\r\n        },\r\n\r\n        patch: function(params) {\r\n           // HTTP request : PATCH http://center.utilhub.com/registry/v1/apps/{appid}\r\n            return this._patch(params);\r\n        },\r\n        init: function(params) {\r\n            mixin(this,params);\r\n //           this._xhr = XHRx();\r\n       }\r\n    });\r\n\r\n    return Restful;\r\n});\ndefine('skylark-langx/Stateful',[\r\n\t\"./Evented\",\r\n  \"./strings\",\r\n  \"./objects\"\r\n],function(Evented,strings,objects){\r\n    var isEqual = objects.isEqual,\r\n        mixin = objects.mixin,\r\n        result = objects.result,\r\n        isEmptyObject = objects.isEmptyObject,\r\n        clone = objects.clone,\r\n        uniqueId = strings.uniqueId;\r\n\r\n    var Stateful = Evented.inherit({\r\n        _construct : function(attributes, options) {\r\n            var attrs = attributes || {};\r\n            options || (options = {});\r\n            this.cid = uniqueId(this.cidPrefix);\r\n            this.attributes = {};\r\n            if (options.collection) this.collection = options.collection;\r\n            if (options.parse) attrs = this.parse(attrs, options) || {};\r\n            var defaults = result(this, 'defaults');\r\n            attrs = mixin({}, defaults, attrs);\r\n            this.set(attrs, options);\r\n            this.changed = {};\r\n        },\r\n\r\n        // A hash of attributes whose current and previous value differ.\r\n        changed: null,\r\n\r\n        // The value returned during the last failed validation.\r\n        validationError: null,\r\n\r\n        // The default name for the JSON `id` attribute is `\"id\"`. MongoDB and\r\n        // CouchDB users may want to set this to `\"_id\"`.\r\n        idAttribute: 'id',\r\n\r\n        // The prefix is used to create the client id which is used to identify models locally.\r\n        // You may want to override this if you're experiencing name clashes with model ids.\r\n        cidPrefix: 'c',\r\n\r\n\r\n        // Return a copy of the model's `attributes` object.\r\n        toJSON: function(options) {\r\n          return clone(this.attributes);\r\n        },\r\n\r\n\r\n        // Get the value of an attribute.\r\n        get: function(attr) {\r\n          return this.attributes[attr];\r\n        },\r\n\r\n        // Returns `true` if the attribute contains a value that is not null\r\n        // or undefined.\r\n        has: function(attr) {\r\n          return this.get(attr) != null;\r\n        },\r\n\r\n        // Set a hash of model attributes on the object, firing `\"change\"`. This is\r\n        // the core primitive operation of a model, updating the data and notifying\r\n        // anyone who needs to know about the change in state. The heart of the beast.\r\n        set: function(key, val, options) {\r\n          if (key == null) return this;\r\n\r\n          // Handle both `\"key\", value` and `{key: value}` -style arguments.\r\n          var attrs;\r\n          if (typeof key === 'object') {\r\n            attrs = key;\r\n            options = val;\r\n          } else {\r\n            (attrs = {})[key] = val;\r\n          }\r\n\r\n          options || (options = {});\r\n\r\n          // Run validation.\r\n          if (!this._validate(attrs, options)) return false;\r\n\r\n          // Extract attributes and options.\r\n          var unset      = options.unset;\r\n          var silent     = options.silent;\r\n          var changes    = [];\r\n          var changing   = this._changing;\r\n          this._changing = true;\r\n\r\n          if (!changing) {\r\n            this._previousAttributes = clone(this.attributes);\r\n            this.changed = {};\r\n          }\r\n\r\n          var current = this.attributes;\r\n          var changed = this.changed;\r\n          var prev    = this._previousAttributes;\r\n\r\n          // For each `set` attribute, update or delete the current value.\r\n          for (var attr in attrs) {\r\n            val = attrs[attr];\r\n            if (!isEqual(current[attr], val)) changes.push(attr);\r\n            if (!isEqual(prev[attr], val)) {\r\n              changed[attr] = val;\r\n            } else {\r\n              delete changed[attr];\r\n            }\r\n            unset ? delete current[attr] : current[attr] = val;\r\n          }\r\n\r\n          // Update the `id`.\r\n          if (this.idAttribute in attrs) this.id = this.get(this.idAttribute);\r\n\r\n          // Trigger all relevant attribute changes.\r\n          if (!silent) {\r\n            if (changes.length) this._pending = options;\r\n            for (var i = 0; i < changes.length; i++) {\r\n              this.trigger('change:' + changes[i], this, current[changes[i]], options);\r\n            }\r\n          }\r\n\r\n          // You might be wondering why there's a `while` loop here. Changes can\r\n          // be recursively nested within `\"change\"` events.\r\n          if (changing) return this;\r\n          if (!silent) {\r\n            while (this._pending) {\r\n              options = this._pending;\r\n              this._pending = false;\r\n              this.trigger('change', this, options);\r\n            }\r\n          }\r\n          this._pending = false;\r\n          this._changing = false;\r\n          return this;\r\n        },\r\n\r\n        // Remove an attribute from the model, firing `\"change\"`. `unset` is a noop\r\n        // if the attribute doesn't exist.\r\n        unset: function(attr, options) {\r\n          return this.set(attr, void 0, mixin({}, options, {unset: true}));\r\n        },\r\n\r\n        // Clear all attributes on the model, firing `\"change\"`.\r\n        clear: function(options) {\r\n          var attrs = {};\r\n          for (var key in this.attributes) attrs[key] = void 0;\r\n          return this.set(attrs, mixin({}, options, {unset: true}));\r\n        },\r\n\r\n        // Determine if the model has changed since the last `\"change\"` event.\r\n        // If you specify an attribute name, determine if that attribute has changed.\r\n        hasChanged: function(attr) {\r\n          if (attr == null) return !isEmptyObject(this.changed);\r\n          return this.changed[attr] !== undefined;\r\n        },\r\n\r\n        // Return an object containing all the attributes that have changed, or\r\n        // false if there are no changed attributes. Useful for determining what\r\n        // parts of a view need to be updated and/or what attributes need to be\r\n        // persisted to the server. Unset attributes will be set to undefined.\r\n        // You can also pass an attributes object to diff against the model,\r\n        // determining if there *would be* a change.\r\n        changedAttributes: function(diff) {\r\n          if (!diff) return this.hasChanged() ? clone(this.changed) : false;\r\n          var old = this._changing ? this._previousAttributes : this.attributes;\r\n          var changed = {};\r\n          for (var attr in diff) {\r\n            var val = diff[attr];\r\n            if (isEqual(old[attr], val)) continue;\r\n            changed[attr] = val;\r\n          }\r\n          return !isEmptyObject(changed) ? changed : false;\r\n        },\r\n\r\n        // Get the previous value of an attribute, recorded at the time the last\r\n        // `\"change\"` event was fired.\r\n        previous: function(attr) {\r\n          if (attr == null || !this._previousAttributes) return null;\r\n          return this._previousAttributes[attr];\r\n        },\r\n\r\n        // Get all of the attributes of the model at the time of the previous\r\n        // `\"change\"` event.\r\n        previousAttributes: function() {\r\n          return clone(this._previousAttributes);\r\n        },\r\n\r\n        // Create a new model with identical attributes to this one.\r\n        clone: function() {\r\n          return new this.constructor(this.attributes);\r\n        },\r\n\r\n        // A model is new if it has never been saved to the server, and lacks an id.\r\n        isNew: function() {\r\n          return !this.has(this.idAttribute);\r\n        },\r\n\r\n        // Check if the model is currently in a valid state.\r\n        isValid: function(options) {\r\n          return this._validate({}, mixin({}, options, {validate: true}));\r\n        },\r\n\r\n        // Run validation against the next complete set of model attributes,\r\n        // returning `true` if all is well. Otherwise, fire an `\"invalid\"` event.\r\n        _validate: function(attrs, options) {\r\n          if (!options.validate || !this.validate) return true;\r\n          attrs = mixin({}, this.attributes, attrs);\r\n          var error = this.validationError = this.validate(attrs, options) || null;\r\n          if (!error) return true;\r\n          this.trigger('invalid', this, error, mixin(options, {validationError: error}));\r\n          return false;\r\n        }\r\n    });\r\n\r\n\treturn Stateful;\r\n});\ndefine('skylark-langx/langx',[\r\n    \"./skylark\",\r\n    \"./arrays\",\r\n    \"./ArrayStore\",\r\n    \"./aspect\",\r\n    \"./async\",\r\n    \"./datetimes\",\r\n    \"./Deferred\",\r\n    \"./Evented\",\r\n    \"./funcs\",\r\n    \"./klass\",\r\n    \"./numbers\",\r\n    \"./objects\",\r\n    \"./Restful\",\r\n    \"./Stateful\",\r\n    \"./strings\",\r\n    \"./types\",\r\n    \"./Xhr\"\r\n], function(skylark,arrays,ArrayStore,aspect,async,datetimes,Deferred,Evented,funcs,klass,numbers,objects,Restful,Stateful,strings,types,Xhr) {\r\n    \"use strict\";\r\n    var toString = {}.toString,\r\n        concat = Array.prototype.concat,\r\n        indexOf = Array.prototype.indexOf,\r\n        slice = Array.prototype.slice,\r\n        filter = Array.prototype.filter,\r\n        mixin = objects.mixin,\r\n        safeMixin = objects.safeMixin,\r\n        isFunction = types.isFunction;\r\n\r\n\r\n    function createEvent(type, props) {\r\n        var e = new CustomEvent(type, props);\r\n\r\n        return safeMixin(e, props);\r\n    }\r\n    \r\n\r\n    function funcArg(context, arg, idx, payload) {\r\n        return isFunction(arg) ? arg.call(context, idx, payload) : arg;\r\n    }\r\n\r\n    function getQueryParams(url) {\r\n        var url = url || window.location.href,\r\n            segs = url.split(\"?\"),\r\n            params = {};\r\n\r\n        if (segs.length > 1) {\r\n            segs[1].split(\"&\").forEach(function(queryParam) {\r\n                var nv = queryParam.split('=');\r\n                params[nv[0]] = nv[1];\r\n            });\r\n        }\r\n        return params;\r\n    }\r\n\r\n\r\n    function toPixel(value) {\r\n        // style values can be floats, client code may want\r\n        // to round for integer pixels.\r\n        return parseFloat(value) || 0;\r\n    }\r\n\r\n\r\n    var _uid = 1;\r\n\r\n    function uid(obj) {\r\n        return obj._uid || (obj._uid = _uid++);\r\n    }\r\n\r\n    function langx() {\r\n        return langx;\r\n    }\r\n\r\n    mixin(langx, {\r\n        createEvent : createEvent,\r\n\r\n        funcArg: funcArg,\r\n\r\n        getQueryParams: getQueryParams,\r\n\r\n        toPixel: toPixel,\r\n\r\n        uid: uid,\r\n\r\n        URL: typeof window !== \"undefined\" ? window.URL || window.webkitURL : null\r\n\r\n    });\r\n\r\n\r\n    mixin(langx, arrays,aspect,datetimes,funcs,numbers,objects,strings,types,{\r\n        ArrayStore : ArrayStore,\r\n\r\n        async : async,\r\n        \r\n        Deferred: Deferred,\r\n\r\n        Evented: Evented,\r\n\r\n        klass : klass,\r\n\r\n        Restful: Restful,\r\n        \r\n        Stateful: Stateful,\r\n\r\n        Xhr: Xhr\r\n\r\n    });\r\n\r\n    return skylark.langx = langx;\r\n});\ndefine('skylark-utils-dom/langx',[\r\n    \"skylark-langx/langx\"\r\n], function(langx) {\r\n    return langx;\r\n});\r\n\ndefine('skylark-utils-dom/browser',[\r\n    \"./dom\",\r\n    \"./langx\"\r\n], function(dom,langx) {\r\n    \"use strict\";\r\n \r\n    var checkedCssProperties = {\r\n            \"transitionproperty\": \"TransitionProperty\",\r\n        },\r\n        transEndEventNames = {\r\n          WebkitTransition : 'webkitTransitionEnd',\r\n          MozTransition    : 'transitionend',\r\n          OTransition      : 'oTransitionEnd otransitionend',\r\n          transition       : 'transitionend'\r\n        },\r\n        transEndEventName = null;\r\n\r\n\r\n    var css3PropPrefix = \"\",\r\n        css3StylePrefix = \"\",\r\n        css3EventPrefix = \"\",\r\n\r\n        cssStyles = {},\r\n        cssProps = {},\r\n\r\n        vendorPrefix,\r\n        vendorPrefixRE,\r\n        vendorPrefixesRE = /^(Webkit|webkit|O|Moz|moz|ms)(.*)$/,\r\n\r\n        document = window.document,\r\n        testEl = document.createElement(\"div\"),\r\n\r\n        matchesSelector = testEl.webkitMatchesSelector ||\r\n                          testEl.mozMatchesSelector ||\r\n                          testEl.oMatchesSelector ||\r\n                          testEl.matchesSelector,\r\n\r\n        requestFullScreen = testEl.requestFullscreen || \r\n                            testEl.webkitRequestFullscreen || \r\n                            testEl.mozRequestFullScreen || \r\n                            testEl.msRequestFullscreen,\r\n\r\n        exitFullScreen =  document.exitFullscreen ||\r\n                          document.webkitCancelFullScreen ||\r\n                          document.mozCancelFullScreen ||\r\n                          document.msExitFullscreen,\r\n\r\n        testStyle = testEl.style;\r\n\r\n    for (var name in testStyle) {\r\n        var matched = name.match(vendorPrefixRE || vendorPrefixesRE);\r\n        if (matched) {\r\n            if (!vendorPrefixRE) {\r\n                vendorPrefix = matched[1];\r\n                vendorPrefixRE = new RegExp(\"^(\" + vendorPrefix + \")(.*)$\");\r\n\r\n                css3StylePrefix = vendorPrefix;\r\n                css3PropPrefix = '-' + vendorPrefix.toLowerCase() + '-';\r\n                css3EventPrefix = vendorPrefix.toLowerCase();\r\n            }\r\n\r\n            cssStyles[langx.lowerFirst(matched[2])] = name;\r\n            var cssPropName = langx.dasherize(matched[2]);\r\n            cssProps[cssPropName] = css3PropPrefix + cssPropName;\r\n\r\n            if (transEndEventNames[name]) {\r\n              transEndEventName = transEndEventNames[name];\r\n            }\r\n        }\r\n    }\r\n\r\n    if (!transEndEventName) {\r\n        if (testStyle[\"transition\"] !== undefined) {\r\n            transEndEventName = transEndEventNames[\"transition\"];\r\n        }\r\n    }\r\n\r\n    function normalizeCssEvent(name) {\r\n        return css3EventPrefix ? css3EventPrefix + name : name.toLowerCase();\r\n    }\r\n\r\n    function normalizeCssProperty(name) {\r\n        return cssProps[name] || name;\r\n    }\r\n\r\n    function normalizeStyleProperty(name) {\r\n        return cssStyles[name] || name;\r\n    }\r\n\r\n    function browser() {\r\n        return browser;\r\n    }\r\n\r\n    langx.mixin(browser, {\r\n        css3PropPrefix: css3PropPrefix,\r\n\r\n        isIE : !!/msie/i.exec( window.navigator.userAgent ),\r\n\r\n        normalizeStyleProperty: normalizeStyleProperty,\r\n\r\n        normalizeCssProperty: normalizeCssProperty,\r\n\r\n        normalizeCssEvent: normalizeCssEvent,\r\n\r\n        matchesSelector: matchesSelector,\r\n\r\n        requestFullScreen : requestFullScreen,\r\n\r\n        exitFullscreen : requestFullScreen,\r\n\r\n        location: function() {\r\n            return window.location;\r\n        },\r\n\r\n        support : {\r\n\r\n        }\r\n\r\n    });\r\n\r\n    if  (transEndEventName) {\r\n        browser.support.transition = {\r\n            end : transEndEventName\r\n        };\r\n    }\r\n\r\n    testEl = null;\r\n\r\n    return dom.browser = browser;\r\n});\r\n\ndefine('skylark-utils-dom/styler',[\r\n    \"./dom\",\r\n    \"./langx\"\r\n], function(dom, langx) {\r\n    var every = Array.prototype.every,\r\n        forEach = Array.prototype.forEach,\r\n        camelCase = langx.camelCase,\r\n        dasherize = langx.dasherize;\r\n\r\n    function maybeAddPx(name, value) {\r\n        return (typeof value == \"number\" && !cssNumber[dasherize(name)]) ? value + \"px\" : value\r\n    }\r\n\r\n    var cssNumber = {\r\n            'column-count': 1,\r\n            'columns': 1,\r\n            'font-weight': 1,\r\n            'line-height': 1,\r\n            'opacity': 1,\r\n            'z-index': 1,\r\n            'zoom': 1\r\n        },\r\n        classReCache = {\r\n\r\n        };\r\n\r\n    function classRE(name) {\r\n        return name in classReCache ?\r\n            classReCache[name] : (classReCache[name] = new RegExp('(^|\\\\s)' + name + '(\\\\s|$)'));\r\n    }\r\n\r\n    // access className property while respecting SVGAnimatedString\r\n    /*\r\n     * Adds the specified class(es) to each element in the set of matched elements.\r\n     * @param {HTMLElement} node\r\n     * @param {String} value\r\n     */\r\n    function className(node, value) {\r\n        var klass = node.className || '',\r\n            svg = klass && klass.baseVal !== undefined\r\n\r\n        if (value === undefined) return svg ? klass.baseVal : klass\r\n        svg ? (klass.baseVal = value) : (node.className = value)\r\n    }\r\n\r\n    function disabled(elm, value ) {\r\n        if (arguments.length < 2) {\r\n            return !!this.dom.disabled;\r\n        }\r\n\r\n        elm.disabled = value;\r\n\r\n        return this;\r\n    }\r\n\r\n    var elementDisplay = {};\r\n\r\n    function defaultDisplay(nodeName) {\r\n        var element, display\r\n        if (!elementDisplay[nodeName]) {\r\n            element = document.createElement(nodeName)\r\n            document.body.appendChild(element)\r\n            display = getStyles(element).getPropertyValue(\"display\")\r\n            element.parentNode.removeChild(element)\r\n            display == \"none\" && (display = \"block\")\r\n            elementDisplay[nodeName] = display\r\n        }\r\n        return elementDisplay[nodeName]\r\n    }\r\n    /*\r\n     * Display the matched elements.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function show(elm) {\r\n        styler.css(elm, \"display\", \"\");\r\n        if (styler.css(elm, \"display\") == \"none\") {\r\n            styler.css(elm, \"display\", defaultDisplay(elm.nodeName));\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function isInvisible(elm) {\r\n        return styler.css(elm, \"display\") == \"none\" || styler.css(elm, \"opacity\") == 0;\r\n    }\r\n\r\n    /*\r\n     * Hide the matched elements.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function hide(elm) {\r\n        styler.css(elm, \"display\", \"none\");\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * Adds the specified class(es) to each element in the set of matched elements.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} name\r\n     */\r\n    function addClass(elm, name) {\r\n        if (!name) return this\r\n        var cls = className(elm),\r\n            names;\r\n        if (langx.isString(name)) {\r\n            names = name.split(/\\s+/g);\r\n        } else {\r\n            names = name;\r\n        }\r\n        names.forEach(function(klass) {\r\n            var re = classRE(klass);\r\n            if (!cls.match(re)) {\r\n                cls += (cls ? \" \" : \"\") + klass;\r\n            }\r\n        });\r\n\r\n        className(elm, cls);\r\n\r\n        return this;\r\n    }\r\n\r\n    function getStyles( elem ) {\r\n\r\n        // Support: IE <=11 only, Firefox <=30 (#15098, #14150)\r\n        // IE throws on elements created in popups\r\n        // FF meanwhile throws on frame elements through \"defaultView.getComputedStyle\"\r\n        var view = elem.ownerDocument.defaultView;\r\n\r\n        if ( !view || !view.opener ) {\r\n            view = window;\r\n        }\r\n\r\n        return view.getComputedStyle( elem);\r\n    }\r\n\r\n\r\n    /*\r\n     * Get the value of a computed style property for the first element in the set of matched elements or set one or more CSS properties for every matched element.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} property\r\n     * @param {Any} value\r\n     */\r\n    function css(elm, property, value) {\r\n        if (arguments.length < 3) {\r\n            var computedStyle,\r\n                computedStyle = getStyles(elm)\r\n            if (langx.isString(property)) {\r\n                return elm.style[camelCase(property)] || computedStyle.getPropertyValue(dasherize(property))\r\n            } else if (langx.isArrayLike(property)) {\r\n                var props = {}\r\n                forEach.call(property, function(prop) {\r\n                    props[prop] = (elm.style[camelCase(prop)] || computedStyle.getPropertyValue(dasherize(prop)))\r\n                })\r\n                return props\r\n            }\r\n        }\r\n\r\n        var css = '';\r\n        if (typeof(property) == 'string') {\r\n            if (!value && value !== 0) {\r\n                elm.style.removeProperty(dasherize(property));\r\n            } else {\r\n                css = dasherize(property) + \":\" + maybeAddPx(property, value)\r\n            }\r\n        } else {\r\n            for (key in property) {\r\n                if (property[key] === undefined) {\r\n                    continue;\r\n                }\r\n                if (!property[key] && property[key] !== 0) {\r\n                    elm.style.removeProperty(dasherize(key));\r\n                } else {\r\n                    css += dasherize(key) + ':' + maybeAddPx(key, property[key]) + ';'\r\n                }\r\n            }\r\n        }\r\n\r\n        elm.style.cssText += ';' + css;\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * Determine whether any of the matched elements are assigned the given class.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} name\r\n     */\r\n    function hasClass(elm, name) {\r\n        var re = classRE(name);\r\n        return elm.className && elm.className.match(re);\r\n    }\r\n\r\n    /*\r\n     * Remove a single class, multiple classes, or all classes from each element in the set of matched elements.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} name\r\n     */\r\n    function removeClass(elm, name) {\r\n        if (name) {\r\n            var cls = className(elm),\r\n                names;\r\n\r\n            if (langx.isString(name)) {\r\n                names = name.split(/\\s+/g);\r\n            } else {\r\n                names = name;\r\n            }\r\n\r\n            names.forEach(function(klass) {\r\n                var re = classRE(klass);\r\n                if (cls.match(re)) {\r\n                    cls = cls.replace(re, \" \");\r\n                }\r\n            });\r\n\r\n            className(elm, cls.trim());\r\n        } else {\r\n            className(elm, \"\");\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * Add or remove one or more classes from the specified element.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} name\r\n     * @param {} when\r\n     */\r\n    function toggleClass(elm, name, when) {\r\n        var self = this;\r\n        name.split(/\\s+/g).forEach(function(klass) {\r\n            if (when === undefined) {\r\n                when = !self.hasClass(elm, klass);\r\n            }\r\n            if (when) {\r\n                self.addClass(elm, klass);\r\n            } else {\r\n                self.removeClass(elm, klass)\r\n            }\r\n        });\r\n\r\n        return self;\r\n    }\r\n\r\n    var styler = function() {\r\n        return styler;\r\n    };\r\n\r\n    langx.mixin(styler, {\r\n        autocssfix: false,\r\n        cssHooks: {\r\n\r\n        },\r\n\r\n        addClass: addClass,\r\n        className: className,\r\n        css: css,\r\n        disabled : disabled,        \r\n        hasClass: hasClass,\r\n        hide: hide,\r\n        isInvisible: isInvisible,\r\n        removeClass: removeClass,\r\n        show: show,\r\n        toggleClass: toggleClass\r\n    });\r\n\r\n    return dom.styler = styler;\r\n});\ndefine('skylark-utils-dom/noder',[\r\n    \"./dom\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./styler\"\r\n], function(dom, langx, browser, styler) {\r\n    var isIE = !!navigator.userAgent.match(/Trident/g) || !!navigator.userAgent.match(/MSIE/g),\r\n        fragmentRE = /^\\s*<(\\w+|!)[^>]*>/,\r\n        singleTagRE = /^<(\\w+)\\s*\\/?>(?:<\\/\\1>|)$/,\r\n        div = document.createElement(\"div\"),\r\n        table = document.createElement('table'),\r\n        tableBody = document.createElement('tbody'),\r\n        tableRow = document.createElement('tr'),\r\n        containers = {\r\n            'tr': tableBody,\r\n            'tbody': table,\r\n            'thead': table,\r\n            'tfoot': table,\r\n            'td': tableRow,\r\n            'th': tableRow,\r\n            '*': div\r\n        },\r\n        rootNodeRE = /^(?:body|html)$/i,\r\n        map = Array.prototype.map,\r\n        slice = Array.prototype.slice;\r\n\r\n    function ensureNodes(nodes, copyByClone) {\r\n        if (!langx.isArrayLike(nodes)) {\r\n            nodes = [nodes];\r\n        }\r\n        if (copyByClone) {\r\n            nodes = map.call(nodes, function(node) {\r\n                return node.cloneNode(true);\r\n            });\r\n        }\r\n        return langx.flatten(nodes);\r\n    }\r\n\r\n    function nodeName(elm, chkName) {\r\n        var name = elm.nodeName && elm.nodeName.toLowerCase();\r\n        if (chkName !== undefined) {\r\n            return name === chkName.toLowerCase();\r\n        }\r\n        return name;\r\n    };\r\n\r\n\r\n    function activeElement(doc) {\r\n        doc = doc || document;\r\n        var el;\r\n\r\n        // Support: IE 9 only\r\n        // IE9 throws an \"Unspecified error\" accessing document.activeElement from an <iframe>\r\n        try {\r\n            el = doc.activeElement;\r\n        } catch ( error ) {\r\n            el = doc.body;\r\n        }\r\n\r\n        // Support: IE 9 - 11 only\r\n        // IE may return null instead of an element\r\n        // Interestingly, this only seems to occur when NOT in an iframe\r\n        if ( !el ) {\r\n            el = doc.body;\r\n        }\r\n\r\n        // Support: IE 11 only\r\n        // IE11 returns a seemingly empty object in some cases when accessing\r\n        // document.activeElement from an <iframe>\r\n        if ( !el.nodeName ) {\r\n            el = doc.body;\r\n        }\r\n\r\n        return el;\r\n    };\r\n\r\n    function after(node, placing, copyByClone) {\r\n        var refNode = node,\r\n            parent = refNode.parentNode;\r\n        if (parent) {\r\n            var nodes = ensureNodes(placing, copyByClone),\r\n                refNode = refNode.nextSibling;\r\n\r\n            for (var i = 0; i < nodes.length; i++) {\r\n                if (refNode) {\r\n                    parent.insertBefore(nodes[i], refNode);\r\n                } else {\r\n                    parent.appendChild(nodes[i]);\r\n                }\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function append(node, placing, copyByClone) {\r\n        var parentNode = node,\r\n            nodes = ensureNodes(placing, copyByClone);\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            parentNode.appendChild(nodes[i]);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function before(node, placing, copyByClone) {\r\n        var refNode = node,\r\n            parent = refNode.parentNode;\r\n        if (parent) {\r\n            var nodes = ensureNodes(placing, copyByClone);\r\n            for (var i = 0; i < nodes.length; i++) {\r\n                parent.insertBefore(nodes[i], refNode);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    /*   \r\n     * Get the children of the specified node, including text and comment nodes.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function contents(elm) {\r\n        if (nodeName(elm, \"iframe\")) {\r\n            return elm.contentDocument;\r\n        }\r\n        return elm.childNodes;\r\n    }\r\n\r\n    /*   \r\n     * Create a element and set attributes on it.\r\n     * @param {HTMLElement} tag\r\n     * @param {props} props\r\n     * @param } parent\r\n     */\r\n    function createElement(tag, props, parent) {\r\n        var node = document.createElement(tag);\r\n        if (props) {\r\n            for (var name in props) {\r\n                node.setAttribute(name, props[name]);\r\n            }\r\n        }\r\n        if (parent) {\r\n            append(parent, node);\r\n        }\r\n        return node;\r\n    }\r\n\r\n    /*   \r\n     * Create a DocumentFragment from the HTML fragment.\r\n     * @param {String} html\r\n     */\r\n    function createFragment(html) {\r\n        // A special case optimization for a single tag\r\n        html = langx.trim(html);\r\n        if (singleTagRE.test(html)) {\r\n            return [createElement(RegExp.$1)];\r\n        }\r\n\r\n        var name = fragmentRE.test(html) && RegExp.$1\r\n        if (!(name in containers)) {\r\n            name = \"*\"\r\n        }\r\n        var container = containers[name];\r\n        container.innerHTML = \"\" + html;\r\n        dom = slice.call(container.childNodes);\r\n\r\n        dom.forEach(function(node) {\r\n            container.removeChild(node);\r\n        })\r\n\r\n        return dom;\r\n    }\r\n\r\n    /*   \r\n     * Create a deep copy of the set of matched elements.\r\n     * @param {HTMLElement} node\r\n     * @param {Boolean} deep\r\n     */\r\n    function clone(node, deep) {\r\n        var self = this,\r\n            clone;\r\n\r\n        // TODO: Add feature detection here in the future\r\n        if (!isIE || node.nodeType !== 1 || deep) {\r\n            return node.cloneNode(deep);\r\n        }\r\n\r\n        // Make a HTML5 safe shallow copy\r\n        if (!deep) {\r\n            clone = document.createElement(node.nodeName);\r\n\r\n            // Copy attribs\r\n            each(self.getAttribs(node), function(attr) {\r\n                self.setAttrib(clone, attr.nodeName, self.getAttrib(node, attr.nodeName));\r\n            });\r\n\r\n            return clone;\r\n        }\r\n    }\r\n\r\n    /*   \r\n     * Check to see if a dom node is a descendant of another dom node .\r\n     * @param {String} node\r\n     * @param {Node} child\r\n     */\r\n    function contains(node, child) {\r\n        return isChildOf(child, node);\r\n    }\r\n\r\n    /*   \r\n     * Create a new Text node.\r\n     * @param {String} text\r\n     * @param {Node} child\r\n     */\r\n    function createTextNode(text) {\r\n        return document.createTextNode(text);\r\n    }\r\n\r\n    /*   \r\n     * Get the current document object.\r\n     */\r\n    function doc() {\r\n        return document;\r\n    }\r\n\r\n    /*   \r\n     * Remove all child nodes of the set of matched elements from the DOM.\r\n     * @param {Object} node\r\n     */\r\n    function empty(node) {\r\n        while (node.hasChildNodes()) {\r\n            var child = node.firstChild;\r\n            node.removeChild(child);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    var fulledEl = null;\r\n\r\n    function fullScreen(el) {\r\n        if (el === false) {\r\n            browser.exitFullScreen.apply(document);\r\n        } else if (el) {\r\n            browser.requestFullScreen.apply(el);\r\n            fulledEl = el;\r\n        } else {\r\n            return (\r\n                document.fullscreenElement ||\r\n                document.webkitFullscreenElement ||\r\n                document.mozFullScreenElement ||\r\n                document.msFullscreenElement\r\n            )\r\n        }\r\n    }\r\n\r\n\r\n    // Selectors\r\n    function focusable( element, hasTabindex ) {\r\n        var map, mapName, img, focusableIfVisible, fieldset,\r\n            nodeName = element.nodeName.toLowerCase();\r\n\r\n        if ( \"area\" === nodeName ) {\r\n            map = element.parentNode;\r\n            mapName = map.name;\r\n            if ( !element.href || !mapName || map.nodeName.toLowerCase() !== \"map\" ) {\r\n                return false;\r\n            }\r\n            img = $( \"img[usemap='#\" + mapName + \"']\" );\r\n            return img.length > 0 && img.is( \":visible\" );\r\n        }\r\n\r\n        if ( /^(input|select|textarea|button|object)$/.test( nodeName ) ) {\r\n            focusableIfVisible = !element.disabled;\r\n\r\n            if ( focusableIfVisible ) {\r\n\r\n                // Form controls within a disabled fieldset are disabled.\r\n                // However, controls within the fieldset's legend do not get disabled.\r\n                // Since controls generally aren't placed inside legends, we skip\r\n                // this portion of the check.\r\n                fieldset = $( element ).closest( \"fieldset\" )[ 0 ];\r\n                if ( fieldset ) {\r\n                    focusableIfVisible = !fieldset.disabled;\r\n                }\r\n            }\r\n        } else if ( \"a\" === nodeName ) {\r\n            focusableIfVisible = element.href || hasTabindex;\r\n        } else {\r\n            focusableIfVisible = hasTabindex;\r\n        }\r\n\r\n        return focusableIfVisible && $( element ).is( \":visible\" ) && visible( $( element ) );\r\n    };\r\n\r\n\r\n   var rxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\\w:]+)[^>]*)\\/>/gi;\r\n \r\n    /*   \r\n     * Get the HTML contents of the first element in the set of matched elements.\r\n     * @param {HTMLElement} node\r\n     * @param {String} html\r\n     */\r\n    function html(node, html) {\r\n        if (html === undefined) {\r\n            return node.innerHTML;\r\n        } else {\r\n            this.empty(node);\r\n            html = html || \"\";\r\n            if (langx.isString(html)) {\r\n                html = html.replace( rxhtmlTag, \"<$1></$2>\" );\r\n            }\r\n            if (langx.isString(html) || langx.isNumber(html)) {               \r\n                node.innerHTML = html;\r\n            } else if (langx.isArrayLike(html)) {\r\n                for (var i = 0; i < html.length; i++) {\r\n                    node.appendChild(html[i]);\r\n                }\r\n            } else {\r\n                node.appendChild(html);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    /*   \r\n     * Check to see if a dom node is a descendant of another dom node.\r\n     * @param {Node} node\r\n     * @param {Node} parent\r\n     * @param {Node} directly\r\n     */\r\n    function isChildOf(node, parent, directly) {\r\n        if (directly) {\r\n            return node.parentNode === parent;\r\n        }\r\n        if (document.documentElement.contains) {\r\n            return parent.contains(node);\r\n        }\r\n        while (node) {\r\n            if (parent === node) {\r\n                return true;\r\n            }\r\n\r\n            node = node.parentNode;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /*   \r\n     * Check to see if a dom node is a descendant of another dom node.\r\n     * @param {Node} node\r\n     * @param {Node} parent\r\n     * @param {Node} directly\r\n     */\r\n    function isDoc(node) {\r\n        return node != null && node.nodeType == node.DOCUMENT_NODE\r\n    }\r\n\r\n    /*   \r\n     * Get the owner document object for the specified element.\r\n     * @param {Node} elm\r\n     */\r\n    function ownerDoc(elm) {\r\n        if (!elm) {\r\n            return document;\r\n        }\r\n\r\n        if (elm.nodeType == 9) {\r\n            return elm;\r\n        }\r\n\r\n        return elm.ownerDocument;\r\n    }\r\n\r\n    /*   \r\n     *\r\n     * @param {Node} elm\r\n     */\r\n    function ownerWindow(elm) {\r\n        var doc = ownerDoc(elm);\r\n        return doc.defaultView || doc.parentWindow;\r\n    }\r\n\r\n    /*   \r\n     * insert one or more nodes as the first children of the specified node.\r\n     * @param {Node} node\r\n     * @param {Node or ArrayLike} placing\r\n     * @param {Boolean Optional} copyByClone\r\n     */\r\n    function prepend(node, placing, copyByClone) {\r\n        var parentNode = node,\r\n            refNode = parentNode.firstChild,\r\n            nodes = ensureNodes(placing, copyByClone);\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            if (refNode) {\r\n                parentNode.insertBefore(nodes[i], refNode);\r\n            } else {\r\n                parentNode.appendChild(nodes[i]);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     *\r\n     * @param {Node} elm\r\n     */\r\n    function offsetParent(elm) {\r\n        var parent = elm.offsetParent || document.body;\r\n        while (parent && !rootNodeRE.test(parent.nodeName) && styler.css(parent, \"position\") == \"static\") {\r\n            parent = parent.offsetParent;\r\n        }\r\n        return parent;\r\n    }\r\n\r\n    /*   \r\n     *\r\n     * @param {Node} elm\r\n     * @param {Node} params\r\n     */\r\n    function overlay(elm, params) {\r\n        var overlayDiv = createElement(\"div\", params);\r\n        styler.css(overlayDiv, {\r\n            position: \"absolute\",\r\n            top: 0,\r\n            left: 0,\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            zIndex: 0x7FFFFFFF,\r\n            opacity: 0.7\r\n        });\r\n        elm.appendChild(overlayDiv);\r\n        return overlayDiv;\r\n\r\n    }\r\n\r\n    /*   \r\n     * Remove the set of matched elements from the DOM.\r\n     * @param {Node} node\r\n     */\r\n    function remove(node) {\r\n        if (node && node.parentNode) {\r\n            try {\r\n                node.parentNode.removeChild(node);\r\n            } catch (e) {\r\n                console.warn(\"The node is already removed\", e);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function removeChild(node,children) {\r\n        if (!langx.isArrayLike(children)) {\r\n            children = [children];\r\n        }\r\n        for (var i=0;i<children.length;i++) {\r\n            node.removeChild(children[i]);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function scrollParent( elm, includeHidden ) {\r\n        var position = styler.css(elm,\"position\" ),\r\n            excludeStaticParent = position === \"absolute\",\r\n            overflowRegex = includeHidden ? /(auto|scroll|hidden)/ : /(auto|scroll)/,\r\n            scrollParent = this.parents().filter( function() {\r\n                var parent = $( this );\r\n                if ( excludeStaticParent && parent.css( \"position\" ) === \"static\" ) {\r\n                    return false;\r\n                }\r\n                return overflowRegex.test( parent.css( \"overflow\" ) + parent.css( \"overflow-y\" ) +\r\n                    parent.css( \"overflow-x\" ) );\r\n            } ).eq( 0 );\r\n\r\n        return position === \"fixed\" || !scrollParent.length ?\r\n            $( this[ 0 ].ownerDocument || document ) :\r\n            scrollParent;\r\n    };\r\n\r\n        /*   \r\n     * Replace an old node with the specified node.\r\n     * @param {Node} node\r\n     * @param {Node} oldNode\r\n     */\r\n    function replace(node, oldNode) {\r\n        oldNode.parentNode.replaceChild(node, oldNode);\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Replace an old node with the specified node.\r\n     * @param {HTMLElement} elm\r\n     * @param {Node} params\r\n     */\r\n    function throb(elm, params) {\r\n        params = params || {};\r\n        var self = this,\r\n            text = params.text,\r\n            style = params.style,\r\n            time = params.time,\r\n            callback = params.callback,\r\n            timer,\r\n            throbber = this.createElement(\"div\", {\r\n                className: params.className || \"throbber\",\r\n                style: style\r\n            }),\r\n            _overlay = overlay(throbber, {\r\n                className: 'overlay fade'\r\n            }),\r\n            throb = this.createElement(\"div\", {\r\n                className: \"throb\"\r\n            }),\r\n            textNode = this.createTextNode(text || \"\"),\r\n            remove = function() {\r\n                if (timer) {\r\n                    clearTimeout(timer);\r\n                    timer = null;\r\n                }\r\n                if (throbber) {\r\n                    self.remove(throbber);\r\n                    throbber = null;\r\n                }\r\n            },\r\n            update = function(params) {\r\n                if (params && params.text && throbber) {\r\n                    textNode.nodeValue = params.text;\r\n                }\r\n            };\r\n        throb.appendChild(textNode);\r\n        throbber.appendChild(throb);\r\n        elm.appendChild(throbber);\r\n        var end = function() {\r\n            remove();\r\n            if (callback) callback();\r\n        };\r\n        if (time) {\r\n            timer = setTimeout(end, time);\r\n        }\r\n\r\n        return {\r\n            remove: remove,\r\n            update: update\r\n        };\r\n    }\r\n\r\n\r\n    /*   \r\n     * traverse the specified node and its descendants, perform the callback function on each\r\n     * @param {Node} node\r\n     * @param {Function} fn\r\n     */\r\n    function traverse(node, fn) {\r\n        fn(node)\r\n        for (var i = 0, len = node.childNodes.length; i < len; i++) {\r\n            traverse(node.childNodes[i], fn);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     *\r\n     * @param {Node} node\r\n     */\r\n    function reverse(node) {\r\n        var firstChild = node.firstChild;\r\n        for (var i = node.children.length - 1; i > 0; i--) {\r\n            if (i > 0) {\r\n                var child = node.children[i];\r\n                node.insertBefore(child, firstChild);\r\n            }\r\n        }\r\n    }\r\n\r\n    /*   \r\n     * Wrap an HTML structure around each element in the set of matched elements.\r\n     * @param {Node} node\r\n     * @param {Node} wrapperNode\r\n     */\r\n    function wrapper(node, wrapperNode) {\r\n        if (langx.isString(wrapperNode)) {\r\n            wrapperNode = this.createFragment(wrapperNode).firstChild;\r\n        }\r\n        node.parentNode.insertBefore(wrapperNode, node);\r\n        wrapperNode.appendChild(node);\r\n    }\r\n\r\n    /*   \r\n     * Wrap an HTML structure around the content of each element in the set of matched\r\n     * @param {Node} node\r\n     * @param {Node} wrapperNode\r\n     */\r\n    function wrapperInner(node, wrapperNode) {\r\n        var childNodes = slice.call(node.childNodes);\r\n        node.appendChild(wrapperNode);\r\n        for (var i = 0; i < childNodes.length; i++) {\r\n            wrapperNode.appendChild(childNodes[i]);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Remove the parents of the set of matched elements from the DOM, leaving the matched\r\n     * @param {Node} node\r\n     */\r\n    function unwrap(node) {\r\n        var child, parent = node.parentNode;\r\n        if (parent) {\r\n            if (this.isDoc(parent.parentNode)) return;\r\n            parent.parentNode.insertBefore(node, parent);\r\n        }\r\n    }\r\n\r\n    function noder() {\r\n        return noder;\r\n    }\r\n\r\n    langx.mixin(noder, {\r\n        active  : activeElement,\r\n\r\n        blur : function(el) {\r\n            el.blur();\r\n        },\r\n\r\n        body: function() {\r\n            return document.body;\r\n        },\r\n\r\n        clone: clone,\r\n        contents: contents,\r\n\r\n        createElement: createElement,\r\n\r\n        createFragment: createFragment,\r\n\r\n        contains: contains,\r\n\r\n        createTextNode: createTextNode,\r\n\r\n        doc: doc,\r\n\r\n        empty: empty,\r\n\r\n        fullScreen: fullScreen,\r\n\r\n        focusable: focusable,\r\n\r\n        html: html,\r\n\r\n        isChildOf: isChildOf,\r\n\r\n        isDoc: isDoc,\r\n\r\n        isWindow: langx.isWindow,\r\n\r\n        offsetParent: offsetParent,\r\n\r\n        ownerDoc: ownerDoc,\r\n\r\n        ownerWindow: ownerWindow,\r\n\r\n        after: after,\r\n\r\n        before: before,\r\n\r\n        prepend: prepend,\r\n\r\n        append: append,\r\n\r\n        remove: remove,\r\n\r\n        removeChild : removeChild,\r\n\r\n        replace: replace,\r\n\r\n        throb: throb,\r\n\r\n        traverse: traverse,\r\n\r\n        reverse: reverse,\r\n\r\n        wrapper: wrapper,\r\n\r\n        wrapperInner: wrapperInner,\r\n\r\n        unwrap: unwrap\r\n    });\r\n\r\n    return dom.noder = noder;\r\n});\ndefine('skylark-utils-dom/finder',[\r\n    \"./dom\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./noder\"\r\n], function(dom, langx, browser, noder, velm) {\r\n    var local = {},\r\n        filter = Array.prototype.filter,\r\n        slice = Array.prototype.slice,\r\n        nativeMatchesSelector = browser.matchesSelector;\r\n\r\n    /*\r\n    ---\r\n    name: Slick.Parser\r\n    description: Standalone CSS3 Selector parser\r\n    provides: Slick.Parser\r\n    ...\r\n    */\r\n    ;\r\n    (function() {\r\n\r\n        var parsed,\r\n            separatorIndex,\r\n            combinatorIndex,\r\n            reversed,\r\n            cache = {},\r\n            reverseCache = {},\r\n            reUnescape = /\\\\/g;\r\n\r\n        var parse = function(expression, isReversed) {\r\n            if (expression == null) return null;\r\n            if (expression.Slick === true) return expression;\r\n            expression = ('' + expression).replace(/^\\s+|\\s+$/g, '');\r\n            reversed = !!isReversed;\r\n            var currentCache = (reversed) ? reverseCache : cache;\r\n            if (currentCache[expression]) return currentCache[expression];\r\n            parsed = {\r\n                Slick: true,\r\n                expressions: [],\r\n                raw: expression,\r\n                reverse: function() {\r\n                    return parse(this.raw, true);\r\n                }\r\n            };\r\n            separatorIndex = -1;\r\n            while (expression != (expression = expression.replace(regexp, parser)));\r\n            parsed.length = parsed.expressions.length;\r\n            return currentCache[parsed.raw] = (reversed) ? reverse(parsed) : parsed;\r\n        };\r\n\r\n        var reverseCombinator = function(combinator) {\r\n            if (combinator === '!') return ' ';\r\n            else if (combinator === ' ') return '!';\r\n            else if ((/^!/).test(combinator)) return combinator.replace(/^!/, '');\r\n            else return '!' + combinator;\r\n        };\r\n\r\n        var reverse = function(expression) {\r\n            var expressions = expression.expressions;\r\n            for (var i = 0; i < expressions.length; i++) {\r\n                var exp = expressions[i];\r\n                var last = {\r\n                    parts: [],\r\n                    tag: '*',\r\n                    combinator: reverseCombinator(exp[0].combinator)\r\n                };\r\n\r\n                for (var j = 0; j < exp.length; j++) {\r\n                    var cexp = exp[j];\r\n                    if (!cexp.reverseCombinator) cexp.reverseCombinator = ' ';\r\n                    cexp.combinator = cexp.reverseCombinator;\r\n                    delete cexp.reverseCombinator;\r\n                }\r\n\r\n                exp.reverse().push(last);\r\n            }\r\n            return expression;\r\n        };\r\n\r\n        var escapeRegExp = (function() {\r\n            // Credit: XRegExp 0.6.1 (c) 2007-2008 Steven Levithan <http://stevenlevithan.com/regex/xregexp/> MIT License\r\n            var from = /(?=[\\-\\[\\]{}()*+?.\\\\\\^$|,#\\s])/g,\r\n                to = '\\\\';\r\n            return function(string) {\r\n                return string.replace(from, to)\r\n            }\r\n        }())\r\n\r\n        var regexp = new RegExp(\r\n            \"^(?:\\\\s*(,)\\\\s*|\\\\s*(<combinator>+)\\\\s*|(\\\\s+)|(<unicode>+|\\\\*)|\\\\#(<unicode>+)|\\\\.(<unicode>+)|\\\\[\\\\s*(<unicode1>+)(?:\\\\s*([*^$!~|]?=)(?:\\\\s*(?:([\\\"']?)(.*?)\\\\9)))?\\\\s*\\\\](?!\\\\])|(:+)(<unicode>+)(?:\\\\((?:(?:([\\\"'])([^\\\\13]*)\\\\13)|((?:\\\\([^)]+\\\\)|[^()]*)+))\\\\))?)\"\r\n            .replace(/<combinator>/, '[' + escapeRegExp(\">+~`!@$%^&={}\\\\;</\") + ']')\r\n            .replace(/<unicode>/g, '(?:[\\\\w\\\\u00a1-\\\\uFFFF-]|\\\\\\\\[^\\\\s0-9a-f])')\r\n            .replace(/<unicode1>/g, '(?:[:\\\\w\\\\u00a1-\\\\uFFFF-]|\\\\\\\\[^\\\\s0-9a-f])')\r\n        );\r\n\r\n        function parser(\r\n            rawMatch,\r\n\r\n            separator,\r\n            combinator,\r\n            combinatorChildren,\r\n\r\n            tagName,\r\n            id,\r\n            className,\r\n\r\n            attributeKey,\r\n            attributeOperator,\r\n            attributeQuote,\r\n            attributeValue,\r\n\r\n            pseudoMarker,\r\n            pseudoClass,\r\n            pseudoQuote,\r\n            pseudoClassQuotedValue,\r\n            pseudoClassValue\r\n        ) {\r\n            if (separator || separatorIndex === -1) {\r\n                parsed.expressions[++separatorIndex] = [];\r\n                combinatorIndex = -1;\r\n                if (separator) return '';\r\n            }\r\n\r\n            if (combinator || combinatorChildren || combinatorIndex === -1) {\r\n                combinator = combinator || ' ';\r\n                var currentSeparator = parsed.expressions[separatorIndex];\r\n                if (reversed && currentSeparator[combinatorIndex])\r\n                    currentSeparator[combinatorIndex].reverseCombinator = reverseCombinator(combinator);\r\n                currentSeparator[++combinatorIndex] = {\r\n                    combinator: combinator,\r\n                    tag: '*'\r\n                };\r\n            }\r\n\r\n            var currentParsed = parsed.expressions[separatorIndex][combinatorIndex];\r\n\r\n            if (tagName) {\r\n                currentParsed.tag = tagName.replace(reUnescape, '');\r\n\r\n            } else if (id) {\r\n                currentParsed.id = id.replace(reUnescape, '');\r\n\r\n            } else if (className) {\r\n                className = className.replace(reUnescape, '');\r\n\r\n                if (!currentParsed.classList) currentParsed.classList = [];\r\n                if (!currentParsed.classes) currentParsed.classes = [];\r\n                currentParsed.classList.push(className);\r\n                currentParsed.classes.push({\r\n                    value: className,\r\n                    regexp: new RegExp('(^|\\\\s)' + escapeRegExp(className) + '(\\\\s|$)')\r\n                });\r\n\r\n            } else if (pseudoClass) {\r\n                pseudoClassValue = pseudoClassValue || pseudoClassQuotedValue;\r\n                pseudoClassValue = pseudoClassValue ? pseudoClassValue.replace(reUnescape, '') : null;\r\n\r\n                if (!currentParsed.pseudos) currentParsed.pseudos = [];\r\n                currentParsed.pseudos.push({\r\n                    key: pseudoClass.replace(reUnescape, ''),\r\n                    value: pseudoClassValue,\r\n                    type: pseudoMarker.length == 1 ? 'class' : 'element'\r\n                });\r\n\r\n            } else if (attributeKey) {\r\n                attributeKey = attributeKey.replace(reUnescape, '');\r\n                attributeValue = (attributeValue || '').replace(reUnescape, '');\r\n\r\n                var test, regexp;\r\n\r\n                switch (attributeOperator) {\r\n                    case '^=':\r\n                        regexp = new RegExp('^' + escapeRegExp(attributeValue));\r\n                        break;\r\n                    case '$=':\r\n                        regexp = new RegExp(escapeRegExp(attributeValue) + '$');\r\n                        break;\r\n                    case '~=':\r\n                        regexp = new RegExp('(^|\\\\s)' + escapeRegExp(attributeValue) + '(\\\\s|$)');\r\n                        break;\r\n                    case '|=':\r\n                        regexp = new RegExp('^' + escapeRegExp(attributeValue) + '(-|$)');\r\n                        break;\r\n                    case '=':\r\n                        test = function(value) {\r\n                            return attributeValue == value;\r\n                        };\r\n                        break;\r\n                    case '*=':\r\n                        test = function(value) {\r\n                            return value && value.indexOf(attributeValue) > -1;\r\n                        };\r\n                        break;\r\n                    case '!=':\r\n                        test = function(value) {\r\n                            return attributeValue != value;\r\n                        };\r\n                        break;\r\n                    default:\r\n                        test = function(value) {\r\n                            return !!value;\r\n                        };\r\n                }\r\n\r\n                if (attributeValue == '' && (/^[*$^]=$/).test(attributeOperator)) test = function() {\r\n                    return false;\r\n                };\r\n\r\n                if (!test) test = function(value) {\r\n                    return value && regexp.test(value);\r\n                };\r\n\r\n                if (!currentParsed.attributes) currentParsed.attributes = [];\r\n                currentParsed.attributes.push({\r\n                    key: attributeKey,\r\n                    operator: attributeOperator,\r\n                    value: attributeValue,\r\n                    test: test\r\n                });\r\n\r\n            }\r\n\r\n            return '';\r\n        };\r\n\r\n        // Slick NS\r\n\r\n        var Slick = (this.Slick || {});\r\n\r\n        Slick.parse = function(expression) {\r\n            return parse(expression);\r\n        };\r\n\r\n        Slick.escapeRegExp = escapeRegExp;\r\n\r\n        if (!this.Slick) this.Slick = Slick;\r\n\r\n    }).apply(local);\r\n\r\n\r\n    var simpleClassSelectorRE = /^\\.([\\w-]*)$/,\r\n        simpleIdSelectorRE = /^#([\\w-]*)$/,\r\n        rinputs = /^(?:input|select|textarea|button)$/i,\r\n        rheader = /^h\\d$/i,\r\n        slice = Array.prototype.slice;\r\n\r\n\r\n    local.parseSelector = local.Slick.parse;\r\n\r\n\r\n    var pseudos = local.pseudos = {\r\n        // custom pseudos\r\n        \"button\": function(elem) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return name === \"input\" && elem.type === \"button\" || name === \"button\";\r\n        },\r\n\r\n        'checked': function(elm) {\r\n            return !!elm.checked;\r\n        },\r\n\r\n        'contains': function(elm, idx, nodes, text) {\r\n            if ($(this).text().indexOf(text) > -1) return this\r\n        },\r\n\r\n        'disabled': function(elm) {\r\n            return !!elm.disabled;\r\n        },\r\n\r\n        'enabled': function(elm) {\r\n            return !elm.disabled;\r\n        },\r\n\r\n        'eq': function(elm, idx, nodes, value) {\r\n            return (idx == value);\r\n        },\r\n\r\n        'even': function(elm, idx, nodes, value) {\r\n            return (idx % 2) === 0;\r\n        },\r\n\r\n        'focus': function(elm) {\r\n            return document.activeElement === elm && (elm.href || elm.type || elm.tabindex);\r\n        },\r\n\r\n        'focusable': function( elm ) {\r\n            return noder.focusable(elm, elm.tabindex != null );\r\n        },\r\n\r\n        'first': function(elm, idx) {\r\n            return (idx === 0);\r\n        },\r\n\r\n        'gt': function(elm, idx, nodes, value) {\r\n            return (idx > value);\r\n        },\r\n\r\n        'has': function(elm, idx, nodes, sel) {\r\n            return find(elm, sel);\r\n        },\r\n\r\n        // Element/input types\r\n        \"header\": function(elem) {\r\n            return rheader.test(elem.nodeName);\r\n        },\r\n\r\n        'hidden': function(elm) {\r\n            return !local.pseudos[\"visible\"](elm);\r\n        },\r\n\r\n        \"input\": function(elem) {\r\n            return rinputs.test(elem.nodeName);\r\n        },\r\n\r\n        'last': function(elm, idx, nodes) {\r\n            return (idx === nodes.length - 1);\r\n        },\r\n\r\n        'lt': function(elm, idx, nodes, value) {\r\n            return (idx < value);\r\n        },\r\n\r\n        'not': function(elm, idx, nodes, sel) {\r\n            return !matches(elm, sel);\r\n        },\r\n\r\n        'odd': function(elm, idx, nodes, value) {\r\n            return (idx % 2) === 1;\r\n        },\r\n\r\n        /*   \r\n         * Get the parent of each element in the current set of matched elements.\r\n         * @param {Object} elm\r\n         */\r\n        'parent': function(elm) {\r\n            return !!elm.parentNode;\r\n        },\r\n\r\n        'selected': function(elm) {\r\n            return !!elm.selected;\r\n        },\r\n\r\n        'tabbable': function(elm) {\r\n            var tabIndex = elm.tabindex,\r\n                hasTabindex = tabIndex != null;\r\n            return ( !hasTabindex || tabIndex >= 0 ) && noder.focusable( element, hasTabindex );\r\n        },\r\n\r\n        'text': function(elm) {\r\n            return elm.type === \"text\";\r\n        },\r\n\r\n        'visible': function(elm) {\r\n            return elm.offsetWidth && elm.offsetWidth\r\n        }\r\n    };\r\n\r\n    [\"first\", \"eq\", \"last\"].forEach(function(item) {\r\n        pseudos[item].isArrayFilter = true;\r\n    });\r\n\r\n\r\n\r\n    pseudos[\"nth\"] = pseudos[\"eq\"];\r\n\r\n    function createInputPseudo(type) {\r\n        return function(elem) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return name === \"input\" && elem.type === type;\r\n        };\r\n    }\r\n\r\n    function createButtonPseudo(type) {\r\n        return function(elem) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return (name === \"input\" || name === \"button\") && elem.type === type;\r\n        };\r\n    }\r\n\r\n    // Add button/input type pseudos\r\n    for (i in {\r\n        radio: true,\r\n        checkbox: true,\r\n        file: true,\r\n        password: true,\r\n        image: true\r\n    }) {\r\n        pseudos[i] = createInputPseudo(i);\r\n    }\r\n    for (i in {\r\n        submit: true,\r\n        reset: true\r\n    }) {\r\n        pseudos[i] = createButtonPseudo(i);\r\n    }\r\n\r\n\r\n    local.divide = function(cond) {\r\n        var nativeSelector = \"\",\r\n            customPseudos = [],\r\n            tag,\r\n            id,\r\n            classes,\r\n            attributes,\r\n            pseudos;\r\n\r\n\r\n        if (id = cond.id) {\r\n            nativeSelector += (\"#\" + id);\r\n        }\r\n        if (classes = cond.classes) {\r\n            for (var i = classes.length; i--;) {\r\n                nativeSelector += (\".\" + classes[i].value);\r\n            }\r\n        }\r\n        if (attributes = cond.attributes) {\r\n            for (var i = 0; i < attributes.length; i++) {\r\n                if (attributes[i].operator) {\r\n                    nativeSelector += (\"[\" + attributes[i].key + attributes[i].operator + JSON.stringify(attributes[i].value) + \"]\");\r\n                } else {\r\n                    nativeSelector += (\"[\" + attributes[i].key + \"]\");\r\n                }\r\n            }\r\n        }\r\n        if (pseudos = cond.pseudos) {\r\n            for (i = pseudos.length; i--;) {\r\n                part = pseudos[i];\r\n                if (this.pseudos[part.key]) {\r\n                    customPseudos.push(part);\r\n                } else {\r\n                    if (part.value !== undefined) {\r\n                        nativeSelector += (\":\" + part.key + \"(\" + JSON.stringify(part))\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (tag = cond.tag) {\r\n            if (tag !== \"*\") {\r\n                nativeSelector = tag.toUpperCase() + nativeSelector;\r\n            }\r\n        }\r\n\r\n        if (!nativeSelector) {\r\n            nativeSelector = \"*\";\r\n        }\r\n\r\n        return {\r\n            nativeSelector: nativeSelector,\r\n            customPseudos: customPseudos\r\n        }\r\n\r\n    };\r\n\r\n    local.check = function(node, cond, idx, nodes, arrayFilte) {\r\n        var tag,\r\n            id,\r\n            classes,\r\n            attributes,\r\n            pseudos,\r\n\r\n            i, part, cls, pseudo;\r\n\r\n        if (!arrayFilte) {\r\n            if (tag = cond.tag) {\r\n                var nodeName = node.nodeName.toUpperCase();\r\n                if (tag == '*') {\r\n                    if (nodeName < '@') return false; // Fix for comment nodes and closed nodes\r\n                } else {\r\n                    if (nodeName != (tag || \"\").toUpperCase()) return false;\r\n                }\r\n            }\r\n\r\n            if (id = cond.id) {\r\n                if (node.getAttribute('id') != id) {\r\n                    return false;\r\n                }\r\n            }\r\n\r\n\r\n            if (classes = cond.classes) {\r\n                for (i = classes.length; i--;) {\r\n                    cls = node.getAttribute('class');\r\n                    if (!(cls && classes[i].regexp.test(cls))) return false;\r\n                }\r\n            }\r\n\r\n            if (attributes = cond.attributes) {\r\n                for (i = attributes.length; i--;) {\r\n                    part = attributes[i];\r\n                    if (part.operator ? !part.test(node.getAttribute(part.key)) : !node.hasAttribute(part.key)) return false;\r\n                }\r\n            }\r\n\r\n        }\r\n        if (pseudos = cond.pseudos) {\r\n            for (i = pseudos.length; i--;) {\r\n                part = pseudos[i];\r\n                if (pseudo = this.pseudos[part.key]) {\r\n                    if ((arrayFilte && pseudo.isArrayFilter) || (!arrayFilte && !pseudo.isArrayFilter)) {\r\n                        if (!pseudo(node, idx, nodes, part.value)) {\r\n                            return false;\r\n                        }\r\n                    }\r\n                } else {\r\n                    if (!arrayFilte && !nativeMatchesSelector.call(node, part.key)) {\r\n                        return false;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    local.match = function(node, selector) {\r\n\r\n        var parsed;\r\n\r\n        if (langx.isString(selector)) {\r\n            parsed = local.Slick.parse(selector);\r\n        } else {\r\n            parsed = selector;\r\n        }\r\n\r\n        if (!parsed) {\r\n            return true;\r\n        }\r\n\r\n        // simple (single) selectors\r\n        var expressions = parsed.expressions,\r\n            simpleExpCounter = 0,\r\n            i,\r\n            currentExpression;\r\n        for (i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            if (currentExpression.length == 1) {\r\n                var exp = currentExpression[0];\r\n                if (this.check(node, exp)) {\r\n                    return true;\r\n                }\r\n                simpleExpCounter++;\r\n            }\r\n        }\r\n\r\n        if (simpleExpCounter == parsed.length) {\r\n            return false;\r\n        }\r\n\r\n        var nodes = this.query(document, parsed),\r\n            item;\r\n        for (i = 0; item = nodes[i++];) {\r\n            if (item === node) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n\r\n\r\n    local.filterSingle = function(nodes, exp) {\r\n        var matchs = filter.call(nodes, function(node, idx) {\r\n            return local.check(node, exp, idx, nodes, false);\r\n        });\r\n\r\n        matchs = filter.call(matchs, function(node, idx) {\r\n            return local.check(node, exp, idx, matchs, true);\r\n        });\r\n        return matchs;\r\n    };\r\n\r\n    local.filter = function(nodes, selector) {\r\n        var parsed;\r\n\r\n        if (langx.isString(selector)) {\r\n            parsed = local.Slick.parse(selector);\r\n        } else {\r\n            return local.filterSingle(nodes, selector);\r\n        }\r\n\r\n        // simple (single) selectors\r\n        var expressions = parsed.expressions,\r\n            i,\r\n            currentExpression,\r\n            ret = [];\r\n        for (i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            if (currentExpression.length == 1) {\r\n                var exp = currentExpression[0];\r\n\r\n                var matchs = local.filterSingle(nodes, exp);\r\n\r\n                ret = langx.uniq(ret.concat(matchs));\r\n            } else {\r\n                throw new Error(\"not supported selector:\" + selector);\r\n            }\r\n        }\r\n\r\n        return ret;\r\n\r\n    };\r\n\r\n    local.combine = function(elm, bit) {\r\n        var op = bit.combinator,\r\n            cond = bit,\r\n            node1,\r\n            nodes = [];\r\n\r\n        switch (op) {\r\n            case '>': // direct children\r\n                nodes = children(elm, cond);\r\n                break;\r\n            case '+': // next sibling\r\n                node1 = nextSibling(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '^': // first child\r\n                node1 = firstChild(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '~': // next siblings\r\n                nodes = nextSiblings(elm, cond);\r\n                break;\r\n            case '++': // next sibling and previous sibling\r\n                var prev = previousSibling(elm, cond, true),\r\n                    next = nextSibling(elm, cond, true);\r\n                if (prev) {\r\n                    nodes.push(prev);\r\n                }\r\n                if (next) {\r\n                    nodes.push(next);\r\n                }\r\n                break;\r\n            case '~~': // next siblings and previous siblings\r\n                nodes = siblings(elm, cond);\r\n                break;\r\n            case '!': // all parent nodes up to document\r\n                nodes = ancestors(elm, cond);\r\n                break;\r\n            case '!>': // direct parent (one level)\r\n                node1 = parent(elm, cond);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '!+': // previous sibling\r\n                nodes = previousSibling(elm, cond, true);\r\n                break;\r\n            case '!^': // last child\r\n                node1 = lastChild(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '!~': // previous siblings\r\n                nodes = previousSiblings(elm, cond);\r\n                break;\r\n            default:\r\n                var divided = this.divide(bit);\r\n                nodes = slice.call(elm.querySelectorAll(divided.nativeSelector));\r\n                if (divided.customPseudos) {\r\n                    for (var i = divided.customPseudos.length - 1; i >= 0; i--) {\r\n                        nodes = filter.call(nodes, function(item, idx) {\r\n                            return local.check(item, {\r\n                                pseudos: [divided.customPseudos[i]]\r\n                            }, idx, nodes, false)\r\n                        });\r\n\r\n                        nodes = filter.call(nodes, function(item, idx) {\r\n                            return local.check(item, {\r\n                                pseudos: [divided.customPseudos[i]]\r\n                            }, idx, nodes, true)\r\n                        });\r\n                    }\r\n                }\r\n                break;\r\n\r\n        }\r\n        return nodes;\r\n    }\r\n\r\n    local.query = function(node, selector, single) {\r\n\r\n\r\n        var parsed = this.Slick.parse(selector);\r\n\r\n        var\r\n            founds = [],\r\n            currentExpression, currentBit,\r\n            expressions = parsed.expressions;\r\n\r\n        for (var i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            var currentItems = [node],\r\n                found;\r\n            for (var j = 0;\r\n                (currentBit = currentExpression[j]); j++) {\r\n                found = langx.map(currentItems, function(item, i) {\r\n                    return local.combine(item, currentBit)\r\n                });\r\n                if (found) {\r\n                    currentItems = found;\r\n                }\r\n            }\r\n            if (found) {\r\n                founds = founds.concat(found);\r\n            }\r\n        }\r\n\r\n        return founds;\r\n    }\r\n\r\n    /*\r\n     * Get the nearest ancestor of the specified element,optional matched by a selector.\r\n     * @param {HTMLElement} node\r\n     * @param {String Optional } selector\r\n     * @param {Object} root\r\n     */\r\n    function ancestor(node, selector, root) {\r\n        var rootIsSelector = root && langx.isString(root);\r\n        while (node = node.parentNode) {\r\n            if (matches(node, selector)) {\r\n                return node;\r\n            }\r\n            if (root) {\r\n                if (rootIsSelector) {\r\n                    if (matches(node, root)) {\r\n                        break;\r\n                    }\r\n                } else if (node == root) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get the ancestors of the specitied element , optionally filtered by a selector.\r\n     * @param {HTMLElement} node\r\n     * @param {String Optional } selector\r\n     * @param {Object} root\r\n     */\r\n    function ancestors(node, selector, root) {\r\n        var ret = [],\r\n            rootIsSelector = root && langx.isString(root);\r\n        while ((node = node.parentNode) && (node.nodeType !== 9)) {\r\n            ret.push(node);\r\n            if (root) {\r\n                if (rootIsSelector) {\r\n                    if (matches(node, root)) {\r\n                        break;\r\n                    }\r\n                } else if (node == root) {\r\n                    break;\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        if (selector) {\r\n            ret = local.filter(ret, selector);\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    /*\r\n     * Returns a element by its ID.\r\n     * @param {string} id\r\n     */\r\n    function byId(id, doc) {\r\n        doc = doc || noder.doc();\r\n        return doc.getElementById(id);\r\n    }\r\n\r\n    /*\r\n     * Get the children of the specified element , optionally filtered by a selector.\r\n     * @param {string} node\r\n     * @param {String optionlly} selector\r\n     */\r\n    function children(node, selector) {\r\n        var childNodes = node.childNodes,\r\n            ret = [];\r\n        for (var i = 0; i < childNodes.length; i++) {\r\n            var node = childNodes[i];\r\n            if (node.nodeType == 1) {\r\n                ret.push(node);\r\n            }\r\n        }\r\n        if (selector) {\r\n            ret = local.filter(ret, selector);\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    function closest(node, selector) {\r\n        while (node && !(matches(node, selector))) {\r\n            node = node.parentNode;\r\n        }\r\n\r\n        return node;\r\n    }\r\n\r\n    /*\r\n     * Get the decendant of the specified element , optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function descendants(elm, selector) {\r\n        // Selector\r\n        try {\r\n            return slice.call(elm.querySelectorAll(selector));\r\n        } catch (matchError) {\r\n            //console.log(matchError);\r\n        }\r\n        return local.query(elm, selector);\r\n    }\r\n\r\n    /*\r\n     * Get the nearest decendent of the specified element,optional matched by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function descendant(elm, selector) {\r\n        // Selector\r\n        try {\r\n            return elm.querySelector(selector);\r\n        } catch (matchError) {\r\n            //console.log(matchError);\r\n        }\r\n        var nodes = local.query(elm, selector);\r\n        if (nodes.length > 0) {\r\n            return nodes[0];\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get the descendants of each element in the current set of matched elements, filtered by a selector, jQuery object, or element.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function find(elm, selector) {\r\n        if (!selector) {\r\n            selector = elm;\r\n            elm = document.body;\r\n        }\r\n        if (matches(elm, selector)) {\r\n            return elm;\r\n        } else {\r\n            return descendant(elm, selector);\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get the findAll of the specified element , optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function findAll(elm, selector) {\r\n        if (!selector) {\r\n            selector = elm;\r\n            elm = document.body;\r\n        }\r\n        return descendants(elm, selector);\r\n    }\r\n\r\n    /*\r\n     * Get the first child of the specified element , optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     * @param {String} first\r\n     */\r\n    function firstChild(elm, selector, first) {\r\n        var childNodes = elm.childNodes,\r\n            node = childNodes[0];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (first) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get the last child of the specified element , optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     * @param {String } last\r\n     */\r\n    function lastChild(elm, selector, last) {\r\n        var childNodes = elm.childNodes,\r\n            node = childNodes[childNodes.length - 1];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (last) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Check the specified element against a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function matches(elm, selector) {\r\n        if (!selector || !elm || elm.nodeType !== 1) {\r\n            return false\r\n        }\r\n\r\n        if (langx.isString(selector)) {\r\n            try {\r\n                return nativeMatchesSelector.call(elm, selector.replace(/\\[([^=]+)=\\s*([^'\"\\]]+?)\\s*\\]/g, '[$1=\"$2\"]'));\r\n            } catch (matchError) {\r\n                //console.log(matchError);\r\n            }\r\n            return local.match(elm, selector);\r\n        } else if (langx.isArrayLike(selector)) {\r\n            return langx.inArray(elm, selector) > -1;\r\n        } else if (langx.isPlainObject(selector)) {\r\n            return local.check(elm, selector);\r\n        } else {\r\n            return elm === selector;\r\n        }\r\n\r\n    }\r\n\r\n    /*\r\n     * Get the nearest next sibing of the specitied element , optional matched by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     * @param {Boolean Optional} adjacent\r\n     */\r\n    function nextSibling(elm, selector, adjacent) {\r\n        var node = elm.nextSibling;\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (adjacent) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get the next siblings of the specified element , optional filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function nextSiblings(elm, selector) {\r\n        var node = elm.nextSibling,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    /*\r\n     * Get the parent element of the specified element. if a selector is provided, it retrieves the parent element only if it matches that selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function parent(elm, selector) {\r\n        var node = elm.parentNode;\r\n        if (node && (!selector || matches(node, selector))) {\r\n            return node;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get hte nearest previous sibling of the specified element ,optional matched by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     * @param {Boolean Optional } adjacent\r\n     */\r\n    function previousSibling(elm, selector, adjacent) {\r\n        var node = elm.previousSibling;\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (adjacent) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get all preceding siblings of each element in the set of matched elements, optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function previousSiblings(elm, selector) {\r\n        var node = elm.previousSibling,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    /*\r\n     * Selects all sibling elements that follow after the “prev” element, have the same parent, and match the filtering “siblings” selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function siblings(elm, selector) {\r\n        var node = elm.parentNode.firstChild,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1 && node !== elm) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    var finder = function() {\r\n        return finder;\r\n    };\r\n\r\n    langx.mixin(finder, {\r\n\r\n        ancestor: ancestor,\r\n\r\n        ancestors: ancestors,\r\n\r\n        byId: byId,\r\n\r\n        children: children,\r\n\r\n        closest: closest,\r\n\r\n        descendant: descendant,\r\n\r\n        descendants: descendants,\r\n\r\n        find: find,\r\n\r\n        findAll: findAll,\r\n\r\n        firstChild: firstChild,\r\n\r\n        lastChild: lastChild,\r\n\r\n        matches: matches,\r\n\r\n        nextSibling: nextSibling,\r\n\r\n        nextSiblings: nextSiblings,\r\n\r\n        parent: parent,\r\n\r\n        previousSibling,\r\n\r\n        previousSiblings,\r\n\r\n        pseudos: local.pseudos,\r\n\r\n        siblings: siblings\r\n    });\r\n\r\n    return dom.finder = finder;\r\n});\ndefine('skylark-utils-dom/datax',[\r\n    \"./dom\",\r\n    \"./langx\",\r\n    \"./finder\"\r\n], function(dom, langx, finder) {\r\n    var map = Array.prototype.map,\r\n        filter = Array.prototype.filter,\r\n        camelCase = langx.camelCase,\r\n        deserializeValue = langx.deserializeValue,\r\n\r\n        capitalRE = /([A-Z])/g,\r\n        propMap = {\r\n            'tabindex': 'tabIndex',\r\n            'readonly': 'readOnly',\r\n            'for': 'htmlFor',\r\n            'class': 'className',\r\n            'maxlength': 'maxLength',\r\n            'cellspacing': 'cellSpacing',\r\n            'cellpadding': 'cellPadding',\r\n            'rowspan': 'rowSpan',\r\n            'colspan': 'colSpan',\r\n            'usemap': 'useMap',\r\n            'frameborder': 'frameBorder',\r\n            'contenteditable': 'contentEditable'\r\n        };\r\n    /*\r\n     * Set property values\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     * @param {String} value\r\n     */\r\n\r\n    function setAttribute(elm, name, value) {\r\n        if (value == null) {\r\n            elm.removeAttribute(name);\r\n        } else {\r\n            elm.setAttribute(name, value);\r\n        }\r\n    }\r\n\r\n    function aria(elm, name, value) {\r\n        return this.attr(elm, \"aria-\" + name, value);\r\n    }\r\n\r\n    /*\r\n     * Set property values\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     * @param {String} value\r\n     */\r\n\r\n    function attr(elm, name, value) {\r\n        if (value === undefined) {\r\n            if (typeof name === \"object\") {\r\n                for (var attrName in name) {\r\n                    attr(elm, attrName, name[attrName]);\r\n                }\r\n                return this;\r\n            } else {\r\n                if (elm.hasAttribute && elm.hasAttribute(name)) {\r\n                    return elm.getAttribute(name);\r\n                }\r\n            }\r\n        } else {\r\n            elm.setAttribute(name, value);\r\n            return this;\r\n        }\r\n    }\r\n\r\n\r\n    /*\r\n     *  Read all \"data-*\" attributes from a node\r\n     * @param {Object} elm  \r\n     */\r\n\r\n    function _attributeData(elm) {\r\n        var store = {}\r\n        langx.each(elm.attributes || [], function(i, attr) {\r\n            if (attr.name.indexOf('data-') == 0) {\r\n                store[camelCase(attr.name.replace('data-', ''))] = deserializeValue(attr.value);\r\n            }\r\n        })\r\n        return store;\r\n    }\r\n\r\n    function _store(elm, confirm) {\r\n        var store = elm[\"_$_store\"];\r\n        if (!store && confirm) {\r\n            store = elm[\"_$_store\"] = _attributeData(elm);\r\n        }\r\n        return store;\r\n    }\r\n\r\n    function _getData(elm, name) {\r\n        if (name === undefined) {\r\n            return _store(elm, true);\r\n        } else {\r\n            var store = _store(elm);\r\n            if (store) {\r\n                if (name in store) {\r\n                    return store[name];\r\n                }\r\n                var camelName = camelCase(name);\r\n                if (camelName in store) {\r\n                    return store[camelName];\r\n                }\r\n            }\r\n            var attrName = 'data-' + name.replace(capitalRE, \"-$1\").toLowerCase()\r\n            return attr(elm, attrName);\r\n        }\r\n\r\n    }\r\n\r\n    function _setData(elm, name, value) {\r\n        var store = _store(elm, true);\r\n        store[camelCase(name)] = value;\r\n    }\r\n\r\n\r\n    /*\r\n     * xxx\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     * @param {String} value\r\n     */\r\n    function data(elm, name, value) {\r\n\r\n        if (value === undefined) {\r\n            if (typeof name === \"object\") {\r\n                for (var dataAttrName in name) {\r\n                    _setData(elm, dataAttrName, name[dataAttrName]);\r\n                }\r\n                return this;\r\n            } else {\r\n                return _getData(elm, name);\r\n            }\r\n        } else {\r\n            _setData(elm, name, value);\r\n            return this;\r\n        }\r\n    } \r\n    /*\r\n     * Remove from the element all items that have not yet been run. \r\n     * @param {Object} elm  \r\n     */\r\n\r\n    function cleanData(elm) {\r\n        if (elm[\"_$_store\"]) {\r\n            delete elm[\"_$_store\"];\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Remove a previously-stored piece of data. \r\n     * @param {Object} elm  \r\n     * @param {Array} names\r\n     */\r\n    function removeData(elm, names) {\r\n        if (names) {\r\n            if (langx.isString(names)) {\r\n                names = names.split(/\\s+/);\r\n            }\r\n            var store = _store(elm, true);\r\n            names.forEach(function(name) {\r\n                delete store[name];\r\n            });            \r\n        } else {\r\n            cleanData(elm);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * xxx \r\n     * @param {Object} elm  \r\n     * @param {Array} names\r\n     */\r\n    function pluck(nodes, property) {\r\n        return map.call(nodes, function(elm) {\r\n            return elm[property];\r\n        });\r\n    }\r\n\r\n    /*\r\n     * Get or set the value of an property for the specified element.\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     * @param {String} value\r\n     */\r\n    function prop(elm, name, value) {\r\n        name = propMap[name] || name;\r\n        if (value === undefined) {\r\n            return elm[name];\r\n        } else {\r\n            elm[name] = value;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * remove Attributes  \r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     */\r\n    function removeAttr(elm, name) {\r\n        name.split(' ').forEach(function(attr) {\r\n            setAttribute(elm, attr);\r\n        });\r\n        return this;\r\n    }\r\n\r\n\r\n    /*\r\n     * Remove the value of a property for the first element in the set of matched elements or set one or more properties for every matched element.\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     */\r\n    function removeProp(elm, name) {\r\n        name.split(' ').forEach(function(prop) {\r\n            delete elm[prop];\r\n        });\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Get the combined text contents of each element in the set of matched elements, including their descendants, or set the text contents of the matched elements.  \r\n     * @param {Object} elm  \r\n     * @param {String} txt\r\n     */\r\n    function text(elm, txt) {\r\n        if (txt === undefined) {\r\n            return elm.textContent;\r\n        } else {\r\n            elm.textContent = txt == null ? '' : '' + txt;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*   \r\n     * Get the current value of the first element in the set of matched elements or set the value of every matched element.\r\n     * @param {Object} elm  \r\n     * @param {String} value\r\n     */\r\n    function val(elm, value) {\r\n        if (value === undefined) {\r\n            if (elm.multiple) {\r\n                // select multiple values\r\n                var selectedOptions = filter.call(finder.find(elm, \"option\"), (function(option) {\r\n                    return option.selected;\r\n                }));\r\n                return pluck(selectedOptions, \"value\");\r\n            } else {\r\n                return elm.value;\r\n            }\r\n        } else {\r\n            elm.value = value;\r\n            return this;\r\n        }\r\n    }\r\n\r\n\r\n    finder.pseudos.data = function( elem, i, match,dataName ) {\r\n        return !!data( elem, dataName || match[3]);\r\n    };\r\n   \r\n\r\n    function datax() {\r\n        return datax;\r\n    }\r\n\r\n    langx.mixin(datax, {\r\n        aria: aria,\r\n\r\n        attr: attr,\r\n\r\n        cleanData: cleanData,\r\n\r\n        data: data,\r\n\r\n        pluck: pluck,\r\n\r\n        prop: prop,\r\n\r\n        removeAttr: removeAttr,\r\n\r\n        removeData: removeData,\r\n\r\n        removeProp: removeProp,\r\n\r\n        text: text,\r\n\r\n        val: val\r\n    });\r\n\r\n    return dom.datax = datax;\r\n});\ndefine('skylark-utils-dom/eventer',[\r\n    \"./dom\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./finder\",\r\n    \"./noder\",\r\n    \"./datax\"\r\n], function(dom, langx, browser, finder, noder, datax) {\r\n    var mixin = langx.mixin,\r\n        each = langx.each,\r\n        slice = Array.prototype.slice,\r\n        uid = langx.uid,\r\n        ignoreProperties = /^([A-Z]|returnValue$|layer[XY]$)/,\r\n        eventMethods = {\r\n            preventDefault: \"isDefaultPrevented\",\r\n            stopImmediatePropagation: \"isImmediatePropagationStopped\",\r\n            stopPropagation: \"isPropagationStopped\"\r\n        },\r\n        readyRE = /complete|loaded|interactive/;\r\n\r\n    function compatible(event, source) {\r\n        if (source || !event.isDefaultPrevented) {\r\n            if (!source) {\r\n                source = event;\r\n            }\r\n\r\n            langx.each(eventMethods, function(name, predicate) {\r\n                var sourceMethod = source[name];\r\n                event[name] = function() {\r\n                    this[predicate] = langx.returnTrue;\r\n                    return sourceMethod && sourceMethod.apply(source, arguments);\r\n                }\r\n                event[predicate] = langx.returnFalse;\r\n            });\r\n        }\r\n        return event;\r\n    }\r\n\r\n    function parse(event) {\r\n        var segs = (\"\" + event).split(\".\");\r\n        return {\r\n            type: segs[0],\r\n            ns: segs.slice(1).sort().join(\" \")\r\n        };\r\n    }\r\n\r\n    //create a custom dom event\r\n    var createEvent = (function() {\r\n        var EventCtors = [\r\n                window[\"CustomEvent\"], // 0 default\r\n                window[\"CompositionEvent\"], // 1\r\n                window[\"DragEvent\"], // 2\r\n                window[\"Event\"], // 3\r\n                window[\"FocusEvent\"], // 4\r\n                window[\"KeyboardEvent\"], // 5\r\n                window[\"MessageEvent\"], // 6\r\n                window[\"MouseEvent\"], // 7\r\n                window[\"MouseScrollEvent\"], // 8\r\n                window[\"MouseWheelEvent\"], // 9\r\n                window[\"MutationEvent\"], // 10\r\n                window[\"ProgressEvent\"], // 11\r\n                window[\"TextEvent\"], // 12\r\n                window[\"TouchEvent\"], // 13\r\n                window[\"UIEvent\"], // 14\r\n                window[\"WheelEvent\"], // 15\r\n                window[\"ClipboardEvent\"] // 16\r\n            ],\r\n            NativeEvents = {\r\n                \"compositionstart\": 1, // CompositionEvent\r\n                \"compositionend\": 1, // CompositionEvent\r\n                \"compositionupdate\": 1, // CompositionEvent\r\n\r\n                \"beforecopy\": 16, // ClipboardEvent\r\n                \"beforecut\": 16, // ClipboardEvent\r\n                \"beforepaste\": 16, // ClipboardEvent\r\n                \"copy\": 16, // ClipboardEvent\r\n                \"cut\": 16, // ClipboardEvent\r\n                \"paste\": 16, // ClipboardEvent\r\n\r\n                \"drag\": 2, // DragEvent\r\n                \"dragend\": 2, // DragEvent\r\n                \"dragenter\": 2, // DragEvent\r\n                \"dragexit\": 2, // DragEvent\r\n                \"dragleave\": 2, // DragEvent\r\n                \"dragover\": 2, // DragEvent\r\n                \"dragstart\": 2, // DragEvent\r\n                \"drop\": 2, // DragEvent\r\n\r\n                \"abort\": 3, // Event\r\n                \"change\": 3, // Event\r\n                \"error\": 3, // Event\r\n                \"selectionchange\": 3, // Event\r\n                \"submit\": 3, // Event\r\n                \"reset\": 3, // Event\r\n\r\n                \"focus\": 4, // FocusEvent\r\n                \"blur\": 4, // FocusEvent\r\n                \"focusin\": 4, // FocusEvent\r\n                \"focusout\": 4, // FocusEvent\r\n\r\n                \"keydown\": 5, // KeyboardEvent\r\n                \"keypress\": 5, // KeyboardEvent\r\n                \"keyup\": 5, // KeyboardEvent\r\n\r\n                \"message\": 6, // MessageEvent\r\n\r\n                \"click\": 7, // MouseEvent\r\n                \"contextmenu\": 7, // MouseEvent\r\n                \"dblclick\": 7, // MouseEvent\r\n                \"mousedown\": 7, // MouseEvent\r\n                \"mouseup\": 7, // MouseEvent\r\n                \"mousemove\": 7, // MouseEvent\r\n                \"mouseover\": 7, // MouseEvent\r\n                \"mouseout\": 7, // MouseEvent\r\n                \"mouseenter\": 7, // MouseEvent\r\n                \"mouseleave\": 7, // MouseEvent\r\n\r\n\r\n                \"textInput\": 12, // TextEvent\r\n\r\n                \"touchstart\": 13, // TouchEvent\r\n                \"touchmove\": 13, // TouchEvent\r\n                \"touchend\": 13, // TouchEvent\r\n\r\n                \"load\": 14, // UIEvent\r\n                \"resize\": 14, // UIEvent\r\n                \"select\": 14, // UIEvent\r\n                \"scroll\": 14, // UIEvent\r\n                \"unload\": 14, // UIEvent,\r\n\r\n                \"wheel\": 15 // WheelEvent\r\n            };\r\n\r\n        function getEventCtor(type) {\r\n            var idx = NativeEvents[type];\r\n            if (!idx) {\r\n                idx = 0;\r\n            }\r\n            return EventCtors[idx];\r\n        }\r\n\r\n        return function(type, props) {\r\n            //create a custom dom event\r\n\r\n            if (langx.isString(type)) {\r\n                props = props || {};\r\n            } else {\r\n                props = type || {};\r\n                type = props.type || \"\";\r\n            }\r\n            var parsed = parse(type);\r\n            type = parsed.type;\r\n\r\n            props = langx.mixin({\r\n                bubbles: true,\r\n                cancelable: true\r\n            }, props);\r\n\r\n            if (parsed.ns) {\r\n                props.namespace = parsed.ns;\r\n            }\r\n\r\n            var ctor = getEventCtor(type),\r\n                e = new ctor(type, props);\r\n\r\n            langx.safeMixin(e, props);\r\n\r\n            return compatible(e);\r\n        };\r\n    })();\r\n\r\n    function createProxy(src, props) {\r\n        var key,\r\n            proxy = {\r\n                originalEvent: src\r\n            };\r\n        for (key in src) {\r\n            if (key !== \"keyIdentifier\" && !ignoreProperties.test(key) && src[key] !== undefined) {\r\n                proxy[key] = src[key];\r\n            }\r\n        }\r\n        if (props) {\r\n            langx.mixin(proxy, props);\r\n        }\r\n        return compatible(proxy, src);\r\n    }\r\n\r\n    var\r\n        specialEvents = {},\r\n        focusinSupported = \"onfocusin\" in window,\r\n        focus = { focus: \"focusin\", blur: \"focusout\" },\r\n        hover = { mouseenter: \"mouseover\", mouseleave: \"mouseout\" },\r\n        realEvent = function(type) {\r\n            return hover[type] || (focusinSupported && focus[type]) || type;\r\n        },\r\n        handlers = {},\r\n        EventBindings = langx.klass({\r\n            init: function(target, event) {\r\n                this._target = target;\r\n                this._event = event;\r\n                this._bindings = [];\r\n            },\r\n\r\n            add: function(fn, options) {\r\n                var bindings = this._bindings,\r\n                    binding = {\r\n                        fn: fn,\r\n                        options: langx.mixin({}, options)\r\n                    };\r\n\r\n                bindings.push(binding);\r\n\r\n                var self = this;\r\n                if (!self._listener) {\r\n                    self._listener = function(domEvt) {\r\n                        var elm = this,\r\n                            e = createProxy(domEvt),\r\n                            args = domEvt._args,\r\n                            bindings = self._bindings,\r\n                            ns = e.namespace;\r\n\r\n                        if (langx.isDefined(args)) {\r\n                            args = [e].concat(args);\r\n                        } else {\r\n                            args = [e];\r\n                        }\r\n\r\n                        langx.each(bindings, function(idx, binding) {\r\n                            var match = elm;\r\n                            if (e.isImmediatePropagationStopped && e.isImmediatePropagationStopped()) {\r\n                                return false;\r\n                            }\r\n                            var fn = binding.fn,\r\n                                options = binding.options || {},\r\n                                selector = options.selector,\r\n                                one = options.one,\r\n                                data = options.data;\r\n\r\n                            if (ns && ns != options.ns && options.ns.indexOf(ns) === -1) {\r\n                                return;\r\n                            }\r\n                            if (selector) {\r\n                                match = finder.closest(e.target, selector);\r\n                                if (match && match !== elm) {\r\n                                    langx.mixin(e, {\r\n                                        currentTarget: match,\r\n                                        liveFired: elm\r\n                                    });\r\n                                } else {\r\n                                    return;\r\n                                }\r\n                            }\r\n\r\n                            var originalEvent = self._event;\r\n                            if (originalEvent in hover) {\r\n                                var related = e.relatedTarget;\r\n                                if (related && (related === match || noder.contains(match, related))) {\r\n                                    return;\r\n                                }\r\n                            }\r\n\r\n                            if (langx.isDefined(data)) {\r\n                                e.data = data;\r\n                            }\r\n\r\n                            if (one) {\r\n                                self.remove(fn, options);\r\n                            }\r\n\r\n                            var result = fn.apply(match, args);\r\n\r\n                            if (result === false) {\r\n                                e.preventDefault();\r\n                                e.stopPropagation();\r\n                            }\r\n                        });;\r\n                    };\r\n\r\n                    var event = self._event;\r\n                    /*\r\n                                        if (event in hover) {\r\n                                            var l = self._listener;\r\n                                            self._listener = function(e) {\r\n                                                var related = e.relatedTarget;\r\n                                                if (!related || (related !== this && !noder.contains(this, related))) {\r\n                                                    return l.apply(this, arguments);\r\n                                                }\r\n                                            }\r\n                                        }\r\n                    */\r\n\r\n                    if (self._target.addEventListener) {\r\n                        self._target.addEventListener(realEvent(event), self._listener, false);\r\n                    } else {\r\n                        console.warn(\"invalid eventer object\", self._target);\r\n                    }\r\n                }\r\n\r\n            },\r\n            remove: function(fn, options) {\r\n                options = langx.mixin({}, options);\r\n\r\n                function matcherFor(ns) {\r\n                    return new RegExp(\"(?:^| )\" + ns.replace(\" \", \" .* ?\") + \"(?: |$)\");\r\n                }\r\n                var matcher;\r\n                if (options.ns) {\r\n                    matcher = matcherFor(options.ns);\r\n                }\r\n\r\n                this._bindings = this._bindings.filter(function(binding) {\r\n                    var removing = (!fn || fn === binding.fn) &&\r\n                        (!matcher || matcher.test(binding.options.ns)) &&\r\n                        (!options.selector || options.selector == binding.options.selector);\r\n\r\n                    return !removing;\r\n                });\r\n                if (this._bindings.length == 0) {\r\n                    if (this._target.removeEventListener) {\r\n                        this._target.removeEventListener(realEvent(this._event), this._listener, false);\r\n                    }\r\n                    this._listener = null;\r\n                }\r\n            }\r\n        }),\r\n        EventsHandler = langx.klass({\r\n            init: function(elm) {\r\n                this._target = elm;\r\n                this._handler = {};\r\n            },\r\n\r\n            // add a event listener\r\n            // selector Optional\r\n            register: function(event, callback, options) {\r\n                // Seperate the event from the namespace\r\n                var parsed = parse(event),\r\n                    event = parsed.type,\r\n                    specialEvent = specialEvents[event],\r\n                    bindingEvent = specialEvent && (specialEvent.bindType || specialEvent.bindEventName);\r\n\r\n                var events = this._handler;\r\n\r\n                // Check if there is already a handler for this event\r\n                if (events[event] === undefined) {\r\n                    events[event] = new EventBindings(this._target, bindingEvent || event);\r\n                }\r\n\r\n                // Register the new callback function\r\n                events[event].add(callback, langx.mixin({\r\n                    ns: parsed.ns\r\n                }, options)); // options:{selector:xxx}\r\n            },\r\n\r\n            // remove a event listener\r\n            unregister: function(event, fn, options) {\r\n                // Check for parameter validtiy\r\n                var events = this._handler,\r\n                    parsed = parse(event);\r\n                event = parsed.type;\r\n\r\n                if (event) {\r\n                    var listener = events[event];\r\n\r\n                    if (listener) {\r\n                        listener.remove(fn, langx.mixin({\r\n                            ns: parsed.ns\r\n                        }, options));\r\n                    }\r\n                } else {\r\n                    //remove all events\r\n                    for (event in events) {\r\n                        var listener = events[event];\r\n                        listener.remove(fn, langx.mixin({\r\n                            ns: parsed.ns\r\n                        }, options));\r\n                    }\r\n                }\r\n            }\r\n        }),\r\n\r\n        findHandler = function(elm) {\r\n            var id = uid(elm),\r\n                handler = handlers[id];\r\n            if (!handler) {\r\n                handler = handlers[id] = new EventsHandler(elm);\r\n            }\r\n            return handler;\r\n        };\r\n\r\n    /*   \r\n     * Remove an event handler for one or more events from the specified element.\r\n     * @param {HTMLElement} elm  \r\n     * @param {String} events\r\n     * @param {String　Optional } selector\r\n     * @param {Function} callback\r\n     */\r\n    function off(elm, events, selector, callback) {\r\n        var $this = this\r\n        if (langx.isPlainObject(events)) {\r\n            langx.each(events, function(type, fn) {\r\n                off(elm, type, selector, fn);\r\n            })\r\n            return $this;\r\n        }\r\n\r\n        if (!langx.isString(selector) && !langx.isFunction(callback) && callback !== false) {\r\n            callback = selector;\r\n            selector = undefined;\r\n        }\r\n\r\n        if (callback === false) {\r\n            callback = langx.returnFalse;\r\n        }\r\n\r\n        if (typeof events == \"string\") {\r\n            if (events.indexOf(\",\") > -1) {\r\n                events = events.split(\",\");\r\n            } else {\r\n                events = events.split(/\\s/);\r\n            }\r\n        }\r\n\r\n        var handler = findHandler(elm);\r\n\r\n        if (events) events.forEach(function(event) {\r\n\r\n            handler.unregister(event, callback, {\r\n                selector: selector,\r\n            });\r\n        });\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Attach an event handler function for one or more events to the selected elements.\r\n     * @param {HTMLElement} elm  \r\n     * @param {String} events\r\n     * @param {String　Optional} selector\r\n     * @param {Anything Optional} data\r\n     * @param {Function} callback\r\n     * @param {Boolean　Optional} one\r\n     */\r\n    function on(elm, events, selector, data, callback, one) {\r\n\r\n        var autoRemove, delegator;\r\n        if (langx.isPlainObject(events)) {\r\n            langx.each(events, function(type, fn) {\r\n                on(elm, type, selector, data, fn, one);\r\n            });\r\n            return this;\r\n        }\r\n\r\n        if (!langx.isString(selector) && !langx.isFunction(callback)) {\r\n            callback = data;\r\n            data = selector;\r\n            selector = undefined;\r\n        }\r\n\r\n        if (langx.isFunction(data)) {\r\n            callback = data;\r\n            data = undefined;\r\n        }\r\n\r\n        if (callback === false) {\r\n            callback = langx.returnFalse;\r\n        }\r\n\r\n        if (typeof events == \"string\") {\r\n            if (events.indexOf(\",\") > -1) {\r\n                events = events.split(\",\");\r\n            } else {\r\n                events = events.split(/\\s/);\r\n            }\r\n        }\r\n\r\n        var handler = findHandler(elm);\r\n\r\n        events.forEach(function(event) {\r\n            if (event == \"ready\") {\r\n                return ready(callback);\r\n            }\r\n            handler.register(event, callback, {\r\n                data: data,\r\n                selector: selector,\r\n                one: !!one\r\n            });\r\n        });\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Attach a handler to an event for the elements. The handler is executed at most once per \r\n     * @param {HTMLElement} elm  \r\n     * @param {String} event\r\n     * @param {String　Optional} selector\r\n     * @param {Anything Optional} data\r\n     * @param {Function} callback\r\n     */\r\n    function one(elm, events, selector, data, callback) {\r\n        on(elm, events, selector, data, callback, 1);\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Prevents propagation and clobbers the default action of the passed event. The same as calling event.preventDefault() and event.stopPropagation(). \r\n     * @param {String} event\r\n     */\r\n    function stop(event) {\r\n        if (window.document.all) {\r\n            event.keyCode = 0;\r\n        }\r\n        if (event.preventDefault) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n        return this;\r\n    }\r\n    /*   \r\n     * Execute all handlers and behaviors attached to the matched elements for the given event  \r\n     * @param {String} evented\r\n     * @param {String} type\r\n     * @param {Array or PlainObject } args\r\n     */\r\n    function trigger(evented, type, args) {\r\n        var e;\r\n        if (type instanceof Event) {\r\n            e = type;\r\n        } else {\r\n            e = createEvent(type, args);\r\n        }\r\n        e._args = args;\r\n\r\n        var fn = (evented.dispatchEvent || evented.trigger);\r\n        if (fn) {\r\n            fn.call(evented, e);\r\n        } else {\r\n            console.warn(\"The evented parameter is not a eventable object\");\r\n        }\r\n\r\n        return this;\r\n    }\r\n    /*   \r\n     * Specify a function to execute when the DOM is fully loaded.  \r\n     * @param {Function} callback\r\n     */\r\n    function ready(callback) {\r\n        // need to check if document.body exists for IE as that browser reports\r\n        // document ready when it hasn't yet created the body elm\r\n        if (readyRE.test(document.readyState) && document.body) {\r\n            langx.defer(callback);\r\n        } else {\r\n            document.addEventListener('DOMContentLoaded', callback, false);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    var keyCodeLookup = {\r\n        \"backspace\": 8,\r\n        \"comma\": 188,\r\n        \"delete\": 46,\r\n        \"down\": 40,\r\n        \"end\": 35,\r\n        \"enter\": 13,\r\n        \"escape\": 27,\r\n        \"home\": 36,\r\n        \"left\": 37,\r\n        \"page_down\": 34,\r\n        \"page_up\": 33,\r\n        \"period\": 190,\r\n        \"right\": 39,\r\n        \"space\": 32,\r\n        \"tab\": 9,\r\n        \"up\": 38\r\n    };\r\n    //example:\r\n    //shortcuts(elm).add(\"CTRL+ALT+SHIFT+X\",function(){console.log(\"test!\")});\r\n    function shortcuts(elm) {\r\n\r\n        var registry = datax.data(elm, \"shortcuts\");\r\n        if (!registry) {\r\n            registry = {};\r\n            datax.data(elm, \"shortcuts\", registry);\r\n            var run = function(shortcut, event) {\r\n                var n = event.metaKey || event.ctrlKey;\r\n                if (shortcut.ctrl == n && shortcut.alt == event.altKey && shortcut.shift == event.shiftKey) {\r\n                    if (event.keyCode == shortcut.keyCode || event.charCode && event.charCode == shortcut.charCode) {\r\n                        event.preventDefault();\r\n                        if (\"keydown\" == event.type) {\r\n                            shortcut.fn(event);\r\n                        }\r\n                        return true;\r\n                    }\r\n                }\r\n            };\r\n            on(elm, \"keyup keypress keydown\", function(event) {\r\n                if (!(/INPUT|TEXTAREA/.test(event.target.nodeName))) {\r\n                    for (var key in registry) {\r\n                        run(registry[key], event);\r\n                    }\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n        return {\r\n            add: function(pattern, fn) {\r\n                var shortcutKeys;\r\n                if (pattern.indexOf(\",\") > -1) {\r\n                    shortcutKeys = pattern.toLowerCase().split(\",\");\r\n                } else {\r\n                    shortcutKeys = pattern.toLowerCase().split(\" \");\r\n                }\r\n                shortcutKeys.forEach(function(shortcutKey) {\r\n                    var setting = {\r\n                        fn: fn,\r\n                        alt: false,\r\n                        ctrl: false,\r\n                        shift: false\r\n                    };\r\n                    shortcutKey.split(\"+\").forEach(function(key) {\r\n                        switch (key) {\r\n                            case \"alt\":\r\n                            case \"ctrl\":\r\n                            case \"shift\":\r\n                                setting[key] = true;\r\n                                break;\r\n                            default:\r\n                                setting.charCode = key.charCodeAt(0);\r\n                                setting.keyCode = keyCodeLookup[key] || key.toUpperCase().charCodeAt(0);\r\n                        }\r\n                    });\r\n                    var regKey = (setting.ctrl ? \"ctrl\" : \"\") + \",\" + (setting.alt ? \"alt\" : \"\") + \",\" + (setting.shift ? \"shift\" : \"\") + \",\" + setting.keyCode;\r\n                    registry[regKey] = setting;\r\n                })\r\n            }\r\n\r\n        };\r\n\r\n    }\r\n\r\n    if (browser.support.transition) {\r\n        specialEvents.transitionEnd = {\r\n//          handle: function (e) {\r\n//            if ($(e.target).is(this)) return e.handleObj.handler.apply(this, arguments)\r\n//          },\r\n          bindType: browser.support.transition.end,\r\n          delegateType: browser.support.transition.end\r\n        }        \r\n    }\r\n\r\n    function eventer() {\r\n        return eventer;\r\n    }\r\n\r\n    langx.mixin(eventer, {\r\n        create: createEvent,\r\n\r\n        keys: keyCodeLookup,\r\n\r\n        off: off,\r\n\r\n        on: on,\r\n\r\n        one: one,\r\n\r\n        proxy: createProxy,\r\n\r\n        ready: ready,\r\n\r\n        shortcuts: shortcuts,\r\n\r\n        special: specialEvents,\r\n\r\n        stop: stop,\r\n\r\n        trigger: trigger\r\n\r\n    });\r\n\r\n    return dom.eventer = eventer;\r\n});\ndefine('skylark-utils-dom/geom',[\r\n    \"./dom\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./styler\"\r\n], function(dom, langx, noder, styler) {\r\n    var rootNodeRE = /^(?:body|html)$/i,\r\n        px = langx.toPixel,\r\n        offsetParent = noder.offsetParent,\r\n        cachedScrollbarWidth;\r\n\r\n    function scrollbarWidth() {\r\n        if (cachedScrollbarWidth !== undefined) {\r\n            return cachedScrollbarWidth;\r\n        }\r\n        var w1, w2,\r\n            div = noder.createFragment(\"<div style=\" +\r\n                \"'display:block;position:absolute;width:200px;height:200px;overflow:hidden;'>\" +\r\n                \"<div style='height:300px;width:auto;'></div></div>\")[0],\r\n            innerDiv = div.childNodes[0];\r\n\r\n        noder.append(document.body, div);\r\n\r\n        w1 = innerDiv.offsetWidth;\r\n\r\n        styler.css(div, \"overflow\", \"scroll\");\r\n\r\n        w2 = innerDiv.offsetWidth;\r\n\r\n        if (w1 === w2) {\r\n            w2 = div[0].clientWidth;\r\n        }\r\n\r\n        noder.remove(div);\r\n\r\n        return (cachedScrollbarWidth = w1 - w2);\r\n    }\r\n    /*\r\n     * Get the widths of each border of the specified element.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function borderExtents(elm) {\r\n        if (noder.isWindow(elm)) {\r\n            return {\r\n                left : 0,\r\n                top : 0,\r\n                right : 0,\r\n                bottom : 0\r\n            }\r\n        }        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.borderLeftWidth, elm),\r\n            top: px(s.borderTopWidth, elm),\r\n            right: px(s.borderRightWidth, elm),\r\n            bottom: px(s.borderBottomWidth, elm)\r\n        }\r\n    }\r\n\r\n    //viewport coordinate\r\n    /*\r\n     * Get or set the viewport position of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    function boundingPosition(elm, coords) {\r\n        if (coords === undefined) {\r\n            return rootNodeRE.test(elm.nodeName) ? { top: 0, left: 0 } : elm.getBoundingClientRect();\r\n        } else {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            relativePosition(elm, {\r\n                top: coords.top - parentOffset.top - mex.top - pbex.top,\r\n                left: coords.left - parentOffset.left - mex.left - pbex.left\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the viewport rect of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    function boundingRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            return elm.getBoundingClientRect()\r\n        } else {\r\n            boundingPosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the height of the specified element client box.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function clientHeight(elm, value) {\r\n        if (value == undefined) {\r\n            return clientSize(elm).height;\r\n        } else {\r\n            return clientSize(elm, {\r\n                height: value\r\n            });\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the size of the specified element client box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} dimension\r\n     */\r\n    function clientSize(elm, dimension) {\r\n        if (dimension == undefined) {\r\n            return {\r\n                width: elm.clientWidth,\r\n                height: elm.clientHeight\r\n            }\r\n        } else {\r\n            var isBorderBox = (styler.css(elm, \"box-sizing\") === \"border-box\"),\r\n                props = {\r\n                    width: dimension.width,\r\n                    height: dimension.height\r\n                };\r\n            if (!isBorderBox) {\r\n                var pex = paddingExtents(elm);\r\n\r\n                if (props.width !== undefined) {\r\n                    props.width = props.width - pex.left - pex.right;\r\n                }\r\n\r\n                if (props.height !== undefined) {\r\n                    props.height = props.height - pex.top - pex.bottom;\r\n                }\r\n            } else {\r\n                var bex = borderExtents(elm);\r\n\r\n                if (props.width !== undefined) {\r\n                    props.width = props.width + bex.left + bex.right;\r\n                }\r\n\r\n                if (props.height !== undefined) {\r\n                    props.height = props.height + bex.top + bex.bottom;\r\n                }\r\n\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n        return {\r\n            width: elm.clientWidth,\r\n            height: elm.clientHeight\r\n        };\r\n    }\r\n\r\n    /*\r\n     * Get or set the width of the specified element client box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} dimension\r\n     */\r\n    function clientWidth(elm, value) {\r\n        if (value == undefined) {\r\n            return clientSize(elm).width;\r\n        } else {\r\n            clientSize(elm, {\r\n                width: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get the rect of the specified element content box.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function contentRect(elm) {\r\n        var cs = clientSize(elm),\r\n            pex = paddingExtents(elm);\r\n\r\n\r\n        //// On Opera, offsetLeft includes the parent's border\r\n        //if(has(\"opera\")){\r\n        //    pe.l += be.l;\r\n        //    pe.t += be.t;\r\n        //}\r\n        return {\r\n            left: pex.left,\r\n            top: pex.top,\r\n            width: cs.width - pex.left - pex.right,\r\n            height: cs.height - pex.top - pex.bottom\r\n        };\r\n    }\r\n\r\n    /*\r\n     * Get the document size.\r\n     * @param {HTMLDocument} doc\r\n     */\r\n    function getDocumentSize(doc) {\r\n        var documentElement = doc.documentElement,\r\n            body = doc.body,\r\n            max = Math.max,\r\n            scrollWidth = max(documentElement.scrollWidth, body.scrollWidth),\r\n            clientWidth = max(documentElement.clientWidth, body.clientWidth),\r\n            offsetWidth = max(documentElement.offsetWidth, body.offsetWidth),\r\n            scrollHeight = max(documentElement.scrollHeight, body.scrollHeight),\r\n            clientHeight = max(documentElement.clientHeight, body.clientHeight),\r\n            offsetHeight = max(documentElement.offsetHeight, body.offsetHeight);\r\n\r\n        return {\r\n            width: scrollWidth < offsetWidth ? clientWidth : scrollWidth,\r\n            height: scrollHeight < offsetHeight ? clientHeight : scrollHeight\r\n        };\r\n    }\r\n\r\n    /*\r\n     * Get the document size.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function height(elm, value) {\r\n        if (value == undefined) {\r\n            return size(elm).height;\r\n        } else {\r\n            size(elm, {\r\n                height: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get the widths of each margin of the specified element.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function marginExtents(elm) {\r\n        if (noder.isWindow(elm)) {\r\n            return {\r\n                left : 0,\r\n                top : 0,\r\n                right : 0,\r\n                bottom : 0\r\n            }\r\n        }\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.marginLeft),\r\n            top: px(s.marginTop),\r\n            right: px(s.marginRight),\r\n            bottom: px(s.marginBottom),\r\n        }\r\n    }\r\n\r\n\r\n    function marginRect(elm) {\r\n        var obj = relativeRect(elm),\r\n            me = marginExtents(elm);\r\n\r\n        return {\r\n            left: obj.left,\r\n            top: obj.top,\r\n            width: obj.width + me.left + me.right,\r\n            height: obj.height + me.top + me.bottom\r\n        };\r\n    }\r\n\r\n\r\n    function marginSize(elm) {\r\n        var obj = size(elm),\r\n            me = marginExtents(elm);\r\n\r\n        return {\r\n            width: obj.width + me.left + me.right,\r\n            height: obj.height + me.top + me.bottom\r\n        };\r\n    }\r\n\r\n    /*\r\n     * Get the widths of each padding of the specified element.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function paddingExtents(elm) {\r\n        if (noder.isWindow(elm)) {\r\n            return {\r\n                left : 0,\r\n                top : 0,\r\n                right : 0,\r\n                bottom : 0\r\n            }\r\n        }\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.paddingLeft),\r\n            top: px(s.paddingTop),\r\n            right: px(s.paddingRight),\r\n            bottom: px(s.paddingBottom),\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the document position of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    //coordinate to the document\r\n    function pagePosition(elm, coords) {\r\n        if (coords === undefined) {\r\n            var obj = elm.getBoundingClientRect()\r\n            return {\r\n                left: obj.left + window.pageXOffset,\r\n                top: obj.top + window.pageYOffset\r\n            }\r\n        } else {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                parentOffset = pagePosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            relativePosition(elm, {\r\n                top: coords.top - parentOffset.top - mex.top - pbex.top,\r\n                left: coords.left - parentOffset.left - mex.left - pbex.left\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the document rect of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    function pageRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            var obj = elm.getBoundingClientRect()\r\n            return {\r\n                left: obj.left + window.pageXOffset,\r\n                top: obj.top + window.pageYOffset,\r\n                width: Math.round(obj.width),\r\n                height: Math.round(obj.height)\r\n            }\r\n        } else {\r\n            pagePosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the position of the specified element border box , relative to parent element.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    // coordinate relative to it's parent\r\n    function relativePosition(elm, coords) {\r\n        if (coords == undefined) {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                offset = boundingPosition(elm),\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            // Subtract parent offsets and element margins\r\n            return {\r\n                top: offset.top - parentOffset.top - pbex.top, // - mex.top,\r\n                left: offset.left - parentOffset.left - pbex.left, // - mex.left\r\n            }\r\n        } else {\r\n            var props = {\r\n                top: coords.top,\r\n                left: coords.left\r\n            }\r\n\r\n            if (styler.css(elm, \"position\") == \"static\") {\r\n                props['position'] = \"relative\";\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the rect of the specified element border box , relatived to parent element.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    function relativeRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                offset = boundingRect(elm),\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            // Subtract parent offsets and element margins\r\n            return {\r\n                top: offset.top - parentOffset.top - pbex.top, // - mex.top,\r\n                left: offset.left - parentOffset.left - pbex.left, // - mex.left,\r\n                width: offset.width,\r\n                height: offset.height\r\n            }\r\n        } else {\r\n            relativePosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n    /*\r\n     * Scroll the specified element into view.\r\n     * @param {HTMLElement} elm\r\n     * @param {} align\r\n     */\r\n    function scrollIntoView(elm, align) {\r\n        function getOffset(elm, rootElm) {\r\n            var x, y, parent = elm;\r\n\r\n            x = y = 0;\r\n            while (parent && parent != rootElm && parent.nodeType) {\r\n                x += parent.offsetLeft || 0;\r\n                y += parent.offsetTop || 0;\r\n                parent = parent.offsetParent;\r\n            }\r\n\r\n            return { x: x, y: y };\r\n        }\r\n\r\n        var parentElm = elm.parentNode;\r\n        var x, y, width, height, parentWidth, parentHeight;\r\n        var pos = getOffset(elm, parentElm);\r\n\r\n        x = pos.x;\r\n        y = pos.y;\r\n        width = elm.offsetWidth;\r\n        height = elm.offsetHeight;\r\n        parentWidth = parentElm.clientWidth;\r\n        parentHeight = parentElm.clientHeight;\r\n\r\n        if (align == \"end\") {\r\n            x -= parentWidth - width;\r\n            y -= parentHeight - height;\r\n        } else if (align == \"center\") {\r\n            x -= (parentWidth / 2) - (width / 2);\r\n            y -= (parentHeight / 2) - (height / 2);\r\n        }\r\n\r\n        parentElm.scrollLeft = x;\r\n        parentElm.scrollTop = y;\r\n\r\n        return this;\r\n    }\r\n    /*\r\n     * Get or set the current horizontal position of the scroll bar for the specified element.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function scrollLeft(elm, value) {\r\n        var hasScrollLeft = \"scrollLeft\" in elm;\r\n        if (value === undefined) {\r\n            return hasScrollLeft ? elm.scrollLeft : elm.pageXOffset\r\n        } else {\r\n            if (hasScrollLeft) {\r\n                elm.scrollLeft = value;\r\n            } else {\r\n                elm.scrollTo(value, elm.scrollY);\r\n            }\r\n            return this;\r\n        }\r\n    }\r\n    /*\r\n     * Get or the current vertical position of the scroll bar for the specified element.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function scrollTop(elm, value) {\r\n        var hasScrollTop = \"scrollTop\" in elm;\r\n\r\n        if (value === undefined) {\r\n            return hasScrollTop ? elm.scrollTop : elm.pageYOffset\r\n        } else {\r\n            if (hasScrollTop) {\r\n                elm.scrollTop = value;\r\n            } else {\r\n                elm.scrollTo(elm.scrollX, value);\r\n            }\r\n            return this;\r\n        }\r\n    }\r\n    /*\r\n     * Get or set the size of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject}dimension\r\n     */\r\n    function size(elm, dimension) {\r\n        if (dimension == undefined) {\r\n            if (langx.isWindow(elm)) {\r\n                return {\r\n                    width: elm.innerWidth,\r\n                    height: elm.innerHeight\r\n                }\r\n\r\n            } else if (langx.isDocument(elm)) {\r\n                return getDocumentSize(document);\r\n            } else {\r\n                return {\r\n                    width: elm.offsetWidth,\r\n                    height: elm.offsetHeight\r\n                }\r\n            }\r\n        } else {\r\n            var isBorderBox = (styler.css(elm, \"box-sizing\") === \"border-box\"),\r\n                props = {\r\n                    width: dimension.width,\r\n                    height: dimension.height\r\n                };\r\n            if (!isBorderBox) {\r\n                var pex = paddingExtents(elm),\r\n                    bex = borderExtents(elm);\r\n\r\n                if (props.width !== undefined && props.width !== \"\" && props.width !== null) {\r\n                    props.width = props.width - pex.left - pex.right - bex.left - bex.right;\r\n                }\r\n\r\n                if (props.height !== undefined && props.height !== \"\" && props.height !== null) {\r\n                    props.height = props.height - pex.top - pex.bottom - bex.top - bex.bottom;\r\n                }\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n    }\r\n    /*\r\n     * Get or set the size of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function width(elm, value) {\r\n        if (value == undefined) {\r\n            return size(elm).width;\r\n        } else {\r\n            size(elm, {\r\n                width: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function geom() {\r\n        return geom;\r\n    }\r\n\r\n    langx.mixin(geom, {\r\n        borderExtents: borderExtents,\r\n        //viewport coordinate\r\n        boundingPosition: boundingPosition,\r\n\r\n        boundingRect: boundingRect,\r\n\r\n        clientHeight: clientHeight,\r\n\r\n        clientSize: clientSize,\r\n\r\n        clientWidth: clientWidth,\r\n\r\n        contentRect: contentRect,\r\n\r\n        getDocumentSize: getDocumentSize,\r\n\r\n        height: height,\r\n\r\n        marginExtents: marginExtents,\r\n\r\n        marginRect: marginRect,\r\n\r\n        marginSize: marginSize,\r\n\r\n        offsetParent: offsetParent,\r\n\r\n        paddingExtents: paddingExtents,\r\n\r\n        //coordinate to the document\r\n        pagePosition: pagePosition,\r\n\r\n        pageRect: pageRect,\r\n\r\n        // coordinate relative to it's parent\r\n        relativePosition: relativePosition,\r\n\r\n        relativeRect: relativeRect,\r\n\r\n        scrollbarWidth: scrollbarWidth,\r\n\r\n        scrollIntoView: scrollIntoView,\r\n\r\n        scrollLeft: scrollLeft,\r\n\r\n        scrollTop: scrollTop,\r\n\r\n        size: size,\r\n\r\n        width: width\r\n    });\r\n\r\n    ( function() {\r\n        var max = Math.max,\r\n            abs = Math.abs,\r\n            rhorizontal = /left|center|right/,\r\n            rvertical = /top|center|bottom/,\r\n            roffset = /[\\+\\-]\\d+(\\.[\\d]+)?%?/,\r\n            rposition = /^\\w+/,\r\n            rpercent = /%$/;\r\n\r\n        function getOffsets( offsets, width, height ) {\r\n            return [\r\n                parseFloat( offsets[ 0 ] ) * ( rpercent.test( offsets[ 0 ] ) ? width / 100 : 1 ),\r\n                parseFloat( offsets[ 1 ] ) * ( rpercent.test( offsets[ 1 ] ) ? height / 100 : 1 )\r\n            ];\r\n        }\r\n\r\n        function parseCss( element, property ) {\r\n            return parseInt( styler.css( element, property ), 10 ) || 0;\r\n        }\r\n\r\n        function getDimensions( raw ) {\r\n            if ( raw.nodeType === 9 ) {\r\n                return {\r\n                    size: size(raw),\r\n                    offset: { top: 0, left: 0 }\r\n                };\r\n            }\r\n            if ( noder.isWindow( raw ) ) {\r\n                return {\r\n                    size: size(raw),\r\n                    offset: { \r\n                        top: scrollTop(raw), \r\n                        left: scrollLeft(raw) \r\n                    }\r\n                };\r\n            }\r\n            if ( raw.preventDefault ) {\r\n                return {\r\n                    size : {\r\n                        width: 0,\r\n                        height: 0\r\n                    },\r\n                    offset: { \r\n                        top: raw.pageY, \r\n                        left: raw.pageX \r\n                    }\r\n                };\r\n            }\r\n            return {\r\n                size: size(raw),\r\n                offset: pagePosition(raw)\r\n            };\r\n        }\r\n\r\n        function getScrollInfo( within ) {\r\n            var overflowX = within.isWindow || within.isDocument ? \"\" :\r\n                    styler.css(within.element,\"overflow-x\" ),\r\n                overflowY = within.isWindow || within.isDocument ? \"\" :\r\n                    styler.css(within.element,\"overflow-y\" ),\r\n                hasOverflowX = overflowX === \"scroll\" ||\r\n                    ( overflowX === \"auto\" && within.width < scrollWidth(within.element) ),\r\n                hasOverflowY = overflowY === \"scroll\" ||\r\n                    ( overflowY === \"auto\" && within.height < scrollHeight(within.element));\r\n            return {\r\n                width: hasOverflowY ? scrollbarWidth() : 0,\r\n                height: hasOverflowX ? scrollbarWidth() : 0\r\n            };\r\n        }\r\n\r\n        function getWithinInfo( element ) {\r\n            var withinElement = element || window,\r\n                isWindow = noder.isWindow( withinElement),\r\n                isDocument = !!withinElement && withinElement.nodeType === 9,\r\n                hasOffset = !isWindow && !isDocument,\r\n                msize = marginSize(withinElement);\r\n            return {\r\n                element: withinElement,\r\n                isWindow: isWindow,\r\n                isDocument: isDocument,\r\n                offset: hasOffset ? pagePosition(element) : { left: 0, top: 0 },\r\n                scrollLeft: scrollLeft(withinElement),\r\n                scrollTop: scrollTop(withinElement),\r\n                width: msize.width,\r\n                height: msize.height\r\n            };\r\n        }\r\n\r\n        function posit(elm,options ) {\r\n            // Make a copy, we don't want to modify arguments\r\n            options = langx.extend( {}, options );\r\n\r\n            var atOffset, targetWidth, targetHeight, targetOffset, basePosition, dimensions,\r\n                target = options.of,\r\n                within = getWithinInfo( options.within ),\r\n                scrollInfo = getScrollInfo( within ),\r\n                collision = ( options.collision || \"flip\" ).split( \" \" ),\r\n                offsets = {};\r\n\r\n            dimensions = getDimensions( target );\r\n            if ( target.preventDefault ) {\r\n\r\n                // Force left top to allow flipping\r\n                options.at = \"left top\";\r\n            }\r\n            targetWidth = dimensions.size.width;\r\n            targetHeight = dimensions.size.height;\r\n            targetOffset = dimensions.offset;\r\n\r\n            // Clone to reuse original targetOffset later\r\n            basePosition = langx.extend( {}, targetOffset );\r\n\r\n            // Force my and at to have valid horizontal and vertical positions\r\n            // if a value is missing or invalid, it will be converted to center\r\n            langx.each( [ \"my\", \"at\" ], function() {\r\n                var pos = ( options[ this ] || \"\" ).split( \" \" ),\r\n                    horizontalOffset,\r\n                    verticalOffset;\r\n\r\n                if ( pos.length === 1 ) {\r\n                    pos = rhorizontal.test( pos[ 0 ] ) ?\r\n                        pos.concat( [ \"center\" ] ) :\r\n                        rvertical.test( pos[ 0 ] ) ?\r\n                            [ \"center\" ].concat( pos ) :\r\n                            [ \"center\", \"center\" ];\r\n                }\r\n                pos[ 0 ] = rhorizontal.test( pos[ 0 ] ) ? pos[ 0 ] : \"center\";\r\n                pos[ 1 ] = rvertical.test( pos[ 1 ] ) ? pos[ 1 ] : \"center\";\r\n\r\n                // Calculate offsets\r\n                horizontalOffset = roffset.exec( pos[ 0 ] );\r\n                verticalOffset = roffset.exec( pos[ 1 ] );\r\n                offsets[ this ] = [\r\n                    horizontalOffset ? horizontalOffset[ 0 ] : 0,\r\n                    verticalOffset ? verticalOffset[ 0 ] : 0\r\n                ];\r\n\r\n                // Reduce to just the positions without the offsets\r\n                options[ this ] = [\r\n                    rposition.exec( pos[ 0 ] )[ 0 ],\r\n                    rposition.exec( pos[ 1 ] )[ 0 ]\r\n                ];\r\n            } );\r\n\r\n            // Normalize collision option\r\n            if ( collision.length === 1 ) {\r\n                collision[ 1 ] = collision[ 0 ];\r\n            }\r\n\r\n            if ( options.at[ 0 ] === \"right\" ) {\r\n                basePosition.left += targetWidth;\r\n            } else if ( options.at[ 0 ] === \"center\" ) {\r\n                basePosition.left += targetWidth / 2;\r\n            }\r\n\r\n            if ( options.at[ 1 ] === \"bottom\" ) {\r\n                basePosition.top += targetHeight;\r\n            } else if ( options.at[ 1 ] === \"center\" ) {\r\n                basePosition.top += targetHeight / 2;\r\n            }\r\n\r\n            atOffset = getOffsets( offsets.at, targetWidth, targetHeight );\r\n            basePosition.left += atOffset[ 0 ];\r\n            basePosition.top += atOffset[ 1 ];\r\n\r\n            return ( function(elem) {\r\n                var collisionPosition, using,\r\n                    msize = marginSize(elem),\r\n                    elemWidth = msize.width,\r\n                    elemHeight = msize.height,\r\n                    marginLeft = parseCss( elem, \"marginLeft\" ),\r\n                    marginTop = parseCss( elem, \"marginTop\" ),\r\n                    collisionWidth = elemWidth + marginLeft + parseCss( elem, \"marginRight\" ) +\r\n                        scrollInfo.width,\r\n                    collisionHeight = elemHeight + marginTop + parseCss( elem, \"marginBottom\" ) +\r\n                        scrollInfo.height,\r\n                    position = langx.extend( {}, basePosition ),\r\n                    myOffset = getOffsets( offsets.my, msize.width, msize.height);\r\n\r\n                if ( options.my[ 0 ] === \"right\" ) {\r\n                    position.left -= elemWidth;\r\n                } else if ( options.my[ 0 ] === \"center\" ) {\r\n                    position.left -= elemWidth / 2;\r\n                }\r\n\r\n                if ( options.my[ 1 ] === \"bottom\" ) {\r\n                    position.top -= elemHeight;\r\n                } else if ( options.my[ 1 ] === \"center\" ) {\r\n                    position.top -= elemHeight / 2;\r\n                }\r\n\r\n                position.left += myOffset[ 0 ];\r\n                position.top += myOffset[ 1 ];\r\n\r\n                collisionPosition = {\r\n                    marginLeft: marginLeft,\r\n                    marginTop: marginTop\r\n                };\r\n\r\n                langx.each( [ \"left\", \"top\" ], function( i, dir ) {\r\n                    if ( positions[ collision[ i ] ] ) {\r\n                        positions[ collision[ i ] ][ dir ]( position, {\r\n                            targetWidth: targetWidth,\r\n                            targetHeight: targetHeight,\r\n                            elemWidth: elemWidth,\r\n                            elemHeight: elemHeight,\r\n                            collisionPosition: collisionPosition,\r\n                            collisionWidth: collisionWidth,\r\n                            collisionHeight: collisionHeight,\r\n                            offset: [ atOffset[ 0 ] + myOffset[ 0 ], atOffset [ 1 ] + myOffset[ 1 ] ],\r\n                            my: options.my,\r\n                            at: options.at,\r\n                            within: within,\r\n                            elem: elem\r\n                        } );\r\n                    }\r\n                } );\r\n\r\n                if ( options.using ) {\r\n\r\n                    // Adds feedback as second argument to using callback, if present\r\n                    using = function( props ) {\r\n                        var left = targetOffset.left - position.left,\r\n                            right = left + targetWidth - elemWidth,\r\n                            top = targetOffset.top - position.top,\r\n                            bottom = top + targetHeight - elemHeight,\r\n                            feedback = {\r\n                                target: {\r\n                                    element: target,\r\n                                    left: targetOffset.left,\r\n                                    top: targetOffset.top,\r\n                                    width: targetWidth,\r\n                                    height: targetHeight\r\n                                },\r\n                                element: {\r\n                                    element: elem,\r\n                                    left: position.left,\r\n                                    top: position.top,\r\n                                    width: elemWidth,\r\n                                    height: elemHeight\r\n                                },\r\n                                horizontal: right < 0 ? \"left\" : left > 0 ? \"right\" : \"center\",\r\n                                vertical: bottom < 0 ? \"top\" : top > 0 ? \"bottom\" : \"middle\"\r\n                            };\r\n                        if ( targetWidth < elemWidth && abs( left + right ) < targetWidth ) {\r\n                            feedback.horizontal = \"center\";\r\n                        }\r\n                        if ( targetHeight < elemHeight && abs( top + bottom ) < targetHeight ) {\r\n                            feedback.vertical = \"middle\";\r\n                        }\r\n                        if ( max( abs( left ), abs( right ) ) > max( abs( top ), abs( bottom ) ) ) {\r\n                            feedback.important = \"horizontal\";\r\n                        } else {\r\n                            feedback.important = \"vertical\";\r\n                        }\r\n                        options.using.call( this, props, feedback );\r\n                    };\r\n                }\r\n\r\n                pagePosition(elem, langx.extend( position, { using: using } ));\r\n            })(elm);\r\n        }\r\n\r\n        var positions = {\r\n            fit: {\r\n                left: function( position, data ) {\r\n                    var within = data.within,\r\n                        withinOffset = within.isWindow ? within.scrollLeft : within.offset.left,\r\n                        outerWidth = within.width,\r\n                        collisionPosLeft = position.left - data.collisionPosition.marginLeft,\r\n                        overLeft = withinOffset - collisionPosLeft,\r\n                        overRight = collisionPosLeft + data.collisionWidth - outerWidth - withinOffset,\r\n                        newOverRight;\r\n\r\n                    // Element is wider than within\r\n                    if ( data.collisionWidth > outerWidth ) {\r\n\r\n                        // Element is initially over the left side of within\r\n                        if ( overLeft > 0 && overRight <= 0 ) {\r\n                            newOverRight = position.left + overLeft + data.collisionWidth - outerWidth -\r\n                                withinOffset;\r\n                            position.left += overLeft - newOverRight;\r\n\r\n                        // Element is initially over right side of within\r\n                        } else if ( overRight > 0 && overLeft <= 0 ) {\r\n                            position.left = withinOffset;\r\n\r\n                        // Element is initially over both left and right sides of within\r\n                        } else {\r\n                            if ( overLeft > overRight ) {\r\n                                position.left = withinOffset + outerWidth - data.collisionWidth;\r\n                            } else {\r\n                                position.left = withinOffset;\r\n                            }\r\n                        }\r\n\r\n                    // Too far left -> align with left edge\r\n                    } else if ( overLeft > 0 ) {\r\n                        position.left += overLeft;\r\n\r\n                    // Too far right -> align with right edge\r\n                    } else if ( overRight > 0 ) {\r\n                        position.left -= overRight;\r\n\r\n                    // Adjust based on position and margin\r\n                    } else {\r\n                        position.left = max( position.left - collisionPosLeft, position.left );\r\n                    }\r\n                },\r\n                top: function( position, data ) {\r\n                    var within = data.within,\r\n                        withinOffset = within.isWindow ? within.scrollTop : within.offset.top,\r\n                        outerHeight = data.within.height,\r\n                        collisionPosTop = position.top - data.collisionPosition.marginTop,\r\n                        overTop = withinOffset - collisionPosTop,\r\n                        overBottom = collisionPosTop + data.collisionHeight - outerHeight - withinOffset,\r\n                        newOverBottom;\r\n\r\n                    // Element is taller than within\r\n                    if ( data.collisionHeight > outerHeight ) {\r\n\r\n                        // Element is initially over the top of within\r\n                        if ( overTop > 0 && overBottom <= 0 ) {\r\n                            newOverBottom = position.top + overTop + data.collisionHeight - outerHeight -\r\n                                withinOffset;\r\n                            position.top += overTop - newOverBottom;\r\n\r\n                        // Element is initially over bottom of within\r\n                        } else if ( overBottom > 0 && overTop <= 0 ) {\r\n                            position.top = withinOffset;\r\n\r\n                        // Element is initially over both top and bottom of within\r\n                        } else {\r\n                            if ( overTop > overBottom ) {\r\n                                position.top = withinOffset + outerHeight - data.collisionHeight;\r\n                            } else {\r\n                                position.top = withinOffset;\r\n                            }\r\n                        }\r\n\r\n                    // Too far up -> align with top\r\n                    } else if ( overTop > 0 ) {\r\n                        position.top += overTop;\r\n\r\n                    // Too far down -> align with bottom edge\r\n                    } else if ( overBottom > 0 ) {\r\n                        position.top -= overBottom;\r\n\r\n                    // Adjust based on position and margin\r\n                    } else {\r\n                        position.top = max( position.top - collisionPosTop, position.top );\r\n                    }\r\n                }\r\n            },\r\n            flip: {\r\n                left: function( position, data ) {\r\n                    var within = data.within,\r\n                        withinOffset = within.offset.left + within.scrollLeft,\r\n                        outerWidth = within.width,\r\n                        offsetLeft = within.isWindow ? within.scrollLeft : within.offset.left,\r\n                        collisionPosLeft = position.left - data.collisionPosition.marginLeft,\r\n                        overLeft = collisionPosLeft - offsetLeft,\r\n                        overRight = collisionPosLeft + data.collisionWidth - outerWidth - offsetLeft,\r\n                        myOffset = data.my[ 0 ] === \"left\" ?\r\n                            -data.elemWidth :\r\n                            data.my[ 0 ] === \"right\" ?\r\n                                data.elemWidth :\r\n                                0,\r\n                        atOffset = data.at[ 0 ] === \"left\" ?\r\n                            data.targetWidth :\r\n                            data.at[ 0 ] === \"right\" ?\r\n                                -data.targetWidth :\r\n                                0,\r\n                        offset = -2 * data.offset[ 0 ],\r\n                        newOverRight,\r\n                        newOverLeft;\r\n\r\n                    if ( overLeft < 0 ) {\r\n                        newOverRight = position.left + myOffset + atOffset + offset + data.collisionWidth -\r\n                            outerWidth - withinOffset;\r\n                        if ( newOverRight < 0 || newOverRight < abs( overLeft ) ) {\r\n                            position.left += myOffset + atOffset + offset;\r\n                        }\r\n                    } else if ( overRight > 0 ) {\r\n                        newOverLeft = position.left - data.collisionPosition.marginLeft + myOffset +\r\n                            atOffset + offset - offsetLeft;\r\n                        if ( newOverLeft > 0 || abs( newOverLeft ) < overRight ) {\r\n                            position.left += myOffset + atOffset + offset;\r\n                        }\r\n                    }\r\n                },\r\n                top: function( position, data ) {\r\n                    var within = data.within,\r\n                        withinOffset = within.offset.top + within.scrollTop,\r\n                        outerHeight = within.height,\r\n                        offsetTop = within.isWindow ? within.scrollTop : within.offset.top,\r\n                        collisionPosTop = position.top - data.collisionPosition.marginTop,\r\n                        overTop = collisionPosTop - offsetTop,\r\n                        overBottom = collisionPosTop + data.collisionHeight - outerHeight - offsetTop,\r\n                        top = data.my[ 1 ] === \"top\",\r\n                        myOffset = top ?\r\n                            -data.elemHeight :\r\n                            data.my[ 1 ] === \"bottom\" ?\r\n                                data.elemHeight :\r\n                                0,\r\n                        atOffset = data.at[ 1 ] === \"top\" ?\r\n                            data.targetHeight :\r\n                            data.at[ 1 ] === \"bottom\" ?\r\n                                -data.targetHeight :\r\n                                0,\r\n                        offset = -2 * data.offset[ 1 ],\r\n                        newOverTop,\r\n                        newOverBottom;\r\n                    if ( overTop < 0 ) {\r\n                        newOverBottom = position.top + myOffset + atOffset + offset + data.collisionHeight -\r\n                            outerHeight - withinOffset;\r\n                        if ( newOverBottom < 0 || newOverBottom < abs( overTop ) ) {\r\n                            position.top += myOffset + atOffset + offset;\r\n                        }\r\n                    } else if ( overBottom > 0 ) {\r\n                        newOverTop = position.top - data.collisionPosition.marginTop + myOffset + atOffset +\r\n                            offset - offsetTop;\r\n                        if ( newOverTop > 0 || abs( newOverTop ) < overBottom ) {\r\n                            position.top += myOffset + atOffset + offset;\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n            flipfit: {\r\n                left: function() {\r\n                    positions.flip.left.apply( this, arguments );\r\n                    positions.fit.left.apply( this, arguments );\r\n                },\r\n                top: function() {\r\n                    positions.flip.top.apply( this, arguments );\r\n                    positions.fit.top.apply( this, arguments );\r\n                }\r\n            }\r\n        };\r\n\r\n        geom.posit = posit;\r\n    })();\r\n\r\n    return dom.geom = geom;\r\n});\ndefine('skylark-utils-dom/transforms',[\r\n    \"./dom\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./datax\",\r\n    \"./styler\"\r\n], function(dom,langx,browser,datax,styler) {\r\n  var css3Transform = browser.normalizeCssProperty(\"transform\");\r\n\r\n  function getMatrix(radian, x, y) {\r\n    var Cos = Math.cos(radian), Sin = Math.sin(radian);\r\n    return {\r\n      M11: Cos * x, \r\n      M12: -Sin * y,\r\n      M21: Sin * x, \r\n      M22: Cos * y\r\n    };\r\n  }\r\n\r\n  function getZoom(scale, zoom) {\r\n      return scale > 0 && scale > -zoom ? zoom :\r\n        scale < 0 && scale < zoom ? -zoom : 0;\r\n  }\r\n\r\n    function change(el,d) {\r\n      var matrix = getMatrix(d.radian, d.y, d.x);\r\n      styler.css(el,css3Transform, \"matrix(\"\r\n        + matrix.M11.toFixed(16) + \",\" + matrix.M21.toFixed(16) + \",\"\r\n        + matrix.M12.toFixed(16) + \",\" + matrix.M22.toFixed(16) + \", 0, 0)\"\r\n      );      \r\n  }\r\n\r\n  function transformData(el,d) {\r\n    if (d) {\r\n      datax.data(el,\"transform\",d);\r\n    } else {\r\n      d = datax.data(el,\"transform\") || {};\r\n      d.radian = d.radian || 0;\r\n      d.x = d.x || 1;\r\n      d.y = d.y || 1;\r\n      d.zoom = d.zoom || 1;\r\n      return d;     \r\n    }\r\n  }\r\n\r\n  var calcs = {\r\n    //Vertical flip\r\n    vertical : function (d) {\r\n        d.radian = Math.PI - d.radian; \r\n        d.y *= -1;\r\n    },\r\n\r\n   //Horizontal flip\r\n    horizontal : function (d) {\r\n        d.radian = Math.PI - d.radian; \r\n        d.x *= -1;\r\n    },\r\n\r\n    //Rotate according to angle\r\n    rotate : function (d,degress) {\r\n        d.radian = degress * Math.PI / 180;; \r\n    },\r\n\r\n    //Turn left 90 degrees\r\n    left : function (d) {\r\n        d.radian -= Math.PI / 2; \r\n    },\r\n\r\n    //Turn right 90 degrees\r\n    right : function (d) {\r\n        d.radian += Math.PI / 2; \r\n    },\r\n \r\n    //zoom\r\n    scale: function (d,zoom) {\r\n        var hZoom = getZoom(d.y, zoom), vZoom = getZoom(d.x, zoom);\r\n        if (hZoom && vZoom) {\r\n          d.y += hZoom; \r\n          d.x += vZoom;\r\n        }\r\n    }, \r\n\r\n    //zoom in\r\n    zoomin: function (d) { \r\n      calcs.scale(d,0.1); \r\n    },\r\n    \r\n    //zoom out\r\n    zoomout: function (d) { \r\n      calcs.scale(d,-0.1); \r\n    }\r\n\r\n  };\r\n  \r\n  \r\n  function _createApiMethod(calcFunc) {\r\n    return function() {\r\n      var args = langx.makeArray(arguments),\r\n        el = args.shift(),\r\n          d = transformData(el);\r\n        args.unshift(d);\r\n        calcFunc.apply(this,args)\r\n        change(el,d);\r\n        transformData(el,d);\r\n    }\r\n  }\r\n  \r\n  function transforms() {\r\n    return transforms;\r\n  }\r\n\r\n  [\"vertical\",\"horizontal\",\"rotate\",\"left\",\"right\",\"scale\",\"zoom\",\"zoomin\",\"zoomout\"].forEach(function(name){\r\n    transforms[name] = _createApiMethod(calcs[name]);\r\n  });\r\n\r\n  langx.mixin(transforms, {\r\n    reset : function(el) {\r\n      var d = {\r\n        x : 1,\r\n        y : 1,\r\n        radian : 0,\r\n      }\r\n      change(el,d);\r\n      transformData(el,d);\r\n    }\r\n  });\r\n\r\n\r\n  return dom.transforms = transforms;\r\n});\r\n\ndefine('skylark-utils-dom/fx',[\r\n    \"./dom\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./geom\",\r\n    \"./styler\",\r\n    \"./eventer\"\r\n], function(dom, langx, browser, geom, styler, eventer) {\r\n    var animationName,\r\n        animationDuration,\r\n        animationTiming,\r\n        animationDelay,\r\n        transitionProperty,\r\n        transitionDuration,\r\n        transitionTiming,\r\n        transitionDelay,\r\n\r\n        animationEnd = browser.normalizeCssEvent('AnimationEnd'),\r\n        transitionEnd = browser.normalizeCssEvent('TransitionEnd'),\r\n\r\n        supportedTransforms = /^((translate|rotate|scale)(X|Y|Z|3d)?|matrix(3d)?|perspective|skew(X|Y)?)$/i,\r\n        transform = browser.css3PropPrefix + \"transform\",\r\n        cssReset = {};\r\n\r\n\r\n    cssReset[animationName = browser.normalizeCssProperty(\"animation-name\")] =\r\n        cssReset[animationDuration = browser.normalizeCssProperty(\"animation-duration\")] =\r\n        cssReset[animationDelay = browser.normalizeCssProperty(\"animation-delay\")] =\r\n        cssReset[animationTiming = browser.normalizeCssProperty(\"animation-timing-function\")] = \"\";\r\n\r\n    cssReset[transitionProperty = browser.normalizeCssProperty(\"transition-property\")] =\r\n        cssReset[transitionDuration = browser.normalizeCssProperty(\"transition-duration\")] =\r\n        cssReset[transitionDelay = browser.normalizeCssProperty(\"transition-delay\")] =\r\n        cssReset[transitionTiming = browser.normalizeCssProperty(\"transition-timing-function\")] = \"\";\r\n\r\n\r\n\r\n    /*   \r\n     * Perform a custom animation of a set of CSS properties.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} properties\r\n     * @param {String} ease\r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     * @param {Number or String} delay\r\n     */\r\n    function animate(elm, properties, duration, ease, callback, delay) {\r\n        var key,\r\n            cssValues = {},\r\n            cssProperties = [],\r\n            transforms = \"\",\r\n            that = this,\r\n            endEvent,\r\n            wrappedCallback,\r\n            fired = false,\r\n            hasScrollTop = false,\r\n            resetClipAuto = false;\r\n\r\n        if (langx.isPlainObject(duration)) {\r\n            ease = duration.easing;\r\n            callback = duration.complete;\r\n            delay = duration.delay;\r\n            duration = duration.duration;\r\n        }\r\n\r\n        if (langx.isString(duration)) {\r\n            duration = fx.speeds[duration];\r\n        }\r\n        if (duration === undefined) {\r\n            duration = fx.speeds.normal;\r\n        }\r\n        duration = duration / 1000;\r\n        if (fx.off) {\r\n            duration = 0;\r\n        }\r\n\r\n        if (langx.isFunction(ease)) {\r\n            callback = ease;\r\n            eace = \"swing\";\r\n        } else {\r\n            ease = ease || \"swing\";\r\n        }\r\n\r\n        if (delay) {\r\n            delay = delay / 1000;\r\n        } else {\r\n            delay = 0;\r\n        }\r\n\r\n        if (langx.isString(properties)) {\r\n            // keyframe animation\r\n            cssValues[animationName] = properties;\r\n            cssValues[animationDuration] = duration + \"s\";\r\n            cssValues[animationTiming] = ease;\r\n            endEvent = animationEnd;\r\n        } else {\r\n            // CSS transitions\r\n            for (key in properties) {\r\n                var v = properties[key];\r\n                if (supportedTransforms.test(key)) {\r\n                    transforms += key + \"(\" + v + \") \";\r\n                } else {\r\n                    if (key === \"scrollTop\") {\r\n                        hasScrollTop = true;\r\n                    }\r\n                    if (key == \"clip\" && langx.isPlainObject(v)) {\r\n                        cssValues[key] = \"rect(\" + v.top+\"px,\"+ v.right +\"px,\"+ v.bottom +\"px,\"+ v.left+\"px)\";\r\n                        if (styler.css(elm,\"clip\") == \"auto\") {\r\n                            var size = geom.size(elm);\r\n                            styler.css(elm,\"clip\",\"rect(\"+\"0px,\"+ size.width +\"px,\"+ size.height +\"px,\"+\"0px)\");  \r\n                            resetClipAuto = true;\r\n                        }\r\n\r\n                    } else {\r\n                        cssValues[key] = v;\r\n                    }\r\n                    cssProperties.push(langx.dasherize(key));\r\n                }\r\n            }\r\n            endEvent = transitionEnd;\r\n        }\r\n\r\n        if (transforms) {\r\n            cssValues[transform] = transforms;\r\n            cssProperties.push(transform);\r\n        }\r\n\r\n        if (duration > 0 && langx.isPlainObject(properties)) {\r\n            cssValues[transitionProperty] = cssProperties.join(\", \");\r\n            cssValues[transitionDuration] = duration + \"s\";\r\n            cssValues[transitionDelay] = delay + \"s\";\r\n            cssValues[transitionTiming] = ease;\r\n        }\r\n\r\n        wrappedCallback = function(event) {\r\n            fired = true;\r\n            if (event) {\r\n                if (event.target !== event.currentTarget) {\r\n                    return // makes sure the event didn't bubble from \"below\"\r\n                }\r\n                eventer.off(event.target, endEvent, wrappedCallback)\r\n            } else {\r\n                eventer.off(elm, animationEnd, wrappedCallback) // triggered by setTimeout\r\n            }\r\n            styler.css(elm, cssReset);\r\n            if (resetClipAuto) {\r\n //               styler.css(elm,\"clip\",\"auto\");\r\n            }\r\n            callback && callback.call(this);\r\n        };\r\n\r\n        if (duration > 0) {\r\n            eventer.on(elm, endEvent, wrappedCallback);\r\n            // transitionEnd is not always firing on older Android phones\r\n            // so make sure it gets fired\r\n            langx.debounce(function() {\r\n                if (fired) {\r\n                    return;\r\n                }\r\n                wrappedCallback.call(that);\r\n            }, ((duration + delay) * 1000) + 25)();\r\n        }\r\n\r\n        // trigger page reflow so new elements can animate\r\n        elm.clientLeft;\r\n\r\n        styler.css(elm, cssValues);\r\n\r\n        if (duration <= 0) {\r\n            langx.debounce(function() {\r\n                if (fired) {\r\n                    return;\r\n                }\r\n                wrappedCallback.call(that);\r\n            }, 0)();\r\n        }\r\n\r\n        if (hasScrollTop) {\r\n            scrollToTop(elm, properties[\"scrollTop\"], duration, callback);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Display an element.\r\n     * @param {Object} elm  \r\n     * @param {String} speed\r\n     * @param {Function} callback\r\n     */\r\n    function show(elm, speed, callback) {\r\n        styler.show(elm);\r\n        if (speed) {\r\n            if (!callback && langx.isFunction(speed)) {\r\n                callback = speed;\r\n                speed = \"normal\";\r\n            }\r\n            styler.css(elm, \"opacity\", 0)\r\n            animate(elm, { opacity: 1, scale: \"1,1\" }, speed, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n\r\n    /*   \r\n     * Hide an element.\r\n     * @param {Object} elm  \r\n     * @param {String} speed\r\n     * @param {Function} callback\r\n     */\r\n    function hide(elm, speed, callback) {\r\n        if (speed) {\r\n            if (!callback && langx.isFunction(speed)) {\r\n                callback = speed;\r\n                speed = \"normal\";\r\n            }\r\n            animate(elm, { opacity: 0, scale: \"0,0\" }, speed, function() {\r\n                styler.hide(elm);\r\n                if (callback) {\r\n                    callback.call(elm);\r\n                }\r\n            });\r\n        } else {\r\n            styler.hide(elm);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Set the vertical position of the scroll bar for an element.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} pos\r\n     * @param {Number or String} speed\r\n     * @param {Function} callback\r\n     */\r\n    function scrollToTop(elm, pos, speed, callback) {\r\n        var scrollFrom = parseInt(elm.scrollTop),\r\n            i = 0,\r\n            runEvery = 5, // run every 5ms\r\n            freq = speed * 1000 / runEvery,\r\n            scrollTo = parseInt(pos);\r\n\r\n        var interval = setInterval(function() {\r\n            i++;\r\n\r\n            if (i <= freq) elm.scrollTop = (scrollTo - scrollFrom) / freq * i + scrollFrom;\r\n\r\n            if (i >= freq + 1) {\r\n                clearInterval(interval);\r\n                if (callback) langx.debounce(callback, 1000)();\r\n            }\r\n        }, runEvery);\r\n    }\r\n\r\n    /*   \r\n     * Display or hide an element.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {Function} callback\r\n     */\r\n    function toggle(elm, speed, callback) {\r\n        if (styler.isInvisible(elm)) {\r\n            show(elm, speed, callback);\r\n        } else {\r\n            hide(elm, speed, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Adjust the opacity of an element.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {Number or String} opacity\r\n     * @param {String} easing\r\n     * @param {Function} callback\r\n     */\r\n    function fadeTo(elm, speed, opacity, easing, callback) {\r\n        animate(elm, { opacity: opacity }, speed, easing, callback);\r\n        return this;\r\n    }\r\n\r\n\r\n    /*   \r\n     * Display an element by fading them to opaque.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {String} easing\r\n     * @param {Function} callback\r\n     */\r\n    function fadeIn(elm, speed, easing, callback) {\r\n        var target = styler.css(elm, \"opacity\");\r\n        if (target > 0) {\r\n            styler.css(elm, \"opacity\", 0);\r\n        } else {\r\n            target = 1;\r\n        }\r\n        styler.show(elm);\r\n\r\n        fadeTo(elm, speed, target, easing, callback);\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Hide an element by fading them to transparent.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {String} easing\r\n     * @param {Function} callback\r\n     */\r\n    function fadeOut(elm, speed, easing, callback) {\r\n        var _elm = elm,\r\n            complete,\r\n            opacity = styler.css(elm,\"opacity\"),\r\n            options = {};\r\n\r\n        if (langx.isPlainObject(speed)) {\r\n            options.easing = speed.easing;\r\n            options.duration = speed.duration;\r\n            complete = speed.complete;\r\n        } else {\r\n            options.duration = speed;\r\n            if (callback) {\r\n                complete = callback;\r\n                options.easing = easing;\r\n            } else {\r\n                complete = easing;\r\n            }\r\n        }\r\n        options.complete = function() {\r\n            styler.css(elm,\"opacity\",opacity);\r\n            styler.hide(elm);\r\n            if (complete) {\r\n                complete.call(elm);\r\n            }\r\n        }\r\n\r\n        fadeTo(elm, options, 0);\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Display or hide an element by animating its opacity.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {String} ceasing\r\n     * @param {Function} callback\r\n     */\r\n    function fadeToggle(elm, speed, ceasing, allback) {\r\n        if (styler.isInvisible(elm)) {\r\n            fadeIn(elm, speed, easing, callback);\r\n        } else {\r\n            fadeOut(elm, speed, easing, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Display an element with a sliding motion.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     */\r\n    function slideDown(elm, duration, callback) {\r\n\r\n        // get the element position to restore it then\r\n        var position = styler.css(elm, 'position');\r\n\r\n        // show element if it is hidden\r\n        show(elm);\r\n\r\n        // place it so it displays as usually but hidden\r\n        styler.css(elm, {\r\n            position: 'absolute',\r\n            visibility: 'hidden'\r\n        });\r\n\r\n        // get naturally height, margin, padding\r\n        var marginTop = styler.css(elm, 'margin-top');\r\n        var marginBottom = styler.css(elm, 'margin-bottom');\r\n        var paddingTop = styler.css(elm, 'padding-top');\r\n        var paddingBottom = styler.css(elm, 'padding-bottom');\r\n        var height = styler.css(elm, 'height');\r\n\r\n        // set initial css for animation\r\n        styler.css(elm, {\r\n            position: position,\r\n            visibility: 'visible',\r\n            overflow: 'hidden',\r\n            height: 0,\r\n            marginTop: 0,\r\n            marginBottom: 0,\r\n            paddingTop: 0,\r\n            paddingBottom: 0\r\n        });\r\n\r\n        // animate to gotten height, margin and padding\r\n        animate(elm, {\r\n            height: height,\r\n            marginTop: marginTop,\r\n            marginBottom: marginBottom,\r\n            paddingTop: paddingTop,\r\n            paddingBottom: paddingBottom\r\n        }, {\r\n            duration: duration,\r\n            complete: function() {\r\n                if (callback) {\r\n                    callback.apply(elm);\r\n                }\r\n            }\r\n        });\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Hide an element with a sliding motion.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     */\r\n    function slideUp(elm, duration, callback) {\r\n        // active the function only if the element is visible\r\n        if (geom.height(elm) > 0) {\r\n\r\n            // get the element position to restore it then\r\n            var position = styler.css(elm, 'position');\r\n\r\n            // get the element height, margin and padding to restore them then\r\n            var height = styler.css(elm, 'height');\r\n            var marginTop = styler.css(elm, 'margin-top');\r\n            var marginBottom = styler.css(elm, 'margin-bottom');\r\n            var paddingTop = styler.css(elm, 'padding-top');\r\n            var paddingBottom = styler.css(elm, 'padding-bottom');\r\n\r\n            // set initial css for animation\r\n            styler.css(elm, {\r\n                visibility: 'visible',\r\n                overflow: 'hidden',\r\n                height: height,\r\n                marginTop: marginTop,\r\n                marginBottom: marginBottom,\r\n                paddingTop: paddingTop,\r\n                paddingBottom: paddingBottom\r\n            });\r\n\r\n            // animate element height, margin and padding to zero\r\n            animate(elm, {\r\n                height: 0,\r\n                marginTop: 0,\r\n                marginBottom: 0,\r\n                paddingTop: 0,\r\n                paddingBottom: 0\r\n            }, {\r\n                // callback : restore the element position, height, margin and padding to original values\r\n                duration: duration,\r\n                queue: false,\r\n                complete: function() {\r\n                    hide(elm);\r\n                    styler.css(elm, {\r\n                        visibility: 'visible',\r\n                        overflow: 'hidden',\r\n                        height: height,\r\n                        marginTop: marginTop,\r\n                        marginBottom: marginBottom,\r\n                        paddingTop: paddingTop,\r\n                        paddingBottom: paddingBottom\r\n                    });\r\n                    if (callback) {\r\n                        callback.apply(elm);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        return this;\r\n    }\r\n\r\n\r\n    /*   \r\n     * Display or hide an element with a sliding motion.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     */\r\n    function slideToggle(elm, duration, callback) {\r\n\r\n        // if the element is hidden, slideDown !\r\n        if (geom.height(elm) == 0) {\r\n            slideDown(elm, duration, callback);\r\n        }\r\n        // if the element is visible, slideUp !\r\n        else {\r\n            slideUp(elm, duration, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function emulateTransitionEnd(elm,duration) {\r\n        var called = false;\r\n        eventer.one(elm,'transitionEnd', function () { \r\n            called = true;\r\n        })\r\n        var callback = function () { \r\n            if (!called) {\r\n                eventer.trigger(elm,'transitionEnd') \r\n            }\r\n        };\r\n        setTimeout(callback, duration);\r\n        \r\n        return this;\r\n    } \r\n\r\n    function fx() {\r\n        return fx;\r\n    }\r\n\r\n    langx.mixin(fx, {\r\n        off: false,\r\n\r\n        speeds: {\r\n            normal: 400,\r\n            fast: 200,\r\n            slow: 600\r\n        },\r\n\r\n        animate,\r\n        emulateTransitionEnd,\r\n        fadeIn,\r\n        fadeOut,\r\n        fadeTo,\r\n        fadeToggle,\r\n        hide,\r\n        scrollToTop,\r\n\r\n        slideDown,\r\n        slideToggle,\r\n        slideUp,\r\n        show,\r\n        toggle\r\n    });\r\n\r\n    return dom.fx = fx;\r\n});\ndefine('skylark-utils-dom/query',[\r\n    \"./dom\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./datax\",\r\n    \"./eventer\",\r\n    \"./finder\",\r\n    \"./geom\",\r\n    \"./styler\",\r\n    \"./fx\"\r\n], function(dom, langx, noder, datax, eventer, finder, geom, styler, fx) {\r\n    var some = Array.prototype.some,\r\n        push = Array.prototype.push,\r\n        every = Array.prototype.every,\r\n        concat = Array.prototype.concat,\r\n        slice = Array.prototype.slice,\r\n        map = Array.prototype.map,\r\n        filter = Array.prototype.filter,\r\n        forEach = Array.prototype.forEach,\r\n        indexOf = Array.prototype.indexOf,\r\n        sort = Array.prototype.sort,\r\n        isQ;\r\n\r\n    var rquickExpr = /^(?:[^#<]*(<[\\w\\W]+>)[^>]*$|#([\\w\\-]*)$)/;\r\n\r\n    var funcArg = langx.funcArg,\r\n        isArrayLike = langx.isArrayLike,\r\n        isString = langx.isString,\r\n        uniq = langx.uniq,\r\n        isFunction = langx.isFunction;\r\n\r\n    var type = langx.type,\r\n        isArray = langx.isArray,\r\n\r\n        isWindow = langx.isWindow,\r\n\r\n        isDocument = langx.isDocument,\r\n\r\n        isObject = langx.isObject,\r\n\r\n        isPlainObject = langx.isPlainObject,\r\n\r\n        compact = langx.compact,\r\n\r\n        flatten = langx.flatten,\r\n\r\n        camelCase = langx.camelCase,\r\n\r\n        dasherize = langx.dasherize,\r\n        children = finder.children;\r\n\r\n    function wrapper_map(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            var result = langx.map(self, function(elem, idx) {\r\n                return func.apply(context, [elem].concat(params));\r\n            });\r\n            return query(uniq(result));\r\n        }\r\n    }\r\n\r\n    function wrapper_selector(func, context, last) {\r\n        return function(selector) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            var result = this.map(function(idx, elem) {\r\n                // if (elem.nodeType == 1) {\r\n                if (elem.querySelector) {\r\n                    return func.apply(context, last ? [elem] : [elem, selector]);\r\n                }\r\n            });\r\n            if (last && selector) {\r\n                return result.filter(selector);\r\n            } else {\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n\r\n    function wrapper_selector_until(func, context, last) {\r\n        return function(util, selector) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            if (selector === undefined) {\r\n                selector = util;\r\n                util = undefined;\r\n            }\r\n            var result = this.map(function(idx, elem) {\r\n                // if (elem.nodeType == 1) {\r\n                if (elem.querySelector) {\r\n                    return func.apply(context, last ? [elem, util] : [elem, selector, util]);\r\n                }\r\n            });\r\n            if (last && selector) {\r\n                return result.filter(selector);\r\n            } else {\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    function wrapper_every_act(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            this.each(function(idx) {\r\n                func.apply(context, [this].concat(params));\r\n            });\r\n            return self;\r\n        }\r\n    }\r\n\r\n    function wrapper_every_act_firstArgFunc(func, context, oldValueFunc) {\r\n        return function(arg1) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            forEach.call(self, function(elem, idx) {\r\n                var newArg1 = funcArg(elem, arg1, idx, oldValueFunc(elem));\r\n                func.apply(context, [elem, arg1].concat(params.slice(1)));\r\n            });\r\n            return self;\r\n        }\r\n    }\r\n\r\n    function wrapper_some_chk(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            return some.call(self, function(elem) {\r\n                return func.apply(context, [elem].concat(params));\r\n            });\r\n        }\r\n    }\r\n\r\n    function wrapper_name_value(func, context, oldValueFunc) {\r\n        return function(name, value) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n\r\n            if (langx.isPlainObject(name) || langx.isDefined(value)) {\r\n                forEach.call(self, function(elem, idx) {\r\n                    var newValue;\r\n                    if (oldValueFunc) {\r\n                        newValue = funcArg(elem, value, idx, oldValueFunc(elem, name));\r\n                    } else {\r\n                        newValue = value\r\n                    }\r\n                    func.apply(context, [elem].concat(params));\r\n                });\r\n                return self;\r\n            } else {\r\n                if (self[0]) {\r\n                    return func.apply(context, [self[0], name]);\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    function wrapper_value(func, context, oldValueFunc) {\r\n        return function(value) {\r\n            var self = this;\r\n\r\n            if (langx.isDefined(value)) {\r\n                forEach.call(self, function(elem, idx) {\r\n                    var newValue;\r\n                    if (oldValueFunc) {\r\n                        newValue = funcArg(elem, value, idx, oldValueFunc(elem));\r\n                    } else {\r\n                        newValue = value\r\n                    }\r\n                    func.apply(context, [elem, newValue]);\r\n                });\r\n                return self;\r\n            } else {\r\n                if (self[0]) {\r\n                    return func.apply(context, [self[0]]);\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    var NodeList = langx.klass({\r\n        klassName: \"SkNodeList\",\r\n        init: function(selector, context) {\r\n            var self = this,\r\n                match, nodes, node, props;\r\n\r\n            if (selector) {\r\n                self.context = context = context || noder.doc();\r\n\r\n                if (isString(selector)) {\r\n                    // a html string or a css selector is expected\r\n                    self.selector = selector;\r\n\r\n                    if (selector.charAt(0) === \"<\" && selector.charAt(selector.length - 1) === \">\" && selector.length >= 3) {\r\n                        match = [null, selector, null];\r\n                    } else {\r\n                        match = rquickExpr.exec(selector);\r\n                    }\r\n\r\n                    if (match) {\r\n                        if (match[1]) {\r\n                            // if selector is html\r\n                            nodes = noder.createFragment(selector);\r\n\r\n                            if (langx.isPlainObject(context)) {\r\n                                props = context;\r\n                            }\r\n\r\n                        } else {\r\n                            node = finder.byId(match[2], noder.ownerDoc(context));\r\n\r\n                            if (node) {\r\n                                // if selector is id\r\n                                nodes = [node];\r\n                            }\r\n\r\n                        }\r\n                    } else {\r\n                        // if selector is css selector\r\n                        if (langx.isString(context)) {\r\n                            context = finder.find(context);\r\n                        }\r\n\r\n                        nodes = finder.descendants(context, selector);\r\n                    }\r\n                } else {\r\n                    if (isArrayLike(selector)) {\r\n                        // a dom node array is expected\r\n                        nodes = selector;\r\n                    } else {\r\n                        // a dom node is expected\r\n                        nodes = [selector];\r\n                    }\r\n                    //self.add(selector, false);\r\n                }\r\n            }\r\n\r\n\r\n            if (nodes) {\r\n\r\n                push.apply(self, nodes);\r\n\r\n                if (props) {\r\n                    for ( var name  in props ) {\r\n                        // Properties of context are called as methods if possible\r\n                        if ( langx.isFunction( this[ name ] ) ) {\r\n                            this[ name ]( props[ name ] );\r\n                        } else {\r\n                            this.attr( name, props[ name ] );\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            return self;\r\n        }\r\n    });\r\n\r\n    var query = (function() {\r\n        isQ = function(object) {\r\n            return object instanceof NodeList;\r\n        }\r\n        init = function(selector, context) {\r\n            return new NodeList(selector, context);\r\n        }\r\n\r\n        var $ = function(selector, context) {\r\n            if (isFunction(selector)) {\r\n                eventer.ready(function() {\r\n                    selector($);\r\n                });\r\n            } else if (isQ(selector)) {\r\n                return selector;\r\n            } else {\r\n                if (context && isQ(context) && isString(selector)) {\r\n                    return context.find(selector);\r\n                }\r\n                return init(selector, context);\r\n            }\r\n        };\r\n\r\n        $.fn = NodeList.prototype;\r\n        langx.mixin($.fn, {\r\n            // `map` and `slice` in the jQuery API work differently\r\n            // from their array counterparts\r\n            length : 0,\r\n\r\n            map: function(fn) {\r\n                return $(uniq(langx.map(this, function(el, i) {\r\n                    return fn.call(el, i, el)\r\n                })));\r\n            },\r\n\r\n            slice: function() {\r\n                return $(slice.apply(this, arguments))\r\n            },\r\n\r\n            forEach: function() {\r\n                return forEach.apply(this,arguments);\r\n            },\r\n\r\n            get: function(idx) {\r\n                return idx === undefined ? slice.call(this) : this[idx >= 0 ? idx : idx + this.length]\r\n            },\r\n\r\n            indexOf: function() {\r\n                return indexOf.apply(this,arguments);\r\n            },\r\n\r\n            sort : function() {\r\n                return sort.apply(this,arguments);\r\n            },\r\n\r\n            toArray: function() {\r\n                return slice.call(this);\r\n            },\r\n\r\n            size: function() {\r\n                return this.length\r\n            },\r\n\r\n            remove: wrapper_every_act(noder.remove, noder),\r\n\r\n            each: function(callback) {\r\n                langx.each(this, callback);\r\n                return this;\r\n            },\r\n\r\n            filter: function(selector) {\r\n                if (isFunction(selector)) return this.not(this.not(selector))\r\n                return $(filter.call(this, function(element) {\r\n                    return finder.matches(element, selector)\r\n                }))\r\n            },\r\n\r\n            add: function(selector, context) {\r\n                return $(uniq(this.toArray().concat($(selector, context).toArray())));\r\n            },\r\n\r\n            is: function(selector) {\r\n                if (this.length > 0) {\r\n                    var self = this;\r\n                    if (langx.isString(selector)) {\r\n                        return some.call(self,function(elem) {\r\n                            return finder.matches(elem, selector);\r\n                        });\r\n                    } else if (langx.isArrayLike(selector)) {\r\n                       return some.call(self,function(elem) {\r\n                            return langx.inArray(elem, selector) > -1;\r\n                        });\r\n                    } else if (langx.isHtmlNode(selector)) {\r\n                       return some.call(self,function(elem) {\r\n                            return elem ==  selector;\r\n                        });\r\n                    }\r\n                }\r\n                return false;\r\n            },\r\n            \r\n            not: function(selector) {\r\n                var nodes = []\r\n                if (isFunction(selector) && selector.call !== undefined)\r\n                    this.each(function(idx) {\r\n                        if (!selector.call(this, idx)) nodes.push(this)\r\n                    })\r\n                else {\r\n                    var excludes = typeof selector == 'string' ? this.filter(selector) :\r\n                        (isArrayLike(selector) && isFunction(selector.item)) ? slice.call(selector) : $(selector)\r\n                    this.forEach(function(el) {\r\n                        if (excludes.indexOf(el) < 0) nodes.push(el)\r\n                    })\r\n                }\r\n                return $(nodes)\r\n            },\r\n\r\n            has: function(selector) {\r\n                return this.filter(function() {\r\n                    return isObject(selector) ?\r\n                        noder.contains(this, selector) :\r\n                        $(this).find(selector).size()\r\n                })\r\n            },\r\n\r\n            eq: function(idx) {\r\n                return idx === -1 ? this.slice(idx) : this.slice(idx, +idx + 1);\r\n            },\r\n\r\n            first: function() {\r\n                return this.eq(0);\r\n            },\r\n\r\n            last: function() {\r\n                return this.eq(-1);\r\n            },\r\n\r\n            find: wrapper_selector(finder.descendants, finder),\r\n\r\n            closest: wrapper_selector(finder.closest, finder),\r\n            /*\r\n                        closest: function(selector, context) {\r\n                            var node = this[0],\r\n                                collection = false\r\n                            if (typeof selector == 'object') collection = $(selector)\r\n                            while (node && !(collection ? collection.indexOf(node) >= 0 : finder.matches(node, selector)))\r\n                                node = node !== context && !isDocument(node) && node.parentNode\r\n                            return $(node)\r\n                        },\r\n            */\r\n\r\n\r\n            parents: wrapper_selector(finder.ancestors, finder),\r\n\r\n            parentsUntil: wrapper_selector_until(finder.ancestors, finder),\r\n\r\n\r\n            parent: wrapper_selector(finder.parent, finder),\r\n\r\n            children: wrapper_selector(finder.children, finder),\r\n\r\n            contents: wrapper_map(noder.contents, noder),\r\n\r\n            empty: wrapper_every_act(noder.empty, noder),\r\n\r\n            // `pluck` is borrowed from Prototype.js\r\n            pluck: function(property) {\r\n                return langx.map(this, function(el) {\r\n                    return el[property]\r\n                })\r\n            },\r\n\r\n            pushStack : function(elms) {\r\n                var ret = $(elms);\r\n                ret.prevObject = this;\r\n                return ret;\r\n            },\r\n            \r\n            replaceWith: function(newContent) {\r\n                return this.before(newContent).remove();\r\n            },\r\n\r\n            wrap: function(structure) {\r\n                var func = isFunction(structure)\r\n                if (this[0] && !func)\r\n                    var dom = $(structure).get(0),\r\n                        clone = dom.parentNode || this.length > 1\r\n\r\n                return this.each(function(index) {\r\n                    $(this).wrapAll(\r\n                        func ? structure.call(this, index) :\r\n                        clone ? dom.cloneNode(true) : dom\r\n                    )\r\n                })\r\n            },\r\n\r\n            wrapAll: function(wrappingElement) {\r\n                if (this[0]) {\r\n                    $(this[0]).before(wrappingElement = $(wrappingElement));\r\n                    var children;\r\n                    // drill down to the inmost element\r\n                    while ((children = wrappingElement.children()).length) {\r\n                        wrappingElement = children.first();\r\n                    }\r\n                    $(wrappingElement).append(this);\r\n                }\r\n                return this\r\n            },\r\n\r\n            wrapInner: function(wrappingElement) {\r\n                var func = isFunction(wrappingElement)\r\n                return this.each(function(index) {\r\n                    var self = $(this),\r\n                        contents = self.contents(),\r\n                        dom = func ? wrappingElement.call(this, index) : wrappingElement\r\n                    contents.length ? contents.wrapAll(dom) : self.append(dom)\r\n                })\r\n            },\r\n\r\n            unwrap: function(selector) {\r\n                if (this.parent().children().length === 0) {\r\n                    // remove dom without text\r\n                    this.parent(selector).not(\"body\").each(function() {\r\n                        $(this).replaceWith(document.createTextNode(this.childNodes[0].textContent));\r\n                    });\r\n                } else {\r\n                    this.parent().each(function() {\r\n                        $(this).replaceWith($(this).children())\r\n                    });\r\n                }\r\n                return this\r\n            },\r\n\r\n            clone: function() {\r\n                return this.map(function() {\r\n                    return this.cloneNode(true)\r\n                })\r\n            },\r\n\r\n            hide: wrapper_every_act(fx.hide, fx),\r\n\r\n            toggle: function(setting) {\r\n                return this.each(function() {\r\n                    var el = $(this);\r\n                    (setting === undefined ? el.css(\"display\") == \"none\" : setting) ? el.show(): el.hide()\r\n                })\r\n            },\r\n\r\n            prev: function(selector) {\r\n                return $(this.pluck('previousElementSibling')).filter(selector || '*')\r\n            },\r\n\r\n            prevAll: wrapper_selector(finder.previousSibling, finder),\r\n\r\n            next: function(selector) {\r\n                return $(this.pluck('nextElementSibling')).filter(selector || '*')\r\n            },\r\n\r\n            nextAll: wrapper_selector(finder.nextSiblings, finder),\r\n\r\n            siblings: wrapper_selector(finder.siblings, finder),\r\n\r\n            html: wrapper_value(noder.html, noder, noder.html),\r\n\r\n            text: wrapper_value(datax.text, datax, datax.text),\r\n\r\n            attr: wrapper_name_value(datax.attr, datax, datax.attr),\r\n\r\n            removeAttr: wrapper_every_act(datax.removeAttr, datax),\r\n\r\n            prop: wrapper_name_value(datax.prop, datax, datax.prop),\r\n\r\n            removeProp: wrapper_every_act(datax.removeProp, datax),\r\n\r\n            data: wrapper_name_value(datax.data, datax, datax.data),\r\n\r\n            removeData: wrapper_every_act(datax.removeData, datax),\r\n\r\n            val: wrapper_value(datax.val, datax, datax.val),\r\n\r\n            offset: wrapper_value(geom.pagePosition, geom, geom.pagePosition),\r\n\r\n            style: wrapper_name_value(styler.css, styler),\r\n\r\n            css: wrapper_name_value(styler.css, styler),\r\n\r\n            index: function(elem) {\r\n                if (elem) {\r\n                    return this.indexOf($(elem)[0]);\r\n                } else {\r\n                    return this.parent().children().indexOf(this[0]);\r\n                }\r\n            },\r\n\r\n            //hasClass(name)\r\n            hasClass: wrapper_some_chk(styler.hasClass, styler),\r\n\r\n            //addClass(name)\r\n            addClass: wrapper_every_act_firstArgFunc(styler.addClass, styler, styler.className),\r\n\r\n            //removeClass(name)\r\n            removeClass: wrapper_every_act_firstArgFunc(styler.removeClass, styler, styler.className),\r\n\r\n            //toogleClass(name,when)\r\n            toggleClass: wrapper_every_act_firstArgFunc(styler.toggleClass, styler, styler.className),\r\n\r\n            scrollTop: wrapper_value(geom.scrollTop, geom),\r\n\r\n            scrollLeft: wrapper_value(geom.scrollLeft, geom),\r\n\r\n            position: function(options) {\r\n                if (!this.length) return\r\n\r\n                if (options) {\r\n                    if (options.of && options.of.length) {\r\n                        options = langx.clone(options);\r\n                        options.of = options.of[0];\r\n                    }\r\n                    return this.each( function() {\r\n                        geom.posit(this,options);\r\n                    });\r\n                } else {\r\n                    var elem = this[0];\r\n\r\n                    return geom.relativePosition(elem);\r\n\r\n                }             \r\n            },\r\n\r\n            offsetParent: wrapper_map(geom.offsetParent, geom)\r\n        });\r\n\r\n        // for now\r\n        $.fn.detach = $.fn.remove;\r\n\r\n        $.fn.hover = function(fnOver, fnOut) {\r\n            return this.mouseenter(fnOver).mouseleave(fnOut || fnOver);\r\n        };\r\n\r\n        $.fn.size = wrapper_value(geom.size, geom);\r\n\r\n        $.fn.width = wrapper_value(geom.width, geom, geom.width);\r\n\r\n        $.fn.height = wrapper_value(geom.height, geom, geom.height);\r\n\r\n        $.fn.clientSize = wrapper_value(geom.clientSize, geom.clientSize);\r\n\r\n        ['width', 'height'].forEach(function(dimension) {\r\n            var offset, Dimension = dimension.replace(/./, function(m) {\r\n                return m[0].toUpperCase()\r\n            });\r\n\r\n            $.fn['outer' + Dimension] = function(margin, value) {\r\n                if (arguments.length) {\r\n                    if (typeof margin !== 'boolean') {\r\n                        value = margin;\r\n                        margin = false;\r\n                    }\r\n                } else {\r\n                    margin = false;\r\n                    value = undefined;\r\n                }\r\n\r\n                if (value === undefined) {\r\n                    var el = this[0];\r\n                    if (!el) {\r\n                        return undefined;\r\n                    }\r\n                    var cb = geom.size(el);\r\n                    if (margin) {\r\n                        var me = geom.marginExtents(el);\r\n                        cb.width = cb.width + me.left + me.right;\r\n                        cb.height = cb.height + me.top + me.bottom;\r\n                    }\r\n                    return dimension === \"width\" ? cb.width : cb.height;\r\n                } else {\r\n                    return this.each(function(idx, el) {\r\n                        var mb = {};\r\n                        var me = geom.marginExtents(el);\r\n                        if (dimension === \"width\") {\r\n                            mb.width = value;\r\n                            if (margin) {\r\n                                mb.width = mb.width - me.left - me.right\r\n                            }\r\n                        } else {\r\n                            mb.height = value;\r\n                            if (margin) {\r\n                                mb.height = mb.height - me.top - me.bottom;\r\n                            }\r\n                        }\r\n                        geom.size(el, mb);\r\n                    })\r\n\r\n                }\r\n            };\r\n        })\r\n\r\n        $.fn.innerWidth = wrapper_value(geom.clientWidth, geom, geom.clientWidth);\r\n\r\n        $.fn.innerHeight = wrapper_value(geom.clientHeight, geom, geom.clientHeight);\r\n\r\n        var traverseNode = noder.traverse;\r\n\r\n        function wrapper_node_operation(func, context, oldValueFunc) {\r\n            return function(html) {\r\n                var argType, nodes = langx.map(arguments, function(arg) {\r\n                    argType = type(arg)\r\n                    return argType == \"object\" || argType == \"array\" || arg == null ?\r\n                        arg : noder.createFragment(arg)\r\n                });\r\n                if (nodes.length < 1) {\r\n                    return this\r\n                }\r\n                this.each(function(idx) {\r\n                    func.apply(context, [this, nodes, idx > 0]);\r\n                });\r\n                return this;\r\n            }\r\n        }\r\n\r\n\r\n        $.fn.after = wrapper_node_operation(noder.after, noder);\r\n\r\n        $.fn.prepend = wrapper_node_operation(noder.prepend, noder);\r\n\r\n        $.fn.before = wrapper_node_operation(noder.before, noder);\r\n\r\n        $.fn.append = wrapper_node_operation(noder.append, noder);\r\n\r\n\r\n        langx.each( {\r\n            appendTo: \"append\",\r\n            prependTo: \"prepend\",\r\n            insertBefore: \"before\",\r\n            insertAfter: \"after\",\r\n            replaceAll: \"replaceWith\"\r\n        }, function( name, original ) {\r\n            $.fn[ name ] = function( selector ) {\r\n                var elems,\r\n                    ret = [],\r\n                    insert = $( selector ),\r\n                    last = insert.length - 1,\r\n                    i = 0;\r\n\r\n                for ( ; i <= last; i++ ) {\r\n                    elems = i === last ? this : this.clone( true );\r\n                    $( insert[ i ] )[ original ]( elems );\r\n\r\n                    // Support: Android <=4.0 only, PhantomJS 1 only\r\n                    // .get() because push.apply(_, arraylike) throws on ancient WebKit\r\n                    push.apply( ret, elems.get() );\r\n                }\r\n\r\n                return this.pushStack( ret );\r\n            };\r\n        } );\r\n\r\n/*\r\n        $.fn.insertAfter = function(html) {\r\n            $(html).after(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.insertBefore = function(html) {\r\n            $(html).before(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.appendTo = function(html) {\r\n            $(html).append(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.prependTo = function(html) {\r\n            $(html).prepend(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.replaceAll = function(selector) {\r\n            $(selector).replaceWith(this);\r\n            return this;\r\n        };\r\n*/\r\n        return $;\r\n    })();\r\n\r\n    (function($) {\r\n        $.fn.on = wrapper_every_act(eventer.on, eventer);\r\n\r\n        $.fn.off = wrapper_every_act(eventer.off, eventer);\r\n\r\n        $.fn.trigger = wrapper_every_act(eventer.trigger, eventer);\r\n\r\n        ('focusin focusout focus blur load resize scroll unload click dblclick ' +\r\n            'mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave ' +\r\n            'change select keydown keypress keyup error transitionEnd').split(' ').forEach(function(event) {\r\n            $.fn[event] = function(data, callback) {\r\n                return (0 in arguments) ?\r\n                    this.on(event, data, callback) :\r\n                    this.trigger(event)\r\n            }\r\n        });\r\n\r\n        $.fn.one = function(event, selector, data, callback) {\r\n            if (!langx.isString(selector) && !langx.isFunction(callback)) {\r\n                callback = data;\r\n                data = selector;\r\n                selector = null;\r\n            }\r\n\r\n            if (langx.isFunction(data)) {\r\n                callback = data;\r\n                data = null;\r\n            }\r\n\r\n            return this.on(event, selector, data, callback, 1)\r\n        };\r\n\r\n        $.fn.animate = wrapper_every_act(fx.animate, fx);\r\n        $.fn.emulateTransitionEnd = wrapper_every_act(fx.emulateTransitionEnd, fx);\r\n\r\n        $.fn.show = wrapper_every_act(fx.show, fx);\r\n        $.fn.hide = wrapper_every_act(fx.hide, fx);\r\n        $.fn.toogle = wrapper_every_act(fx.toogle, fx);\r\n        $.fn.fadeTo = wrapper_every_act(fx.fadeTo, fx);\r\n        $.fn.fadeIn = wrapper_every_act(fx.fadeIn, fx);\r\n        $.fn.fadeOut = wrapper_every_act(fx.fadeOut, fx);\r\n        $.fn.fadeToggle = wrapper_every_act(fx.fadeToggle, fx);\r\n\r\n        $.fn.slideDown = wrapper_every_act(fx.slideDown, fx);\r\n        $.fn.slideToggle = wrapper_every_act(fx.slideToggle, fx);\r\n        $.fn.slideUp = wrapper_every_act(fx.slideUp, fx);\r\n\r\n        $.fn.scrollParent = function( includeHidden ) {\r\n            var position = this.css( \"position\" ),\r\n                excludeStaticParent = position === \"absolute\",\r\n                overflowRegex = includeHidden ? /(auto|scroll|hidden)/ : /(auto|scroll)/,\r\n                scrollParent = this.parents().filter( function() {\r\n                    var parent = $( this );\r\n                    if ( excludeStaticParent && parent.css( \"position\" ) === \"static\" ) {\r\n                        return false;\r\n                    }\r\n                    return overflowRegex.test( parent.css( \"overflow\" ) + parent.css( \"overflow-y\" ) +\r\n                        parent.css( \"overflow-x\" ) );\r\n                } ).eq( 0 );\r\n\r\n            return position === \"fixed\" || !scrollParent.length ?\r\n                $( this[ 0 ].ownerDocument || document ) :\r\n                scrollParent;\r\n        };\r\n    })(query);\r\n\r\n\r\n    (function($) {\r\n        $.fn.end = function() {\r\n            return this.prevObject || $()\r\n        }\r\n\r\n        $.fn.andSelf = function() {\r\n            return this.add(this.prevObject || $())\r\n        }\r\n\r\n        $.fn.addBack = function(selector) {\r\n            if (this.prevObject) {\r\n                if (selector) {\r\n                    return this.add(this.prevObject.filter(selector));\r\n                } else {\r\n                    return this.add(this.prevObject);\r\n                }\r\n            } else {\r\n                return this;\r\n            }\r\n        }\r\n\r\n        'filter,add,not,eq,first,last,find,closest,parents,parent,children,siblings'.split(',').forEach(function(property) {\r\n            var fn = $.fn[property]\r\n            $.fn[property] = function() {\r\n                var ret = fn.apply(this, arguments)\r\n                ret.prevObject = this\r\n                return ret\r\n            }\r\n        })\r\n    })(query);\r\n\r\n\r\n    (function($) {\r\n        $.fn.query = $.fn.find;\r\n\r\n        $.fn.place = function(refNode, position) {\r\n            // summary:\r\n            //      places elements of this node list relative to the first element matched\r\n            //      by queryOrNode. Returns the original NodeList. See: `dojo/dom-construct.place`\r\n            // queryOrNode:\r\n            //      may be a string representing any valid CSS3 selector or a DOM node.\r\n            //      In the selector case, only the first matching element will be used\r\n            //      for relative positioning.\r\n            // position:\r\n            //      can be one of:\r\n            //\r\n            //      -   \"last\" (default)\r\n            //      -   \"first\"\r\n            //      -   \"before\"\r\n            //      -   \"after\"\r\n            //      -   \"only\"\r\n            //      -   \"replace\"\r\n            //\r\n            //      or an offset in the childNodes\r\n            if (langx.isString(refNode)) {\r\n                refNode = finder.descendant(refNode);\r\n            } else if (isQ(refNode)) {\r\n                refNode = refNode[0];\r\n            }\r\n            return this.each(function(i, node) {\r\n                switch (position) {\r\n                    case \"before\":\r\n                        noder.before(refNode, node);\r\n                        break;\r\n                    case \"after\":\r\n                        noder.after(refNode, node);\r\n                        break;\r\n                    case \"replace\":\r\n                        noder.replace(refNode, node);\r\n                        break;\r\n                    case \"only\":\r\n                        noder.empty(refNode);\r\n                        noder.append(refNode, node);\r\n                        break;\r\n                    case \"first\":\r\n                        noder.prepend(refNode, node);\r\n                        break;\r\n                        // else fallthrough...\r\n                    default: // aka: last\r\n                        noder.append(refNode, node);\r\n                }\r\n            });\r\n        };\r\n\r\n        $.fn.addContent = function(content, position) {\r\n            if (content.template) {\r\n                content = langx.substitute(content.template, content);\r\n            }\r\n            return this.append(content);\r\n        };\r\n\r\n        $.fn.replaceClass = function(newClass, oldClass) {\r\n            this.removeClass(oldClass);\r\n            this.addClass(newClass);\r\n            return this;\r\n        };\r\n\r\n        $.fn.replaceClass = function(newClass, oldClass) {\r\n            this.removeClass(oldClass);\r\n            this.addClass(newClass);\r\n            return this;\r\n        };\r\n\r\n        $.fn.disableSelection = ( function() {\r\n            var eventType = \"onselectstart\" in document.createElement( \"div\" ) ?\r\n                \"selectstart\" :\r\n                \"mousedown\";\r\n\r\n            return function() {\r\n                return this.on( eventType + \".ui-disableSelection\", function( event ) {\r\n                    event.preventDefault();\r\n                } );\r\n            };\r\n        } )();\r\n\r\n        $.fn.enableSelection = function() {\r\n            return this.off( \".ui-disableSelection\" );\r\n        };\r\n       \r\n\r\n    })(query);\r\n\r\n    query.fn.plugin = function(name,options) {\r\n        var args = slice.call( arguments, 1 ),\r\n            self = this,\r\n            returnValue = this;\r\n\r\n        this.each(function(){\r\n            returnValue = plugins.instantiate.apply(self,[this,name].concat(args));\r\n        });\r\n        return returnValue;\r\n    };\r\n\r\n    return dom.query = query;\r\n\r\n});\ndefine('skylark-utils-dom/images',[\r\n    \"./dom\",\r\n    \"./langx\",\r\n    \"./eventer\",\r\n    \"./noder\",\r\n    \"./finder\",\r\n    \"./geom\",\r\n    \"./styler\",\r\n    \"./datax\",\r\n    \"./transforms\",\r\n    \"./query\"\r\n], function(dom,langx,eventer,noder,finder,geom,styler,datax,transforms,$) {\r\n\r\n  function watch(imgs) {\r\n    if (!langx.isArray(imgs)) {\r\n      imgs = [imgs];\r\n    }\r\n    var totalCount = imgs.length,\r\n        progressedCount = 0,\r\n        successedCount = 0,\r\n        faileredCount = 0,\r\n        d = new langx.Deferred();\r\n\r\n\r\n    function complete() {\r\n\r\n      d.resolve({\r\n        \"total\" : totalCount,\r\n        \"successed\" : successedCount,\r\n        \"failered\" : faileredCount,\r\n        \"imgs\" : imgs \r\n      });\r\n    }\r\n\r\n    function progress(img,isLoaded) {\r\n\r\n      progressedCount++;\r\n      if (isLoaded) {\r\n        successedCount ++ ; \r\n      } else {\r\n        faileredCount ++ ;\r\n      }\r\n\r\n      // progress event\r\n      d.progress({\r\n        \"img\" : img,\r\n        \"isLoaded\" : isLoaded,\r\n        \"progressed\" : progressedCount,\r\n        \"total\" : totalCount,\r\n        \"imgs\" : imgs \r\n      });\r\n\r\n      // check if completed\r\n      if ( progressedCount == totalCount ) {\r\n        complete();\r\n      }\r\n    }\r\n\r\n    function check() {\r\n      if (!imgs.length ) {\r\n        complete();\r\n        return;\r\n      }\r\n\r\n      imgs.forEach(function(img) {\r\n        if (isCompleted(img)) {\r\n          progress(img,isLoaded(img));\r\n        } else {\r\n          eventer.on(img,{\r\n            \"load\" : function() {\r\n              progress(img,true);\r\n            },\r\n\r\n            \"error\" : function() {\r\n              progress(img,false);\r\n            }\r\n          });      \r\n        }\r\n      });\r\n    }\r\n\r\n    langx.defer(check);\r\n\r\n    d.promise.totalCount = totalCount;\r\n    return d.promise;\r\n  }\r\n\r\n\r\n  function isCompleted(img) {\r\n     return img.complete && img.naturalWidth !== undefined;\r\n  }\r\n\r\n  function isLoaded(img) {\r\n    return img.complete && img.naturalWidth !== 0;\r\n  }\r\n\r\n  function loaded(elm,options) {\r\n    var imgs = [];\r\n\r\n    options = options || {};\r\n\r\n    function addBackgroundImage (elm1) {\r\n\r\n      var reURL = /url\\((['\"])?(.*?)\\1\\)/gi;\r\n      var matches = reURL.exec( styler.css(elm1,\"background-image\"));\r\n      var url = matches && matches[2];\r\n      if ( url ) {\r\n        var img = new Image();\r\n        img.src = url;\r\n        imgs.push(img);\r\n      }\r\n    }\r\n\r\n    // filter siblings\r\n    if ( elm.nodeName == 'IMG' ) {\r\n      imgs.push( elm );\r\n    } else {\r\n      // find children\r\n      var childImgs = finder.findAll(elm,'img');\r\n      // concat childElems to filterFound array\r\n      for ( var i=0; i < childImgs.length; i++ ) {\r\n        imgs.push(childImgs[i]);\r\n      }\r\n\r\n      // get background image on element\r\n      if ( options.background === true ) {\r\n        addBackgroundImage(elm);\r\n      } else  if ( typeof options.background == 'string' ) {\r\n        var children = finder.findAll(elm, options.background );\r\n        for ( i=0; i < children.length; i++ ) {\r\n          addBackgroundImage( children[i] );\r\n        }\r\n      }\r\n    }\r\n\r\n    return watch(imgs);\r\n  }\r\n\r\n  function preload(urls,options) {\r\n      if (langx.isString(urls)) {\r\n        urls = [urls];\r\n      }\r\n      var images = [];\r\n\r\n      urls.forEach(function(url){\r\n        var img = new Image();\r\n        img.src = url;\r\n        images.push(img);\r\n      });\r\n\r\n      return watch(images);\r\n  }\r\n\r\n\r\n  $.fn.imagesLoaded = function( options ) {\r\n    return loaded(this,options);\r\n  };\r\n\r\n\r\n  function viewer(el,options) {\r\n    var img ,\r\n        style = {},\r\n        clientSize = geom.clientSize(el),\r\n        loadedCallback = options.loaded,\r\n        faileredCallback = options.failered;\r\n\r\n    function onload() {\r\n        styler.css(img,{//居中\r\n          top: (clientSize.height - img.offsetHeight) / 2 + \"px\",\r\n          left: (clientSize.width - img.offsetWidth) / 2 + \"px\"\r\n        });\r\n\r\n        transforms.reset(img);\r\n\r\n        styler.css(img,{\r\n          visibility: \"visible\"\r\n        });\r\n\r\n        if (loadedCallback) {\r\n          loadedCallback();\r\n        }\r\n    }\r\n\r\n    function onerror() {\r\n\r\n    }\r\n    function _init() {\r\n      style = styler.css(el,[\"position\",\"overflow\"]);\r\n      if (style.position != \"relative\" && style.position != \"absolute\") { \r\n        styler.css(el,\"position\", \"relative\" );\r\n      }\r\n      styler.css(el,\"overflow\", \"hidden\" );\r\n\r\n      img = new Image();\r\n\r\n      styler.css(img,{\r\n        position: \"absolute\",\r\n        border: 0, padding: 0, margin: 0, width: \"auto\", height: \"auto\",\r\n        visibility: \"hidden\"\r\n      });\r\n\r\n      img.onload = onload;\r\n      img.onerror = onerror;\r\n\r\n      noder.append(el,img);\r\n\r\n      if (options.url) {\r\n        _load(options.url);\r\n      }\r\n    }\r\n\r\n    function _load(url) {\r\n        img.style.visibility = \"hidden\";\r\n        img.src = url;\r\n    }\r\n\r\n    function _dispose() {\r\n        noder.remove(img);\r\n        styler.css(el,style);\r\n        img = img.onload = img.onerror = null;\r\n    }\r\n\r\n    _init();\r\n\r\n    var ret =  {\r\n      load : _load,\r\n      dispose : _dispose\r\n    };\r\n\r\n    [\"vertical\",\"horizontal\",\"rotate\",\"left\",\"right\",\"scale\",\"zoom\",\"zoomin\",\"zoomout\",\"reset\"].forEach(\r\n      function(name){\r\n        ret[name] = function() {\r\n          var args = langx.makeArray(arguments);\r\n          args.unshift(img);\r\n          transforms[name].apply(null,args);\r\n        }\r\n      }\r\n    );\r\n\r\n    return ret;\r\n  }\r\n\r\n  $.fn.imagesViewer = function( options ) {\r\n    return viewer(this,options);\r\n  };\r\n\r\n  function images() {\r\n    return images;\r\n  }\r\n\r\n  images.transform = function (el,options) {\r\n  };\r\n\r\n  [\"vertical\",\"horizontal\",\"rotate\",\"left\",\"right\",\"scale\",\"zoom\",\"zoomin\",\"zoomout\",\"reset\"].forEach(\r\n    function(name){\r\n      images.transform[name] = transforms[name];\r\n    }\r\n  );\r\n\r\n\r\n  langx.mixin(images, {\r\n    isCompleted : isCompleted,\r\n\r\n    isLoaded : isLoaded,\r\n\r\n    loaded : loaded,\r\n\r\n    preload : preload,\r\n\r\n    viewer : viewer\r\n  });\r\n\r\n  return dom.images = images;\r\n});\r\n\ndefine('skylark-utils-imagex/images',[\r\n\t\"skylark-utils-dom/images\"\r\n],function(images){\r\n\treturn images;\r\n});\ndefine('skylark-utils-imagex/main',[\r\n\t\"./images\"\r\n],function(images){\r\n\treturn images;\r\n});\ndefine('skylark-utils-imagex', ['skylark-utils-imagex/main'], function (main) { return main; });\n\n"]}