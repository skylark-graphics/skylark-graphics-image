/**
 * skylark-utils-imagex - The skylark imagex utility library
 * @author Hudaokeji Co.,Ltd
 * @version v0.9.0
 * @link www.skylarkjs.org
 * @license MIT
 */
define(["./images"],function(e){"use strict";var i=function(){};return(i.ExifMap=function(){return this}).prototype.map={Orientation:274},i.ExifMap.prototype.get=function(e){return this[e]||this[this.map[e]]},i.getExifThumbnail=function(e,i,t){if(t&&!(i+t>e.byteLength))return loadImage.createObjectURL(new Blob([e.buffer.slice(i,i+t)]));console.log("Invalid Exif data: Invalid thumbnail data.")},(i.exifTagTypes={1:{getValue:function(e,i){return e.getUint8(i)},size:1},2:{getValue:function(e,i){return String.fromCharCode(e.getUint8(i))},size:1,ascii:!0},3:{getValue:function(e,i,t){return e.getUint16(i,t)},size:2},4:{getValue:function(e,i,t){return e.getUint32(i,t)},size:4},5:{getValue:function(e,i,t){return e.getUint32(i,t)/e.getUint32(i+4,t)},size:8},9:{getValue:function(e,i,t){return e.getInt32(i,t)},size:4},10:{getValue:function(e,i,t){return e.getInt32(i,t)/e.getInt32(i+4,t)},size:8}})[7]=i.exifTagTypes[1],i.getExifValue=function(e,t,n,a,f,s){var r,g,l,o,u,x,d=i.exifTagTypes[a];if(d){if(!((g=(r=d.size*f)>4?t+e.getUint32(n+8,s):n+8)+r>e.byteLength)){if(1===f)return d.getValue(e,g,s);for(l=[],o=0;o<f;o+=1)l[o]=d.getValue(e,g+o*d.size,s);if(d.ascii){for(u="",o=0;o<l.length&&"\0"!==(x=l[o]);o+=1)u+=x;return u}return l}console.log("Invalid Exif data: Invalid data offset.")}else console.log("Invalid Exif data: Invalid tag type.")},i.parseExifTag=function(e,t,n,a,f){var s=e.getUint16(n,a);f.exif[s]=i.getExifValue(e,t,n,e.getUint16(n+2,a),e.getUint32(n+4,a),a)},i.parseExifTags=function(e,i,t,n,a){var f,s,r;if(t+6>e.byteLength)console.log("Invalid Exif data: Invalid directory offset.");else{if(!((s=t+2+12*(f=e.getUint16(t,n)))+4>e.byteLength)){for(r=0;r<f;r+=1)this.parseExifTag(e,i,t+2+12*r,n,a);return e.getUint32(s,n)}console.log("Invalid Exif data: Invalid directory size.")}},i.parseExifData=function(e,t,n,a,f){if(!f.disableExif){var s,r,g,l=t+10;if(1165519206===e.getUint32(t+4))if(l+8>e.byteLength)console.log("Invalid Exif data: Invalid segment size.");else if(0===e.getUint16(t+8)){switch(e.getUint16(l)){case 18761:s=!0;break;case 19789:s=!1;break;default:return void console.log("Invalid Exif data: Invalid byte alignment marker.")}42===e.getUint16(l+2,s)?(r=e.getUint32(l+4,s),a.exif=new i.ExifMap,(r=i.parseExifTags(e,l,l+r,s,a))&&!f.disableExifThumbnail&&(r=i.parseExifTags(e,l,l+r,s,g={exif:{}}),g.exif[513]&&(a.exif.Thumbnail=i.getExifThumbnail(e,l+g.exif[513],g.exif[514]))),a.exif[34665]&&!f.disableExifSub&&i.parseExifTags(e,l,l+a.exif[34665],s,a),a.exif[34853]&&!f.disableExifGps&&i.parseExifTags(e,l,l+a.exif[34853],s,a)):console.log("Invalid Exif data: Missing TIFF marker.")}else console.log("Invalid Exif data: Missing byte alignment offset.")}},i.metaDataParsers.jpeg[65505].push(i.parseExifData),e.exif=i});
//# sourceMappingURL=sourcemaps/exif.js.map
